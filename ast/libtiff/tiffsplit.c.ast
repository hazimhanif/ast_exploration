SOURCE_FILE	46:7	262:0	0	
SIMPLE_DECL	46:7	46:40	1	const char [ ] TIFF_SUFFIX ; TIFF_SUFFIX = ".tif" ;
VAR_DECL	46:7	46:18	2	const char [ ] TIFF_SUFFIX ; TIFF_SUFFIX = ".tif"
TYPE	46:7	46:29	3	const char [ ]
TYPE_NAME	46:7	46:13	4	const char
LEAF_NODE	46:7	46:7	5	const
LEAF_NODE	46:13	46:13	5	char
TYPE_SUFFIX	46:29	46:30	4	[ ]
LEAF_NODE	46:29	46:29	5	[
LEAF_NODE	46:30	46:30	5	]
NAME	46:18	46:18	3	TIFF_SUFFIX
LEAF_NODE	46:18	46:18	4	TIFF_SUFFIX
LEAF_NODE	0:0	0:0	3	;
INIT	46:18	46:18	3	TIFF_SUFFIX = ".tif"
ASSIGN	46:18	46:34	4	TIFF_SUFFIX = ".tif"
LVAL	46:18	46:18	5	TIFF_SUFFIX
NAME	46:18	46:18	6	TIFF_SUFFIX
LEAF_NODE	46:18	46:18	7	TIFF_SUFFIX
ASSIGN_OP	46:32	46:32	5	=
LEAF_NODE	46:32	46:32	6	=
RVAL	46:34	46:34	5	".tif"
FIELD	46:34	46:34	6	".tif"
LEAF_NODE	46:34	46:34	7	".tif"
LEAF_NODE	46:40	46:40	2	;
SIMPLE_DECL	48:7	48:30	1	char [ PATH_LENGTH ] fname ;
VAR_DECL	48:7	48:12	2	char [ PATH_LENGTH ] fname
TYPE	48:7	48:17	3	char [ PATH_LENGTH ]
TYPE_NAME	48:7	48:7	4	char
LEAF_NODE	48:7	48:7	5	char
TYPE_SUFFIX	48:17	48:29	4	[ PATH_LENGTH ]
LEAF_NODE	48:17	48:17	5	[
FIELD	48:18	48:18	5	PATH_LENGTH
LEAF_NODE	48:18	48:18	6	PATH_LENGTH
LEAF_NODE	48:29	48:29	5	]
NAME	48:12	48:12	3	fname
LEAF_NODE	48:12	48:12	4	fname
LEAF_NODE	48:30	48:30	2	;
SIMPLE_DECL	51:7	51:29	1	void newfilename ; newfilename newfilename ( void ) ;
VAR_DECL	51:7	51:12	2	void newfilename ; newfilename newfilename ( void )
TYPE	51:7	51:7	3	void
TYPE_NAME	51:7	51:7	4	void
LEAF_NODE	51:7	51:7	5	void
NAME	51:12	51:12	3	newfilename
LEAF_NODE	51:12	51:12	4	newfilename
LEAF_NODE	0:0	0:0	3	;
INIT	51:12	51:12	3	newfilename newfilename ( void )
ASSIGN	51:12	51:23	4	newfilename newfilename ( void )
LVAL	51:12	51:12	5	newfilename
NAME	51:12	51:12	6	newfilename
LEAF_NODE	51:12	51:12	7	newfilename
ASSIGN_OP	51:12	51:12	5	newfilename
NAME	51:12	51:12	6	newfilename
LEAF_NODE	51:12	51:12	7	newfilename
RVAL	51:23	51:28	5	( void )
LEAF_NODE	51:23	51:23	6	(
EXPR	51:24	51:24	6	void
FIELD	51:24	51:24	7	void
LEAF_NODE	51:24	51:24	8	void
LEAF_NODE	51:28	51:28	6	)
LEAF_NODE	51:29	51:29	2	;
FUNCTION_DEF	55:0	94:0	1	
RETURN_TYPE	55:0	55:0	2	int
TYPE_NAME	55:0	55:0	3	int
LEAF_NODE	55:0	55:0	4	int
FUNCTION_NAME	56:0	56:0	2	main
LEAF_NODE	56:0	56:0	3	main
PARAMETER_LIST	56:4	56:27	2	( int argc , char * [ ] argv )
LEAF_NODE	56:4	56:4	3	(
PARAMETER_DECL	56:5	56:9	3	int argc
TYPE	56:5	56:5	4	int
TYPE_NAME	56:5	56:5	5	int
LEAF_NODE	56:5	56:5	6	int
NAME	56:9	56:9	4	argc
LEAF_NODE	56:9	56:9	5	argc
LEAF_NODE	56:13	56:13	3	,
PARAMETER_DECL	56:15	56:21	3	char * [ ] argv
TYPE	56:15	56:25	4	char * [ ]
TYPE_NAME	56:15	56:15	5	char
LEAF_NODE	56:15	56:15	6	char
POINTER	56:19	56:19	5	*
LEAF_NODE	56:19	56:19	6	*
TYPE_SUFFIX	56:25	56:26	5	[ ]
LEAF_NODE	56:25	56:25	6	[
LEAF_NODE	56:26	56:26	6	]
NAME	56:21	56:21	4	argv
LEAF_NODE	56:21	56:21	5	argv
LEAF_NODE	56:27	56:27	3	)
LEAF_NODE	57:0	57:0	2	{
STATEMENTS	58:1	93:1	2	
SIMPLE_DECL	58:1	58:15	3	TIFF * in , TIFF * out ;
INIT_DECL_LIST	58:1	58:1	4	TIFF * in , TIFF * out
VAR_DECL	58:1	58:7	5	TIFF * in
TYPE	58:1	58:6	6	TIFF *
TYPE_NAME	58:1	58:1	7	TIFF
LEAF_NODE	58:1	58:1	8	TIFF
POINTER	58:6	58:6	7	*
LEAF_NODE	58:6	58:6	8	*
NAME	58:7	58:7	6	in
LEAF_NODE	58:7	58:7	7	in
LEAF_NODE	58:9	58:9	5	,
VAR_DECL	58:1	58:12	5	TIFF * out
TYPE	58:1	58:11	6	TIFF *
TYPE_NAME	58:1	58:1	7	TIFF
LEAF_NODE	58:1	58:1	8	TIFF
POINTER	58:11	58:11	7	*
LEAF_NODE	58:11	58:11	8	*
NAME	58:12	58:12	6	out
LEAF_NODE	58:12	58:12	7	out
LEAF_NODE	58:15	58:15	4	;
SELECTION	60:1	60:15	3	
KEYWORD	60:1	60:1	4	if
LEAF_NODE	60:1	60:1	5	if
LEAF_NODE	60:4	60:4	4	(
CONDITION	60:5	60:5	4	argc < 2
EXPR	60:5	60:12	5	argc < 2
FIELD	60:5	60:5	6	argc
LEAF_NODE	60:5	60:5	7	argc
REL_OPERATOR	60:10	60:10	6	<
LEAF_NODE	60:10	60:10	7	<
FIELD	60:12	60:12	6	2
LEAF_NODE	60:12	60:12	7	2
LEAF_NODE	60:13	60:13	4	)
STATEMENTS	60:15	64:1	4	
LEAF_NODE	60:15	60:15	5	{
STATEMENTS	61:16	63:2	5	
EXPR_STATEMENT	61:16	61:59	6	fprintf ( stderr , "%s\n\n" , TIFFGetVersion ( ) ) ;
EXPR	61:16	61:16	7	fprintf ( stderr , "%s\n\n" , TIFFGetVersion ( ) )
FUNCTION_CALL	61:16	61:58	8	fprintf ( stderr , "%s\n\n" , TIFFGetVersion ( ) )
CALLEE	61:16	61:16	9	fprintf
LEAF_NODE	61:16	61:16	10	fprintf
LEAF_NODE	61:23	61:23	9	(
ARGUMENT	61:24	61:24	9	stderr
FIELD	61:24	61:24	10	stderr
LEAF_NODE	61:24	61:24	11	stderr
LEAF_NODE	61:30	61:30	9	,
ARGUMENT	61:32	61:32	9	"%s\n\n"
FIELD	61:32	61:32	10	"%s\n\n"
LEAF_NODE	61:32	61:32	11	"%s\n\n"
LEAF_NODE	61:40	61:40	9	,
ARGUMENT	61:42	61:42	9	TIFFGetVersion ( )
FUNCTION_CALL	61:42	61:57	10	TIFFGetVersion ( )
CALLEE	61:42	61:42	11	TIFFGetVersion
LEAF_NODE	61:42	61:42	12	TIFFGetVersion
LEAF_NODE	61:56	61:56	11	(
LEAF_NODE	61:57	61:57	11	)
LEAF_NODE	61:58	61:58	9	)
LEAF_NODE	61:59	61:59	7	;
EXPR_STATEMENT	62:2	62:58	6	fprintf ( stderr , "usage: tiffsplit input.tif [prefix]\n" ) ;
EXPR	62:2	62:2	7	fprintf ( stderr , "usage: tiffsplit input.tif [prefix]\n" )
FUNCTION_CALL	62:2	62:57	8	fprintf ( stderr , "usage: tiffsplit input.tif [prefix]\n" )
CALLEE	62:2	62:2	9	fprintf
LEAF_NODE	62:2	62:2	10	fprintf
LEAF_NODE	62:9	62:9	9	(
ARGUMENT	62:10	62:10	9	stderr
FIELD	62:10	62:10	10	stderr
LEAF_NODE	62:10	62:10	11	stderr
LEAF_NODE	62:16	62:16	9	,
ARGUMENT	62:18	62:18	9	"usage: tiffsplit input.tif [prefix]\n"
FIELD	62:18	62:18	10	"usage: tiffsplit input.tif [prefix]\n"
LEAF_NODE	62:18	62:18	11	"usage: tiffsplit input.tif [prefix]\n"
LEAF_NODE	62:57	62:57	9	)
LEAF_NODE	62:58	62:58	7	;
JUMP_STATEMENT	63:2	63:13	6	return ( - 3 ) ;
KEYWORD	63:2	63:2	7	return
LEAF_NODE	63:2	63:2	8	return
DESTINATION	63:9	63:9	7	( - 3 )
EXPR	63:9	63:12	8	( - 3 )
LEAF_NODE	63:9	63:9	9	(
UNARY_EXPR	63:10	63:11	9	- 3
UNARY_OPERATOR	63:10	63:10	10	-
LEAF_NODE	63:10	63:10	11	-
FIELD	63:11	63:11	10	3
LEAF_NODE	63:11	63:11	11	3
LEAF_NODE	63:12	63:12	9	)
LEAF_NODE	63:13	63:13	7	;
LEAF_NODE	64:1	64:1	5	}
SELECTION	65:1	65:15	3	
KEYWORD	65:1	65:1	4	if
LEAF_NODE	65:1	65:1	5	if
LEAF_NODE	65:4	65:4	4	(
CONDITION	65:5	65:5	4	argc > 2
EXPR	65:5	65:12	5	argc > 2
FIELD	65:5	65:5	6	argc
LEAF_NODE	65:5	65:5	7	argc
REL_OPERATOR	65:10	65:10	6	>
LEAF_NODE	65:10	65:10	7	>
FIELD	65:12	65:12	6	2
LEAF_NODE	65:12	65:12	7	2
LEAF_NODE	65:13	65:13	4	)
STATEMENTS	65:15	68:1	4	
LEAF_NODE	65:15	65:15	5	{
STATEMENTS	66:2	67:2	5	
EXPR_STATEMENT	66:2	66:40	6	strncpy ( fname , argv [ 2 ] , sizeof ( fname ) ) ;
EXPR	66:2	66:2	7	strncpy ( fname , argv [ 2 ] , sizeof ( fname ) )
FUNCTION_CALL	66:2	66:39	8	strncpy ( fname , argv [ 2 ] , sizeof ( fname ) )
CALLEE	66:2	66:2	9	strncpy
LEAF_NODE	66:2	66:2	10	strncpy
LEAF_NODE	66:9	66:9	9	(
ARGUMENT	66:10	66:10	9	fname
FIELD	66:10	66:10	10	fname
LEAF_NODE	66:10	66:10	11	fname
LEAF_NODE	66:15	66:15	9	,
ARGUMENT	66:17	66:17	9	argv [ 2 ]
FIELD	66:17	66:23	10	argv [ 2 ]
LEAF_NODE	66:17	66:17	11	argv
LEAF_NODE	66:21	66:21	11	[
EXPR	66:22	66:22	11	2
FIELD	66:22	66:22	12	2
LEAF_NODE	66:22	66:22	13	2
LEAF_NODE	66:23	66:23	11	]
LEAF_NODE	66:24	66:24	9	,
ARGUMENT	66:26	66:26	9	sizeof ( fname )
FUNCTION_CALL	66:26	66:38	10	sizeof ( fname )
CALLEE	66:26	66:26	11	sizeof
LEAF_NODE	66:26	66:26	12	sizeof
LEAF_NODE	66:32	66:32	11	(
ARGUMENT	66:33	66:33	11	fname
FIELD	66:33	66:33	12	fname
LEAF_NODE	66:33	66:33	13	fname
LEAF_NODE	66:38	66:38	11	)
LEAF_NODE	66:39	66:39	9	)
LEAF_NODE	66:40	66:40	7	;
EXPR_STATEMENT	67:2	67:33	6	fname [ sizeof ( fname ) - 1 ] = '\0' ;
EXPR	67:2	67:2	7	fname [ sizeof ( fname ) - 1 ] = '\0'
ASSIGN	67:2	67:29	8	fname [ sizeof ( fname ) - 1 ] = '\0'
LVAL	67:2	67:2	9	fname [ sizeof ( fname ) - 1 ]
FIELD	67:2	67:25	10	fname [ sizeof ( fname ) - 1 ]
LEAF_NODE	67:2	67:2	11	fname
LEAF_NODE	67:7	67:7	11	[
EXPR	67:8	67:24	11	sizeof ( fname ) - 1
FUNCTION_CALL	67:8	67:20	12	sizeof ( fname )
CALLEE	67:8	67:8	13	sizeof
LEAF_NODE	67:8	67:8	14	sizeof
LEAF_NODE	67:14	67:14	13	(
ARGUMENT	67:15	67:15	13	fname
FIELD	67:15	67:15	14	fname
LEAF_NODE	67:15	67:15	15	fname
LEAF_NODE	67:20	67:20	13	)
LEAF_NODE	67:22	67:22	12	-
FIELD	67:24	67:24	12	1
LEAF_NODE	67:24	67:24	13	1
LEAF_NODE	67:25	67:25	11	]
ASSIGN_OP	67:27	67:27	9	=
LEAF_NODE	67:27	67:27	10	=
RVAL	67:29	67:29	9	'\0'
FIELD	67:29	67:29	10	'\0'
LEAF_NODE	67:29	67:29	11	'\0'
LEAF_NODE	67:33	67:33	7	;
LEAF_NODE	68:1	68:1	5	}
EXPR_STATEMENT	69:1	69:28	3	in = TIFFOpen ( argv [ 1 ] , "r" ) ;
EXPR	69:1	69:1	4	in = TIFFOpen ( argv [ 1 ] , "r" )
ASSIGN	69:1	69:6	5	in = TIFFOpen ( argv [ 1 ] , "r" )
LVAL	69:1	69:1	6	in
FIELD	69:1	69:1	7	in
LEAF_NODE	69:1	69:1	8	in
ASSIGN_OP	69:4	69:4	6	=
LEAF_NODE	69:4	69:4	7	=
RVAL	69:6	69:6	6	TIFFOpen ( argv [ 1 ] , "r" )
FUNCTION_CALL	69:6	69:27	7	TIFFOpen ( argv [ 1 ] , "r" )
CALLEE	69:6	69:6	8	TIFFOpen
LEAF_NODE	69:6	69:6	9	TIFFOpen
LEAF_NODE	69:14	69:14	8	(
ARGUMENT	69:15	69:15	8	argv [ 1 ]
FIELD	69:15	69:21	9	argv [ 1 ]
LEAF_NODE	69:15	69:15	10	argv
LEAF_NODE	69:19	69:19	10	[
EXPR	69:20	69:20	10	1
FIELD	69:20	69:20	11	1
LEAF_NODE	69:20	69:20	12	1
LEAF_NODE	69:21	69:21	10	]
LEAF_NODE	69:22	69:22	8	,
ARGUMENT	69:24	69:24	8	"r"
FIELD	69:24	69:24	9	"r"
LEAF_NODE	69:24	69:24	10	"r"
LEAF_NODE	69:27	69:27	8	)
LEAF_NODE	69:28	69:28	4	;
SELECTION	70:1	70:17	3	
KEYWORD	70:1	70:1	4	if
LEAF_NODE	70:1	70:1	5	if
LEAF_NODE	70:4	70:4	4	(
CONDITION	70:5	70:5	4	in != NULL
EXPR	70:5	70:11	5	in != NULL
FIELD	70:5	70:5	6	in
LEAF_NODE	70:5	70:5	7	in
EQ_OPERATOR	70:8	70:8	6	!=
LEAF_NODE	70:8	70:8	7	!=
FIELD	70:11	70:11	6	NULL
LEAF_NODE	70:11	70:11	7	NULL
LEAF_NODE	70:15	70:15	4	)
STATEMENTS	70:17	92:1	4	
LEAF_NODE	70:17	70:17	5	{
STATEMENTS	71:2	91:2	5	
ITERATION	71:2	71:5	6	
KEYWORD	71:2	71:2	7	do
LEAF_NODE	71:2	71:2	8	do
LEAF_NODE	90:10	90:10	7	(
CONDITION	90:11	90:11	7	TIFFReadDirectory ( in )
EXPR	90:11	90:11	8	TIFFReadDirectory ( in )
FUNCTION_CALL	90:11	90:31	9	TIFFReadDirectory ( in )
CALLEE	90:11	90:11	10	TIFFReadDirectory
LEAF_NODE	90:11	90:11	11	TIFFReadDirectory
LEAF_NODE	90:28	90:28	10	(
ARGUMENT	90:29	90:29	10	in
FIELD	90:29	90:29	11	in
LEAF_NODE	90:29	90:29	12	in
LEAF_NODE	90:31	90:31	10	)
LEAF_NODE	90:32	90:32	7	)
STATEMENTS	71:5	90:2	7	
LEAF_NODE	71:5	71:5	8	{
STATEMENTS	72:3	89:3	8	
SIMPLE_DECL	72:3	72:18	9	size_t path_len ;
VAR_DECL	72:3	72:10	10	size_t path_len
TYPE	72:3	72:3	11	size_t
TYPE_NAME	72:3	72:3	12	size_t
LEAF_NODE	72:3	72:3	13	size_t
NAME	72:10	72:10	11	path_len
LEAF_NODE	72:10	72:10	12	path_len
LEAF_NODE	72:18	72:18	10	;
SIMPLE_DECL	73:3	73:13	9	char * path ;
VAR_DECL	73:3	73:9	10	char * path
TYPE	73:3	73:8	11	char *
TYPE_NAME	73:3	73:3	12	char
LEAF_NODE	73:3	73:3	13	char
POINTER	73:8	73:8	12	*
LEAF_NODE	73:8	73:8	13	*
NAME	73:9	73:9	11	path
LEAF_NODE	73:9	73:9	12	path
LEAF_NODE	73:13	73:13	10	;
EXPR_STATEMENT	75:3	75:16	9	newfilename ( ) ;
EXPR	75:3	75:3	10	newfilename ( )
FUNCTION_CALL	75:3	75:15	11	newfilename ( )
CALLEE	75:3	75:3	12	newfilename
LEAF_NODE	75:3	75:3	13	newfilename
LEAF_NODE	75:14	75:14	12	(
LEAF_NODE	75:15	75:15	12	)
LEAF_NODE	75:16	75:16	10	;
EXPR_STATEMENT	77:3	77:49	9	path_len = strlen ( fname ) + sizeof ( TIFF_SUFFIX ) ;
EXPR	77:3	77:3	10	path_len = strlen ( fname ) + sizeof ( TIFF_SUFFIX )
ASSIGN	77:3	77:14	11	path_len = strlen ( fname ) + sizeof ( TIFF_SUFFIX )
LVAL	77:3	77:3	12	path_len
FIELD	77:3	77:3	13	path_len
LEAF_NODE	77:3	77:3	14	path_len
ASSIGN_OP	77:12	77:12	12	=
LEAF_NODE	77:12	77:12	13	=
RVAL	77:14	77:30	12	strlen ( fname ) + sizeof ( TIFF_SUFFIX )
FUNCTION_CALL	77:14	77:26	13	strlen ( fname )
CALLEE	77:14	77:14	14	strlen
LEAF_NODE	77:14	77:14	15	strlen
LEAF_NODE	77:20	77:20	14	(
ARGUMENT	77:21	77:21	14	fname
FIELD	77:21	77:21	15	fname
LEAF_NODE	77:21	77:21	16	fname
LEAF_NODE	77:26	77:26	14	)
LEAF_NODE	77:28	77:28	13	+
FUNCTION_CALL	77:30	77:48	13	sizeof ( TIFF_SUFFIX )
CALLEE	77:30	77:30	14	sizeof
LEAF_NODE	77:30	77:30	15	sizeof
LEAF_NODE	77:36	77:36	14	(
ARGUMENT	77:37	77:37	14	TIFF_SUFFIX
FIELD	77:37	77:37	15	TIFF_SUFFIX
LEAF_NODE	77:37	77:37	16	TIFF_SUFFIX
LEAF_NODE	77:48	77:48	14	)
LEAF_NODE	77:49	77:49	10	;
EXPR_STATEMENT	78:3	78:40	9	path = ( char * ) _TIFFmalloc ( path_len ) ;
EXPR	78:3	78:3	10	path = ( char * ) _TIFFmalloc ( path_len )
ASSIGN	78:3	78:10	11	path = ( char * ) _TIFFmalloc ( path_len )
LVAL	78:3	78:3	12	path
FIELD	78:3	78:3	13	path
LEAF_NODE	78:3	78:3	14	path
ASSIGN_OP	78:8	78:8	12	=
LEAF_NODE	78:8	78:8	13	=
RVAL	78:10	78:19	12	( char * ) _TIFFmalloc ( path_len )
LEAF_NODE	78:10	78:10	13	(
TYPE_NAME	78:11	78:11	13	char
LEAF_NODE	78:11	78:11	14	char
LEAF_NODE	78:16	78:16	13	*
LEAF_NODE	78:17	78:17	13	)
FUNCTION_CALL	78:19	78:39	13	_TIFFmalloc ( path_len )
CALLEE	78:19	78:19	14	_TIFFmalloc
LEAF_NODE	78:19	78:19	15	_TIFFmalloc
LEAF_NODE	78:30	78:30	14	(
ARGUMENT	78:31	78:31	14	path_len
FIELD	78:31	78:31	15	path_len
LEAF_NODE	78:31	78:31	16	path_len
LEAF_NODE	78:39	78:39	14	)
LEAF_NODE	78:40	78:40	10	;
EXPR_STATEMENT	79:3	79:33	9	strncpy ( path , fname , path_len ) ;
EXPR	79:3	79:3	10	strncpy ( path , fname , path_len )
FUNCTION_CALL	79:3	79:32	11	strncpy ( path , fname , path_len )
CALLEE	79:3	79:3	12	strncpy
LEAF_NODE	79:3	79:3	13	strncpy
LEAF_NODE	79:10	79:10	12	(
ARGUMENT	79:11	79:11	12	path
FIELD	79:11	79:11	13	path
LEAF_NODE	79:11	79:11	14	path
LEAF_NODE	79:15	79:15	12	,
ARGUMENT	79:17	79:17	12	fname
FIELD	79:17	79:17	13	fname
LEAF_NODE	79:17	79:17	14	fname
LEAF_NODE	79:22	79:22	12	,
ARGUMENT	79:24	79:24	12	path_len
FIELD	79:24	79:24	13	path_len
LEAF_NODE	79:24	79:24	14	path_len
LEAF_NODE	79:32	79:32	12	)
LEAF_NODE	79:33	79:33	10	;
EXPR_STATEMENT	80:3	80:28	9	path [ path_len - 1 ] = '\0' ;
EXPR	80:3	80:3	10	path [ path_len - 1 ] = '\0'
ASSIGN	80:3	80:24	11	path [ path_len - 1 ] = '\0'
LVAL	80:3	80:3	12	path [ path_len - 1 ]
FIELD	80:3	80:20	13	path [ path_len - 1 ]
LEAF_NODE	80:3	80:3	14	path
LEAF_NODE	80:7	80:7	14	[
EXPR	80:8	80:19	14	path_len - 1
FIELD	80:8	80:8	15	path_len
LEAF_NODE	80:8	80:8	16	path_len
LEAF_NODE	80:17	80:17	15	-
FIELD	80:19	80:19	15	1
LEAF_NODE	80:19	80:19	16	1
LEAF_NODE	80:20	80:20	14	]
ASSIGN_OP	80:22	80:22	12	=
LEAF_NODE	80:22	80:22	13	=
RVAL	80:24	80:24	12	'\0'
FIELD	80:24	80:24	13	'\0'
LEAF_NODE	80:24	80:24	14	'\0'
LEAF_NODE	80:28	80:28	10	;
EXPR_STATEMENT	81:3	81:58	9	strncat ( path , TIFF_SUFFIX , path_len - strlen ( path ) - 1 ) ;
EXPR	81:3	81:3	10	strncat ( path , TIFF_SUFFIX , path_len - strlen ( path ) - 1 )
FUNCTION_CALL	81:3	81:57	11	strncat ( path , TIFF_SUFFIX , path_len - strlen ( path ) - 1 )
CALLEE	81:3	81:3	12	strncat
LEAF_NODE	81:3	81:3	13	strncat
LEAF_NODE	81:10	81:10	12	(
ARGUMENT	81:11	81:11	12	path
FIELD	81:11	81:11	13	path
LEAF_NODE	81:11	81:11	14	path
LEAF_NODE	81:15	81:15	12	,
ARGUMENT	81:17	81:17	12	TIFF_SUFFIX
FIELD	81:17	81:17	13	TIFF_SUFFIX
LEAF_NODE	81:17	81:17	14	TIFF_SUFFIX
LEAF_NODE	81:28	81:28	12	,
ARGUMENT	81:30	81:56	12	path_len - strlen ( path ) - 1
FIELD	81:30	81:30	13	path_len
LEAF_NODE	81:30	81:30	14	path_len
LEAF_NODE	81:39	81:39	13	-
FUNCTION_CALL	81:41	81:52	13	strlen ( path )
CALLEE	81:41	81:41	14	strlen
LEAF_NODE	81:41	81:41	15	strlen
LEAF_NODE	81:47	81:47	14	(
ARGUMENT	81:48	81:48	14	path
FIELD	81:48	81:48	15	path
LEAF_NODE	81:48	81:48	16	path
LEAF_NODE	81:52	81:52	14	)
LEAF_NODE	81:54	81:54	13	-
FIELD	81:56	81:56	13	1
LEAF_NODE	81:56	81:56	14	1
LEAF_NODE	81:57	81:57	12	)
LEAF_NODE	81:58	81:58	10	;
EXPR_STATEMENT	82:3	82:54	9	out = TIFFOpen ( path , TIFFIsBigEndian ( in ) ? "wb" : "wl" ) ;
EXPR	82:3	82:3	10	out = TIFFOpen ( path , TIFFIsBigEndian ( in ) ? "wb" : "wl" )
ASSIGN	82:3	82:9	11	out = TIFFOpen ( path , TIFFIsBigEndian ( in ) ? "wb" : "wl" )
LVAL	82:3	82:3	12	out
FIELD	82:3	82:3	13	out
LEAF_NODE	82:3	82:3	14	out
ASSIGN_OP	82:7	82:7	12	=
LEAF_NODE	82:7	82:7	13	=
RVAL	82:9	82:9	12	TIFFOpen ( path , TIFFIsBigEndian ( in ) ? "wb" : "wl" )
FUNCTION_CALL	82:9	82:53	13	TIFFOpen ( path , TIFFIsBigEndian ( in ) ? "wb" : "wl" )
CALLEE	82:9	82:9	14	TIFFOpen
LEAF_NODE	82:9	82:9	15	TIFFOpen
LEAF_NODE	82:17	82:17	14	(
ARGUMENT	82:18	82:18	14	path
FIELD	82:18	82:18	15	path
LEAF_NODE	82:18	82:18	16	path
LEAF_NODE	82:22	82:22	14	,
ARGUMENT	82:24	82:24	14	TIFFIsBigEndian ( in ) ? "wb" : "wl"
COND_EXPR	82:24	82:49	15	TIFFIsBigEndian ( in ) ? "wb" : "wl"
CONDITION	82:24	82:24	16	TIFFIsBigEndian ( in )
FUNCTION_CALL	82:24	82:42	17	TIFFIsBigEndian ( in )
CALLEE	82:24	82:24	18	TIFFIsBigEndian
LEAF_NODE	82:24	82:24	19	TIFFIsBigEndian
LEAF_NODE	82:39	82:39	18	(
ARGUMENT	82:40	82:40	18	in
FIELD	82:40	82:40	19	in
LEAF_NODE	82:40	82:40	20	in
LEAF_NODE	82:42	82:42	18	)
LEAF_NODE	82:43	82:43	16	?
EXPR	82:44	82:44	16	"wb"
FIELD	82:44	82:44	17	"wb"
LEAF_NODE	82:44	82:44	18	"wb"
LEAF_NODE	82:48	82:48	16	:
FIELD	82:49	82:49	16	"wl"
LEAF_NODE	82:49	82:49	17	"wl"
LEAF_NODE	82:53	82:53	14	)
LEAF_NODE	82:54	82:54	10	;
EXPR_STATEMENT	83:3	83:18	9	_TIFFfree ( path ) ;
EXPR	83:3	83:3	10	_TIFFfree ( path )
FUNCTION_CALL	83:3	83:17	11	_TIFFfree ( path )
CALLEE	83:3	83:3	12	_TIFFfree
LEAF_NODE	83:3	83:3	13	_TIFFfree
LEAF_NODE	83:12	83:12	12	(
ARGUMENT	83:13	83:13	12	path
FIELD	83:13	83:13	13	path
LEAF_NODE	83:13	83:13	14	path
LEAF_NODE	83:17	83:17	12	)
LEAF_NODE	83:18	83:18	10	;
SELECTION	85:3	86:4	9	
KEYWORD	85:3	85:3	10	if
LEAF_NODE	85:3	85:3	11	if
LEAF_NODE	85:6	85:6	10	(
CONDITION	85:7	85:7	10	out == NULL
EXPR	85:7	85:14	11	out == NULL
FIELD	85:7	85:7	12	out
LEAF_NODE	85:7	85:7	13	out
EQ_OPERATOR	85:11	85:11	12	==
LEAF_NODE	85:11	85:11	13	==
FIELD	85:14	85:14	12	NULL
LEAF_NODE	85:14	85:14	13	NULL
LEAF_NODE	85:18	85:18	10	)
STATEMENTS	86:4	86:4	10	
JUMP_STATEMENT	86:4	86:15	11	return ( - 2 ) ;
KEYWORD	86:4	86:4	12	return
LEAF_NODE	86:4	86:4	13	return
DESTINATION	86:11	86:11	12	( - 2 )
EXPR	86:11	86:14	13	( - 2 )
LEAF_NODE	86:11	86:11	14	(
UNARY_EXPR	86:12	86:13	14	- 2
UNARY_OPERATOR	86:12	86:12	15	-
LEAF_NODE	86:12	86:12	16	-
FIELD	86:13	86:13	15	2
LEAF_NODE	86:13	86:13	16	2
LEAF_NODE	86:14	86:14	14	)
LEAF_NODE	86:15	86:15	12	;
SELECTION	87:3	88:4	9	
KEYWORD	87:3	87:3	10	if
LEAF_NODE	87:3	87:3	11	if
LEAF_NODE	87:6	87:6	10	(
CONDITION	87:7	87:7	10	! tiffcp ( in , out )
EXPR	87:7	87:7	11	! tiffcp ( in , out )
UNARY_EXPR	87:7	87:8	12	! tiffcp ( in , out )
UNARY_OPERATOR	87:7	87:7	13	!
LEAF_NODE	87:7	87:7	14	!
FUNCTION_CALL	87:8	87:22	13	tiffcp ( in , out )
CALLEE	87:8	87:8	14	tiffcp
LEAF_NODE	87:8	87:8	15	tiffcp
LEAF_NODE	87:14	87:14	14	(
ARGUMENT	87:15	87:15	14	in
FIELD	87:15	87:15	15	in
LEAF_NODE	87:15	87:15	16	in
LEAF_NODE	87:17	87:17	14	,
ARGUMENT	87:19	87:19	14	out
FIELD	87:19	87:19	15	out
LEAF_NODE	87:19	87:19	16	out
LEAF_NODE	87:22	87:22	14	)
LEAF_NODE	87:23	87:23	10	)
STATEMENTS	88:4	88:4	10	
JUMP_STATEMENT	88:4	88:15	11	return ( - 1 ) ;
KEYWORD	88:4	88:4	12	return
LEAF_NODE	88:4	88:4	13	return
DESTINATION	88:11	88:11	12	( - 1 )
EXPR	88:11	88:14	13	( - 1 )
LEAF_NODE	88:11	88:11	14	(
UNARY_EXPR	88:12	88:13	14	- 1
UNARY_OPERATOR	88:12	88:12	15	-
LEAF_NODE	88:12	88:12	16	-
FIELD	88:13	88:13	15	1
LEAF_NODE	88:13	88:13	16	1
LEAF_NODE	88:14	88:14	14	)
LEAF_NODE	88:15	88:15	12	;
EXPR_STATEMENT	89:3	89:17	9	TIFFClose ( out ) ;
EXPR	89:3	89:3	10	TIFFClose ( out )
FUNCTION_CALL	89:3	89:16	11	TIFFClose ( out )
CALLEE	89:3	89:3	12	TIFFClose
LEAF_NODE	89:3	89:3	13	TIFFClose
LEAF_NODE	89:12	89:12	12	(
ARGUMENT	89:13	89:13	12	out
FIELD	89:13	89:13	13	out
LEAF_NODE	89:13	89:13	14	out
LEAF_NODE	89:16	89:16	12	)
LEAF_NODE	89:17	89:17	10	;
LEAF_NODE	90:2	90:2	8	}
LEAF_NODE	90:33	90:33	6	;
EXPR_STATEMENT	91:2	91:22	6	( void ) TIFFClose ( in ) ;
EXPR	91:2	91:9	7	( void ) TIFFClose ( in )
LEAF_NODE	91:2	91:2	8	(
TYPE_NAME	91:3	91:3	8	void
LEAF_NODE	91:3	91:3	9	void
LEAF_NODE	91:7	91:7	8	)
FUNCTION_CALL	91:9	91:21	8	TIFFClose ( in )
CALLEE	91:9	91:9	9	TIFFClose
LEAF_NODE	91:9	91:9	10	TIFFClose
LEAF_NODE	91:18	91:18	9	(
ARGUMENT	91:19	91:19	9	in
FIELD	91:19	91:19	10	in
LEAF_NODE	91:19	91:19	11	in
LEAF_NODE	91:21	91:21	9	)
LEAF_NODE	91:22	91:22	7	;
LEAF_NODE	92:1	92:1	5	}
JUMP_STATEMENT	93:1	93:11	3	return ( 0 ) ;
KEYWORD	93:1	93:1	4	return
LEAF_NODE	93:1	93:1	5	return
DESTINATION	93:8	93:8	4	( 0 )
EXPR	93:8	93:10	5	( 0 )
LEAF_NODE	93:8	93:8	6	(
FIELD	93:9	93:9	6	0
LEAF_NODE	93:9	93:9	7	0
LEAF_NODE	93:10	93:10	6	)
LEAF_NODE	93:11	93:11	4	;
LEAF_NODE	94:0	94:0	2	}
FUNCTION_DEF	96:0	153:0	1	
RETURN_TYPE	96:0	96:7	2	static void
LEAF_NODE	96:0	96:0	3	static
TYPE_NAME	96:7	96:7	3	void
LEAF_NODE	96:7	96:7	4	void
FUNCTION_NAME	97:0	97:0	2	newfilename
LEAF_NODE	97:0	97:0	3	newfilename
PARAMETER_LIST	97:11	97:16	2	( void )
LEAF_NODE	97:11	97:11	3	(
PARAMETER_DECL	97:12	97:12	3	void
LEAF_NODE	97:12	97:12	4	void
LEAF_NODE	97:16	97:16	3	)
LEAF_NODE	98:0	98:0	2	{
STATEMENTS	99:1	152:1	2	
LEAF_NODE	99:1	99:1	3	static
SIMPLE_DECL	99:8	99:21	3	int first ; first = 1 ;
VAR_DECL	99:8	99:12	4	int first ; first = 1
TYPE	99:8	99:8	5	int
TYPE_NAME	99:8	99:8	6	int
LEAF_NODE	99:8	99:8	7	int
NAME	99:12	99:12	5	first
LEAF_NODE	99:12	99:12	6	first
LEAF_NODE	0:0	0:0	5	;
INIT	99:12	99:12	5	first = 1
ASSIGN	99:12	99:20	6	first = 1
LVAL	99:12	99:12	7	first
NAME	99:12	99:12	8	first
LEAF_NODE	99:12	99:12	9	first
ASSIGN_OP	99:18	99:18	7	=
LEAF_NODE	99:18	99:18	8	=
RVAL	99:20	99:20	7	1
FIELD	99:20	99:20	8	1
LEAF_NODE	99:20	99:20	9	1
LEAF_NODE	99:21	99:21	4	;
LEAF_NODE	100:1	100:1	3	static
SIMPLE_DECL	100:8	100:21	3	long lastTurn ;
VAR_DECL	100:8	100:13	4	long lastTurn
TYPE	100:8	100:8	5	long
TYPE_NAME	100:8	100:8	6	long
LEAF_NODE	100:8	100:8	7	long
NAME	100:13	100:13	5	lastTurn
LEAF_NODE	100:13	100:13	6	lastTurn
LEAF_NODE	100:21	100:21	4	;
LEAF_NODE	101:1	101:1	3	static
SIMPLE_DECL	101:8	101:17	3	long fnum ;
VAR_DECL	101:8	101:13	4	long fnum
TYPE	101:8	101:8	5	long
TYPE_NAME	101:8	101:8	6	long
LEAF_NODE	101:8	101:8	7	long
NAME	101:13	101:13	5	fnum
LEAF_NODE	101:13	101:13	6	fnum
LEAF_NODE	101:17	101:17	4	;
LEAF_NODE	102:1	102:1	3	static
SIMPLE_DECL	102:8	102:21	3	short defname ;
VAR_DECL	102:8	102:14	4	short defname
TYPE	102:8	102:8	5	short
TYPE_NAME	102:8	102:8	6	short
LEAF_NODE	102:8	102:8	7	short
NAME	102:14	102:14	5	defname
LEAF_NODE	102:14	102:14	6	defname
LEAF_NODE	102:21	102:21	4	;
LEAF_NODE	103:1	103:1	3	static
SIMPLE_DECL	103:8	103:18	3	char * fpnt ;
VAR_DECL	103:8	103:14	4	char * fpnt
TYPE	103:8	103:13	5	char *
TYPE_NAME	103:8	103:8	6	char
LEAF_NODE	103:8	103:8	7	char
POINTER	103:13	103:13	6	*
LEAF_NODE	103:13	103:13	7	*
NAME	103:14	103:14	5	fpnt
LEAF_NODE	103:14	103:14	6	fpnt
LEAF_NODE	103:18	103:18	4	;
SELECTION	105:1	105:12	3	
KEYWORD	105:1	105:1	4	if
LEAF_NODE	105:1	105:1	5	if
LEAF_NODE	105:4	105:4	4	(
CONDITION	105:5	105:5	4	first
EXPR	105:5	105:5	5	first
FIELD	105:5	105:5	6	first
LEAF_NODE	105:5	105:5	7	first
LEAF_NODE	105:10	105:10	4	)
STATEMENTS	105:12	115:1	4	
LEAF_NODE	105:12	105:12	5	{
STATEMENTS	106:2	114:2	5	
SELECTION	106:2	106:16	6	
KEYWORD	106:2	106:2	7	if
LEAF_NODE	106:2	106:2	8	if
LEAF_NODE	106:5	106:5	7	(
CONDITION	106:6	106:6	7	fname [ 0 ]
EXPR	106:6	106:6	8	fname [ 0 ]
FIELD	106:6	106:13	9	fname [ 0 ]
LEAF_NODE	106:6	106:6	10	fname
LEAF_NODE	106:11	106:11	10	[
EXPR	106:12	106:12	10	0
FIELD	106:12	106:12	11	0
LEAF_NODE	106:12	106:12	12	0
LEAF_NODE	106:13	106:13	10	]
LEAF_NODE	106:14	106:14	7	)
STATEMENTS	106:16	109:2	7	
LEAF_NODE	106:16	106:16	8	{
STATEMENTS	107:3	108:3	8	
EXPR_STATEMENT	107:3	107:31	9	fpnt = fname + strlen ( fname ) ;
EXPR	107:3	107:3	10	fpnt = fname + strlen ( fname )
ASSIGN	107:3	107:10	11	fpnt = fname + strlen ( fname )
LVAL	107:3	107:3	12	fpnt
FIELD	107:3	107:3	13	fpnt
LEAF_NODE	107:3	107:3	14	fpnt
ASSIGN_OP	107:8	107:8	12	=
LEAF_NODE	107:8	107:8	13	=
RVAL	107:10	107:18	12	fname + strlen ( fname )
FIELD	107:10	107:10	13	fname
LEAF_NODE	107:10	107:10	14	fname
LEAF_NODE	107:16	107:16	13	+
FUNCTION_CALL	107:18	107:30	13	strlen ( fname )
CALLEE	107:18	107:18	14	strlen
LEAF_NODE	107:18	107:18	15	strlen
LEAF_NODE	107:24	107:24	14	(
ARGUMENT	107:25	107:25	14	fname
FIELD	107:25	107:25	15	fname
LEAF_NODE	107:25	107:25	16	fname
LEAF_NODE	107:30	107:30	14	)
LEAF_NODE	107:31	107:31	10	;
EXPR_STATEMENT	108:3	108:14	9	defname = 0 ;
EXPR	108:3	108:3	10	defname = 0
ASSIGN	108:3	108:13	11	defname = 0
LVAL	108:3	108:3	12	defname
FIELD	108:3	108:3	13	defname
LEAF_NODE	108:3	108:3	14	defname
ASSIGN_OP	108:11	108:11	12	=
LEAF_NODE	108:11	108:11	13	=
RVAL	108:13	108:13	12	0
FIELD	108:13	108:13	13	0
LEAF_NODE	108:13	108:13	14	0
LEAF_NODE	108:14	108:14	10	;
LEAF_NODE	109:2	109:2	8	}
SELECTION	109:4	109:9	6	
KEYWORD	109:4	109:4	7	else
LEAF_NODE	109:4	109:4	8	else
STATEMENTS	109:9	113:2	7	
LEAF_NODE	109:9	109:9	8	{
STATEMENTS	110:3	112:3	8	
EXPR_STATEMENT	110:3	110:17	9	fname [ 0 ] = 'x' ;
EXPR	110:3	110:3	10	fname [ 0 ] = 'x'
ASSIGN	110:3	110:14	11	fname [ 0 ] = 'x'
LVAL	110:3	110:3	12	fname [ 0 ]
FIELD	110:3	110:10	13	fname [ 0 ]
LEAF_NODE	110:3	110:3	14	fname
LEAF_NODE	110:8	110:8	14	[
EXPR	110:9	110:9	14	0
FIELD	110:9	110:9	15	0
LEAF_NODE	110:9	110:9	16	0
LEAF_NODE	110:10	110:10	14	]
ASSIGN_OP	110:12	110:12	12	=
LEAF_NODE	110:12	110:12	13	=
RVAL	110:14	110:14	12	'x'
FIELD	110:14	110:14	13	'x'
LEAF_NODE	110:14	110:14	14	'x'
LEAF_NODE	110:17	110:17	10	;
EXPR_STATEMENT	111:3	111:19	9	fpnt = fname + 1 ;
EXPR	111:3	111:3	10	fpnt = fname + 1
ASSIGN	111:3	111:10	11	fpnt = fname + 1
LVAL	111:3	111:3	12	fpnt
FIELD	111:3	111:3	13	fpnt
LEAF_NODE	111:3	111:3	14	fpnt
ASSIGN_OP	111:8	111:8	12	=
LEAF_NODE	111:8	111:8	13	=
RVAL	111:10	111:18	12	fname + 1
FIELD	111:10	111:10	13	fname
LEAF_NODE	111:10	111:10	14	fname
LEAF_NODE	111:16	111:16	13	+
FIELD	111:18	111:18	13	1
LEAF_NODE	111:18	111:18	14	1
LEAF_NODE	111:19	111:19	10	;
EXPR_STATEMENT	112:3	112:14	9	defname = 1 ;
EXPR	112:3	112:3	10	defname = 1
ASSIGN	112:3	112:13	11	defname = 1
LVAL	112:3	112:3	12	defname
FIELD	112:3	112:3	13	defname
LEAF_NODE	112:3	112:3	14	defname
ASSIGN_OP	112:11	112:11	12	=
LEAF_NODE	112:11	112:11	13	=
RVAL	112:13	112:13	12	1
FIELD	112:13	112:13	13	1
LEAF_NODE	112:13	112:13	14	1
LEAF_NODE	112:14	112:14	10	;
LEAF_NODE	113:2	113:2	8	}
EXPR_STATEMENT	114:2	114:11	6	first = 0 ;
EXPR	114:2	114:2	7	first = 0
ASSIGN	114:2	114:10	8	first = 0
LVAL	114:2	114:2	9	first
FIELD	114:2	114:2	10	first
LEAF_NODE	114:2	114:2	11	first
ASSIGN_OP	114:8	114:8	9	=
LEAF_NODE	114:8	114:8	10	=
RVAL	114:10	114:10	9	0
FIELD	114:10	114:10	10	0
LEAF_NODE	114:10	114:10	11	0
LEAF_NODE	114:11	114:11	7	;
LEAF_NODE	115:1	115:1	5	}
SELECTION	117:1	117:23	3	
KEYWORD	117:1	117:1	4	if
LEAF_NODE	117:1	117:1	5	if
LEAF_NODE	117:4	117:4	4	(
CONDITION	117:5	117:5	4	fnum == MAXFILES
EXPR	117:5	117:13	5	fnum == MAXFILES
FIELD	117:5	117:5	6	fnum
LEAF_NODE	117:5	117:5	7	fnum
EQ_OPERATOR	117:10	117:10	6	==
LEAF_NODE	117:10	117:10	7	==
FIELD	117:13	117:13	6	MAXFILES
LEAF_NODE	117:13	117:13	7	MAXFILES
LEAF_NODE	117:21	117:21	4	)
STATEMENTS	117:23	124:1	4	
LEAF_NODE	117:23	117:23	5	{
STATEMENTS	118:2	123:2	5	
SELECTION	118:2	118:35	6	
KEYWORD	118:2	118:2	7	if
LEAF_NODE	118:2	118:2	8	if
LEAF_NODE	118:5	118:5	7	(
CONDITION	118:6	118:6	7	! defname || fname [ 0 ] == 'z'
EXPR	118:6	118:6	8	! defname || fname [ 0 ] == 'z'
OR	118:6	118:18	9	! defname || fname [ 0 ] == 'z'
EXPR	118:6	118:6	10	! defname
UNARY_EXPR	118:6	118:7	11	! defname
UNARY_OPERATOR	118:6	118:6	12	!
LEAF_NODE	118:6	118:6	13	!
FIELD	118:7	118:7	12	defname
LEAF_NODE	118:7	118:7	13	defname
LEAF_NODE	118:15	118:15	10	||
EXPR	118:18	118:30	10	fname [ 0 ] == 'z'
FIELD	118:18	118:25	11	fname [ 0 ]
LEAF_NODE	118:18	118:18	12	fname
LEAF_NODE	118:23	118:23	12	[
EXPR	118:24	118:24	12	0
FIELD	118:24	118:24	13	0
LEAF_NODE	118:24	118:24	14	0
LEAF_NODE	118:25	118:25	12	]
EQ_OPERATOR	118:27	118:27	11	==
LEAF_NODE	118:27	118:27	12	==
FIELD	118:30	118:30	11	'z'
LEAF_NODE	118:30	118:30	12	'z'
LEAF_NODE	118:33	118:33	7	)
STATEMENTS	118:35	121:2	7	
LEAF_NODE	118:35	118:35	8	{
STATEMENTS	119:3	120:3	8	
EXPR_STATEMENT	119:3	119:50	9	fprintf ( stderr , "tiffsplit: too many files.\n" ) ;
EXPR	119:3	119:3	10	fprintf ( stderr , "tiffsplit: too many files.\n" )
FUNCTION_CALL	119:3	119:49	11	fprintf ( stderr , "tiffsplit: too many files.\n" )
CALLEE	119:3	119:3	12	fprintf
LEAF_NODE	119:3	119:3	13	fprintf
LEAF_NODE	119:10	119:10	12	(
ARGUMENT	119:11	119:11	12	stderr
FIELD	119:11	119:11	13	stderr
LEAF_NODE	119:11	119:11	14	stderr
LEAF_NODE	119:17	119:17	12	,
ARGUMENT	119:19	119:19	12	"tiffsplit: too many files.\n"
FIELD	119:19	119:19	13	"tiffsplit: too many files.\n"
LEAF_NODE	119:19	119:19	14	"tiffsplit: too many files.\n"
LEAF_NODE	119:49	119:49	12	)
LEAF_NODE	119:50	119:50	10	;
EXPR_STATEMENT	120:3	120:10	9	exit ( 1 ) ;
EXPR	120:3	120:3	10	exit ( 1 )
FUNCTION_CALL	120:3	120:9	11	exit ( 1 )
CALLEE	120:3	120:3	12	exit
LEAF_NODE	120:3	120:3	13	exit
LEAF_NODE	120:7	120:7	12	(
ARGUMENT	120:8	120:8	12	1
FIELD	120:8	120:8	13	1
LEAF_NODE	120:8	120:8	14	1
LEAF_NODE	120:9	120:9	12	)
LEAF_NODE	120:10	120:10	10	;
LEAF_NODE	121:2	121:2	8	}
EXPR_STATEMENT	122:2	122:12	6	fname [ 0 ] ++ ;
EXPR	122:2	122:2	7	fname [ 0 ] ++
FIELD	122:2	122:10	8	fname [ 0 ] ++
LEAF_NODE	122:2	122:2	9	fname
LEAF_NODE	122:7	122:7	9	[
EXPR	122:8	122:8	9	0
FIELD	122:8	122:8	10	0
LEAF_NODE	122:8	122:8	11	0
LEAF_NODE	122:9	122:9	9	]
LEAF_NODE	122:10	122:10	9	++
LEAF_NODE	122:12	122:12	7	;
EXPR_STATEMENT	123:2	123:10	6	fnum = 0 ;
EXPR	123:2	123:2	7	fnum = 0
ASSIGN	123:2	123:9	8	fnum = 0
LVAL	123:2	123:2	9	fnum
FIELD	123:2	123:2	10	fnum
LEAF_NODE	123:2	123:2	11	fnum
ASSIGN_OP	123:7	123:7	9	=
LEAF_NODE	123:7	123:7	10	=
RVAL	123:9	123:9	9	0
FIELD	123:9	123:9	10	0
LEAF_NODE	123:9	123:9	11	0
LEAF_NODE	123:10	123:10	7	;
LEAF_NODE	124:1	124:1	5	}
SELECTION	125:1	125:22	3	
KEYWORD	125:1	125:1	4	if
LEAF_NODE	125:1	125:1	5	if
LEAF_NODE	125:4	125:4	4	(
CONDITION	125:5	125:5	4	fnum % 676 == 0
EXPR	125:5	125:19	5	fnum % 676 == 0
FIELD	125:5	125:5	6	fnum
LEAF_NODE	125:5	125:5	7	fnum
LEAF_NODE	125:10	125:10	6	%
FIELD	125:12	125:12	6	676
LEAF_NODE	125:12	125:12	7	676
EQ_OPERATOR	125:16	125:16	6	==
LEAF_NODE	125:16	125:16	7	==
FIELD	125:19	125:19	6	0
LEAF_NODE	125:19	125:19	7	0
LEAF_NODE	125:20	125:20	4	)
STATEMENTS	125:22	142:1	4	
LEAF_NODE	125:22	125:22	5	{
STATEMENTS	126:2	141:2	5	
SELECTION	126:2	126:17	6	
KEYWORD	126:2	126:2	7	if
LEAF_NODE	126:2	126:2	8	if
LEAF_NODE	126:5	126:5	7	(
CONDITION	126:6	126:6	7	fnum != 0
EXPR	126:6	126:14	8	fnum != 0
FIELD	126:6	126:6	9	fnum
LEAF_NODE	126:6	126:6	10	fnum
EQ_OPERATOR	126:11	126:11	9	!=
LEAF_NODE	126:11	126:11	10	!=
FIELD	126:14	126:14	9	0
LEAF_NODE	126:14	126:14	10	0
LEAF_NODE	126:15	126:15	7	)
STATEMENTS	126:17	132:2	7	
LEAF_NODE	126:17	126:17	8	{
STATEMENTS	131:3	131:3	8	
EXPR_STATEMENT	131:3	131:12	9	fpnt [ 0 ] ++ ;
EXPR	131:3	131:3	10	fpnt [ 0 ] ++
FIELD	131:3	131:10	11	fpnt [ 0 ] ++
LEAF_NODE	131:3	131:3	12	fpnt
LEAF_NODE	131:7	131:7	12	[
EXPR	131:8	131:8	12	0
FIELD	131:8	131:8	13	0
LEAF_NODE	131:8	131:8	14	0
LEAF_NODE	131:9	131:9	12	]
LEAF_NODE	131:10	131:10	12	++
LEAF_NODE	131:12	131:12	10	;
LEAF_NODE	132:2	132:2	8	}
SELECTION	132:4	132:9	6	
KEYWORD	132:4	132:4	7	else
LEAF_NODE	132:4	132:4	8	else
STATEMENTS	132:9	137:2	7	
LEAF_NODE	132:9	132:9	8	{
STATEMENTS	136:3	136:3	8	
EXPR_STATEMENT	136:3	136:16	9	fpnt [ 0 ] = 'a' ;
EXPR	136:3	136:3	10	fpnt [ 0 ] = 'a'
ASSIGN	136:3	136:13	11	fpnt [ 0 ] = 'a'
LVAL	136:3	136:3	12	fpnt [ 0 ]
FIELD	136:3	136:9	13	fpnt [ 0 ]
LEAF_NODE	136:3	136:3	14	fpnt
LEAF_NODE	136:7	136:7	14	[
EXPR	136:8	136:8	14	0
FIELD	136:8	136:8	15	0
LEAF_NODE	136:8	136:8	16	0
LEAF_NODE	136:9	136:9	14	]
ASSIGN_OP	136:11	136:11	12	=
LEAF_NODE	136:11	136:11	13	=
RVAL	136:13	136:13	12	'a'
FIELD	136:13	136:13	13	'a'
LEAF_NODE	136:13	136:13	14	'a'
LEAF_NODE	136:16	136:16	10	;
LEAF_NODE	137:2	137:2	8	}
EXPR_STATEMENT	141:2	141:17	6	lastTurn = fnum ;
EXPR	141:2	141:2	7	lastTurn = fnum
ASSIGN	141:2	141:13	8	lastTurn = fnum
LVAL	141:2	141:2	9	lastTurn
FIELD	141:2	141:2	10	lastTurn
LEAF_NODE	141:2	141:2	11	lastTurn
ASSIGN_OP	141:11	141:11	9	=
LEAF_NODE	141:11	141:11	10	=
RVAL	141:13	141:13	9	fnum
FIELD	141:13	141:13	10	fnum
LEAF_NODE	141:13	141:13	11	fnum
LEAF_NODE	141:17	141:17	7	;
LEAF_NODE	142:1	142:1	5	}
EXPR_STATEMENT	147:1	147:47	3	fpnt [ 1 ] = ( char ) ( ( fnum - lastTurn ) / 26 ) + 'a' ;
EXPR	147:1	147:1	4	fpnt [ 1 ] = ( char ) ( ( fnum - lastTurn ) / 26 ) + 'a'
ASSIGN	147:1	147:11	5	fpnt [ 1 ] = ( char ) ( ( fnum - lastTurn ) / 26 ) + 'a'
LVAL	147:1	147:1	6	fpnt [ 1 ]
FIELD	147:1	147:7	7	fpnt [ 1 ]
LEAF_NODE	147:1	147:1	8	fpnt
LEAF_NODE	147:5	147:5	8	[
EXPR	147:6	147:6	8	1
FIELD	147:6	147:6	9	1
LEAF_NODE	147:6	147:6	10	1
LEAF_NODE	147:7	147:7	8	]
ASSIGN_OP	147:9	147:9	6	=
LEAF_NODE	147:9	147:9	7	=
RVAL	147:11	147:44	6	( char ) ( ( fnum - lastTurn ) / 26 ) + 'a'
LEAF_NODE	147:11	147:11	7	(
TYPE_NAME	147:12	147:12	7	char
LEAF_NODE	147:12	147:12	8	char
LEAF_NODE	147:16	147:16	7	)
LEAF_NODE	147:17	147:17	7	(
LEAF_NODE	147:18	147:18	7	(
FIELD	147:19	147:19	7	fnum
LEAF_NODE	147:19	147:19	8	fnum
LEAF_NODE	147:24	147:24	7	-
FIELD	147:26	147:26	7	lastTurn
LEAF_NODE	147:26	147:26	8	lastTurn
LEAF_NODE	147:34	147:34	7	)
LEAF_NODE	147:36	147:36	7	/
FIELD	147:38	147:38	7	26
LEAF_NODE	147:38	147:38	8	26
LEAF_NODE	147:40	147:40	7	)
LEAF_NODE	147:42	147:42	7	+
FIELD	147:44	147:44	7	'a'
LEAF_NODE	147:44	147:44	8	'a'
LEAF_NODE	147:47	147:47	4	;
EXPR_STATEMENT	151:1	151:34	3	fpnt [ 2 ] = ( char ) ( fnum % 26 ) + 'a' ;
EXPR	151:1	151:1	4	fpnt [ 2 ] = ( char ) ( fnum % 26 ) + 'a'
ASSIGN	151:1	151:11	5	fpnt [ 2 ] = ( char ) ( fnum % 26 ) + 'a'
LVAL	151:1	151:1	6	fpnt [ 2 ]
FIELD	151:1	151:7	7	fpnt [ 2 ]
LEAF_NODE	151:1	151:1	8	fpnt
LEAF_NODE	151:5	151:5	8	[
EXPR	151:6	151:6	8	2
FIELD	151:6	151:6	9	2
LEAF_NODE	151:6	151:6	10	2
LEAF_NODE	151:7	151:7	8	]
ASSIGN_OP	151:9	151:9	6	=
LEAF_NODE	151:9	151:9	7	=
RVAL	151:11	151:31	6	( char ) ( fnum % 26 ) + 'a'
LEAF_NODE	151:11	151:11	7	(
TYPE_NAME	151:12	151:12	7	char
LEAF_NODE	151:12	151:12	8	char
LEAF_NODE	151:16	151:16	7	)
LEAF_NODE	151:17	151:17	7	(
FIELD	151:18	151:18	7	fnum
LEAF_NODE	151:18	151:18	8	fnum
LEAF_NODE	151:23	151:23	7	%
FIELD	151:25	151:25	7	26
LEAF_NODE	151:25	151:25	8	26
LEAF_NODE	151:27	151:27	7	)
LEAF_NODE	151:29	151:29	7	+
FIELD	151:31	151:31	7	'a'
LEAF_NODE	151:31	151:31	8	'a'
LEAF_NODE	151:34	151:34	4	;
EXPR_STATEMENT	152:1	152:7	3	fnum ++ ;
EXPR	152:1	152:1	4	fnum ++
FIELD	152:1	152:5	5	fnum ++
LEAF_NODE	152:1	152:1	6	fnum
LEAF_NODE	152:5	152:5	6	++
LEAF_NODE	152:7	152:7	4	;
LEAF_NODE	153:0	153:0	2	}
FUNCTION_DEF	155:0	226:0	1	
RETURN_TYPE	155:0	155:7	2	static int
LEAF_NODE	155:0	155:0	3	static
TYPE_NAME	155:7	155:7	3	int
LEAF_NODE	155:7	155:7	4	int
FUNCTION_NAME	156:0	156:0	2	tiffcp
LEAF_NODE	156:0	156:0	3	tiffcp
PARAMETER_LIST	156:6	156:26	2	( TIFF * in , TIFF * out )
LEAF_NODE	156:6	156:6	3	(
PARAMETER_DECL	156:7	156:13	3	TIFF * in
TYPE	156:7	156:11	4	TIFF *
TYPE_NAME	156:7	156:7	5	TIFF
LEAF_NODE	156:7	156:7	6	TIFF
POINTER	156:11	156:11	5	*
LEAF_NODE	156:11	156:11	6	*
NAME	156:13	156:13	4	in
LEAF_NODE	156:13	156:13	5	in
LEAF_NODE	156:15	156:15	3	,
PARAMETER_DECL	156:17	156:23	3	TIFF * out
TYPE	156:17	156:21	4	TIFF *
TYPE_NAME	156:17	156:17	5	TIFF
LEAF_NODE	156:17	156:17	6	TIFF
POINTER	156:21	156:21	5	*
LEAF_NODE	156:21	156:21	6	*
NAME	156:23	156:23	4	out
LEAF_NODE	156:23	156:23	5	out
LEAF_NODE	156:26	156:26	3	)
LEAF_NODE	157:0	157:0	2	{
STATEMENTS	158:1	224:1	2	
SIMPLE_DECL	158:1	158:69	3	uint16 bitspersample , uint16 samplesperpixel , uint16 compression , uint16 shortv , uint16 * shortav ;
INIT_DECL_LIST	158:1	158:1	4	uint16 bitspersample , uint16 samplesperpixel , uint16 compression , uint16 shortv , uint16 * shortav
VAR_DECL	158:1	158:8	5	uint16 bitspersample
TYPE	158:1	158:1	6	uint16
TYPE_NAME	158:1	158:1	7	uint16
LEAF_NODE	158:1	158:1	8	uint16
NAME	158:8	158:8	6	bitspersample
LEAF_NODE	158:8	158:8	7	bitspersample
LEAF_NODE	158:21	158:21	5	,
INIT_DECL_LIST	158:1	158:1	5	uint16 samplesperpixel , uint16 compression , uint16 shortv , uint16 * shortav
VAR_DECL	158:1	158:23	6	uint16 samplesperpixel
TYPE	158:1	158:1	7	uint16
TYPE_NAME	158:1	158:1	8	uint16
LEAF_NODE	158:1	158:1	9	uint16
NAME	158:23	158:23	7	samplesperpixel
LEAF_NODE	158:23	158:23	8	samplesperpixel
LEAF_NODE	158:38	158:38	6	,
INIT_DECL_LIST	158:1	158:1	6	uint16 compression , uint16 shortv , uint16 * shortav
VAR_DECL	158:1	158:40	7	uint16 compression
TYPE	158:1	158:1	8	uint16
TYPE_NAME	158:1	158:1	9	uint16
LEAF_NODE	158:1	158:1	10	uint16
NAME	158:40	158:40	8	compression
LEAF_NODE	158:40	158:40	9	compression
LEAF_NODE	158:51	158:51	7	,
INIT_DECL_LIST	158:1	158:1	7	uint16 shortv , uint16 * shortav
VAR_DECL	158:1	158:53	8	uint16 shortv
TYPE	158:1	158:1	9	uint16
TYPE_NAME	158:1	158:1	10	uint16
LEAF_NODE	158:1	158:1	11	uint16
NAME	158:53	158:53	9	shortv
LEAF_NODE	158:53	158:53	10	shortv
LEAF_NODE	158:59	158:59	8	,
VAR_DECL	158:1	158:62	8	uint16 * shortav
TYPE	158:1	158:61	9	uint16 *
TYPE_NAME	158:1	158:1	10	uint16
LEAF_NODE	158:1	158:1	11	uint16
POINTER	158:61	158:61	10	*
LEAF_NODE	158:61	158:61	11	*
NAME	158:62	158:62	9	shortav
LEAF_NODE	158:62	158:62	10	shortav
LEAF_NODE	158:69	158:69	4	;
SIMPLE_DECL	159:1	159:12	3	uint32 w , uint32 l ;
INIT_DECL_LIST	159:1	159:1	4	uint32 w , uint32 l
VAR_DECL	159:1	159:8	5	uint32 w
TYPE	159:1	159:1	6	uint32
TYPE_NAME	159:1	159:1	7	uint32
LEAF_NODE	159:1	159:1	8	uint32
NAME	159:8	159:8	6	w
LEAF_NODE	159:8	159:8	7	w
LEAF_NODE	159:9	159:9	5	,
VAR_DECL	159:1	159:11	5	uint32 l
TYPE	159:1	159:1	6	uint32
TYPE_NAME	159:1	159:1	7	uint32
LEAF_NODE	159:1	159:1	8	uint32
NAME	159:11	159:11	6	l
LEAF_NODE	159:11	159:11	7	l
LEAF_NODE	159:12	159:12	4	;
SIMPLE_DECL	160:1	160:13	3	float floatv ;
VAR_DECL	160:1	160:7	4	float floatv
TYPE	160:1	160:1	5	float
TYPE_NAME	160:1	160:1	6	float
LEAF_NODE	160:1	160:1	7	float
NAME	160:7	160:7	5	floatv
LEAF_NODE	160:7	160:7	6	floatv
LEAF_NODE	160:13	160:13	4	;
SIMPLE_DECL	161:1	161:14	3	char * stringv ;
VAR_DECL	161:1	161:7	4	char * stringv
TYPE	161:1	161:6	5	char *
TYPE_NAME	161:1	161:1	6	char
LEAF_NODE	161:1	161:1	7	char
POINTER	161:6	161:6	6	*
LEAF_NODE	161:6	161:6	7	*
NAME	161:7	161:7	5	stringv
LEAF_NODE	161:7	161:7	6	stringv
LEAF_NODE	161:14	161:14	4	;
SIMPLE_DECL	162:1	162:13	3	uint32 longv ;
VAR_DECL	162:1	162:8	4	uint32 longv
TYPE	162:1	162:1	5	uint32
TYPE_NAME	162:1	162:1	6	uint32
LEAF_NODE	162:1	162:1	7	uint32
NAME	162:8	162:8	5	longv
LEAF_NODE	162:8	162:8	6	longv
LEAF_NODE	162:13	162:13	4	;
EXPR_STATEMENT	164:1	164:38	3	CopyField ( TIFFTAG_SUBFILETYPE , longv ) ;
EXPR	164:1	164:1	4	CopyField ( TIFFTAG_SUBFILETYPE , longv )
FUNCTION_CALL	164:1	164:37	5	CopyField ( TIFFTAG_SUBFILETYPE , longv )
CALLEE	164:1	164:1	6	CopyField
LEAF_NODE	164:1	164:1	7	CopyField
LEAF_NODE	164:10	164:10	6	(
ARGUMENT	164:11	164:11	6	TIFFTAG_SUBFILETYPE
FIELD	164:11	164:11	7	TIFFTAG_SUBFILETYPE
LEAF_NODE	164:11	164:11	8	TIFFTAG_SUBFILETYPE
LEAF_NODE	164:30	164:30	6	,
ARGUMENT	164:32	164:32	6	longv
FIELD	164:32	164:32	7	longv
LEAF_NODE	164:32	164:32	8	longv
LEAF_NODE	164:37	164:37	6	)
LEAF_NODE	164:38	164:38	4	;
EXPR_STATEMENT	165:1	165:32	3	CopyField ( TIFFTAG_TILEWIDTH , w ) ;
EXPR	165:1	165:1	4	CopyField ( TIFFTAG_TILEWIDTH , w )
FUNCTION_CALL	165:1	165:31	5	CopyField ( TIFFTAG_TILEWIDTH , w )
CALLEE	165:1	165:1	6	CopyField
LEAF_NODE	165:1	165:1	7	CopyField
LEAF_NODE	165:10	165:10	6	(
ARGUMENT	165:11	165:11	6	TIFFTAG_TILEWIDTH
FIELD	165:11	165:11	7	TIFFTAG_TILEWIDTH
LEAF_NODE	165:11	165:11	8	TIFFTAG_TILEWIDTH
LEAF_NODE	165:28	165:28	6	,
ARGUMENT	165:30	165:30	6	w
FIELD	165:30	165:30	7	w
LEAF_NODE	165:30	165:30	8	w
LEAF_NODE	165:31	165:31	6	)
LEAF_NODE	165:32	165:32	4	;
EXPR_STATEMENT	166:1	166:33	3	CopyField ( TIFFTAG_TILELENGTH , l ) ;
EXPR	166:1	166:1	4	CopyField ( TIFFTAG_TILELENGTH , l )
FUNCTION_CALL	166:1	166:32	5	CopyField ( TIFFTAG_TILELENGTH , l )
CALLEE	166:1	166:1	6	CopyField
LEAF_NODE	166:1	166:1	7	CopyField
LEAF_NODE	166:10	166:10	6	(
ARGUMENT	166:11	166:11	6	TIFFTAG_TILELENGTH
FIELD	166:11	166:11	7	TIFFTAG_TILELENGTH
LEAF_NODE	166:11	166:11	8	TIFFTAG_TILELENGTH
LEAF_NODE	166:29	166:29	6	,
ARGUMENT	166:31	166:31	6	l
FIELD	166:31	166:31	7	l
LEAF_NODE	166:31	166:31	8	l
LEAF_NODE	166:32	166:32	6	)
LEAF_NODE	166:33	166:33	4	;
EXPR_STATEMENT	167:1	167:33	3	CopyField ( TIFFTAG_IMAGEWIDTH , w ) ;
EXPR	167:1	167:1	4	CopyField ( TIFFTAG_IMAGEWIDTH , w )
FUNCTION_CALL	167:1	167:32	5	CopyField ( TIFFTAG_IMAGEWIDTH , w )
CALLEE	167:1	167:1	6	CopyField
LEAF_NODE	167:1	167:1	7	CopyField
LEAF_NODE	167:10	167:10	6	(
ARGUMENT	167:11	167:11	6	TIFFTAG_IMAGEWIDTH
FIELD	167:11	167:11	7	TIFFTAG_IMAGEWIDTH
LEAF_NODE	167:11	167:11	8	TIFFTAG_IMAGEWIDTH
LEAF_NODE	167:29	167:29	6	,
ARGUMENT	167:31	167:31	6	w
FIELD	167:31	167:31	7	w
LEAF_NODE	167:31	167:31	8	w
LEAF_NODE	167:32	167:32	6	)
LEAF_NODE	167:33	167:33	4	;
EXPR_STATEMENT	168:1	168:34	3	CopyField ( TIFFTAG_IMAGELENGTH , l ) ;
EXPR	168:1	168:1	4	CopyField ( TIFFTAG_IMAGELENGTH , l )
FUNCTION_CALL	168:1	168:33	5	CopyField ( TIFFTAG_IMAGELENGTH , l )
CALLEE	168:1	168:1	6	CopyField
LEAF_NODE	168:1	168:1	7	CopyField
LEAF_NODE	168:10	168:10	6	(
ARGUMENT	168:11	168:11	6	TIFFTAG_IMAGELENGTH
FIELD	168:11	168:11	7	TIFFTAG_IMAGELENGTH
LEAF_NODE	168:11	168:11	8	TIFFTAG_IMAGELENGTH
LEAF_NODE	168:30	168:30	6	,
ARGUMENT	168:32	168:32	6	l
FIELD	168:32	168:32	7	l
LEAF_NODE	168:32	168:32	8	l
LEAF_NODE	168:33	168:33	6	)
LEAF_NODE	168:34	168:34	4	;
EXPR_STATEMENT	169:1	169:48	3	CopyField ( TIFFTAG_BITSPERSAMPLE , bitspersample ) ;
EXPR	169:1	169:1	4	CopyField ( TIFFTAG_BITSPERSAMPLE , bitspersample )
FUNCTION_CALL	169:1	169:47	5	CopyField ( TIFFTAG_BITSPERSAMPLE , bitspersample )
CALLEE	169:1	169:1	6	CopyField
LEAF_NODE	169:1	169:1	7	CopyField
LEAF_NODE	169:10	169:10	6	(
ARGUMENT	169:11	169:11	6	TIFFTAG_BITSPERSAMPLE
FIELD	169:11	169:11	7	TIFFTAG_BITSPERSAMPLE
LEAF_NODE	169:11	169:11	8	TIFFTAG_BITSPERSAMPLE
LEAF_NODE	169:32	169:32	6	,
ARGUMENT	169:34	169:34	6	bitspersample
FIELD	169:34	169:34	7	bitspersample
LEAF_NODE	169:34	169:34	8	bitspersample
LEAF_NODE	169:47	169:47	6	)
LEAF_NODE	169:48	169:48	4	;
EXPR_STATEMENT	170:1	170:52	3	CopyField ( TIFFTAG_SAMPLESPERPIXEL , samplesperpixel ) ;
EXPR	170:1	170:1	4	CopyField ( TIFFTAG_SAMPLESPERPIXEL , samplesperpixel )
FUNCTION_CALL	170:1	170:51	5	CopyField ( TIFFTAG_SAMPLESPERPIXEL , samplesperpixel )
CALLEE	170:1	170:1	6	CopyField
LEAF_NODE	170:1	170:1	7	CopyField
LEAF_NODE	170:10	170:10	6	(
ARGUMENT	170:11	170:11	6	TIFFTAG_SAMPLESPERPIXEL
FIELD	170:11	170:11	7	TIFFTAG_SAMPLESPERPIXEL
LEAF_NODE	170:11	170:11	8	TIFFTAG_SAMPLESPERPIXEL
LEAF_NODE	170:34	170:34	6	,
ARGUMENT	170:36	170:36	6	samplesperpixel
FIELD	170:36	170:36	7	samplesperpixel
LEAF_NODE	170:36	170:36	8	samplesperpixel
LEAF_NODE	170:51	170:51	6	)
LEAF_NODE	170:52	170:52	4	;
EXPR_STATEMENT	171:1	171:44	3	CopyField ( TIFFTAG_COMPRESSION , compression ) ;
EXPR	171:1	171:1	4	CopyField ( TIFFTAG_COMPRESSION , compression )
FUNCTION_CALL	171:1	171:43	5	CopyField ( TIFFTAG_COMPRESSION , compression )
CALLEE	171:1	171:1	6	CopyField
LEAF_NODE	171:1	171:1	7	CopyField
LEAF_NODE	171:10	171:10	6	(
ARGUMENT	171:11	171:11	6	TIFFTAG_COMPRESSION
FIELD	171:11	171:11	7	TIFFTAG_COMPRESSION
LEAF_NODE	171:11	171:11	8	TIFFTAG_COMPRESSION
LEAF_NODE	171:30	171:30	6	,
ARGUMENT	171:32	171:32	6	compression
FIELD	171:32	171:32	7	compression
LEAF_NODE	171:32	171:32	8	compression
LEAF_NODE	171:43	171:43	6	)
LEAF_NODE	171:44	171:44	4	;
SELECTION	172:1	172:38	3	
KEYWORD	172:1	172:1	4	if
LEAF_NODE	172:1	172:1	5	if
LEAF_NODE	172:4	172:4	4	(
CONDITION	172:5	172:5	4	compression == COMPRESSION_JPEG
EXPR	172:5	172:20	5	compression == COMPRESSION_JPEG
FIELD	172:5	172:5	6	compression
LEAF_NODE	172:5	172:5	7	compression
EQ_OPERATOR	172:17	172:17	6	==
LEAF_NODE	172:17	172:17	7	==
FIELD	172:20	172:20	6	COMPRESSION_JPEG
LEAF_NODE	172:20	172:20	7	COMPRESSION_JPEG
LEAF_NODE	172:36	172:36	4	)
STATEMENTS	172:38	179:1	4	
LEAF_NODE	172:38	172:38	5	{
STATEMENTS	173:2	175:2	5	
SIMPLE_DECL	173:2	173:18	6	uint32 count ; count = 0 ;
VAR_DECL	173:2	173:9	7	uint32 count ; count = 0
TYPE	173:2	173:2	8	uint32
TYPE_NAME	173:2	173:2	9	uint32
LEAF_NODE	173:2	173:2	10	uint32
NAME	173:9	173:9	8	count
LEAF_NODE	173:9	173:9	9	count
LEAF_NODE	0:0	0:0	8	;
INIT	173:9	173:9	8	count = 0
ASSIGN	173:9	173:17	9	count = 0
LVAL	173:9	173:9	10	count
NAME	173:9	173:9	11	count
LEAF_NODE	173:9	173:9	12	count
ASSIGN_OP	173:15	173:15	10	=
LEAF_NODE	173:15	173:15	11	=
RVAL	173:17	173:17	10	0
FIELD	173:17	173:17	11	0
LEAF_NODE	173:17	173:17	12	0
LEAF_NODE	173:18	173:18	7	;
SIMPLE_DECL	174:2	174:20	6	void * table ; table = NULL ;
VAR_DECL	174:2	174:8	7	void * table ; table = NULL
TYPE	174:2	174:7	8	void *
TYPE_NAME	174:2	174:2	9	void
LEAF_NODE	174:2	174:2	10	void
POINTER	174:7	174:7	9	*
LEAF_NODE	174:7	174:7	10	*
NAME	174:8	174:8	8	table
LEAF_NODE	174:8	174:8	9	table
LEAF_NODE	0:0	0:0	8	;
INIT	174:8	174:8	8	table = NULL
ASSIGN	174:8	174:16	9	table = NULL
LVAL	174:8	174:8	10	table
NAME	174:8	174:8	11	table
LEAF_NODE	174:8	174:8	12	table
ASSIGN_OP	174:14	174:14	10	=
LEAF_NODE	174:14	174:14	11	=
RVAL	174:16	174:16	10	NULL
FIELD	174:16	174:16	11	NULL
LEAF_NODE	174:16	174:16	12	NULL
LEAF_NODE	174:20	174:20	7	;
SELECTION	175:2	176:29	6	
KEYWORD	175:2	175:2	7	if
LEAF_NODE	175:2	175:2	8	if
LEAF_NODE	175:5	175:5	7	(
CONDITION	175:6	175:6	7	TIFFGetField ( in , TIFFTAG_JPEGTABLES , & count , & table ) && count > 0 && table
EXPR	175:6	175:6	8	TIFFGetField ( in , TIFFTAG_JPEGTABLES , & count , & table ) && count > 0 && table
AND	175:6	176:9	9	TIFFGetField ( in , TIFFTAG_JPEGTABLES , & count , & table ) && count > 0 && table
EXPR	175:6	175:6	10	TIFFGetField ( in , TIFFTAG_JPEGTABLES , & count , & table )
FUNCTION_CALL	175:6	175:57	11	TIFFGetField ( in , TIFFTAG_JPEGTABLES , & count , & table )
CALLEE	175:6	175:6	12	TIFFGetField
LEAF_NODE	175:6	175:6	13	TIFFGetField
LEAF_NODE	175:18	175:18	12	(
ARGUMENT	175:19	175:19	12	in
FIELD	175:19	175:19	13	in
LEAF_NODE	175:19	175:19	14	in
LEAF_NODE	175:21	175:21	12	,
ARGUMENT	175:23	175:23	12	TIFFTAG_JPEGTABLES
FIELD	175:23	175:23	13	TIFFTAG_JPEGTABLES
LEAF_NODE	175:23	175:23	14	TIFFTAG_JPEGTABLES
LEAF_NODE	175:41	175:41	12	,
ARGUMENT	175:43	175:43	12	& count
UNARY_EXPR	175:43	175:44	13	& count
UNARY_OPERATOR	175:43	175:43	14	&
LEAF_NODE	175:43	175:43	15	&
FIELD	175:44	175:44	14	count
LEAF_NODE	175:44	175:44	15	count
LEAF_NODE	175:49	175:49	12	,
ARGUMENT	175:51	175:51	12	& table
UNARY_EXPR	175:51	175:52	13	& table
UNARY_OPERATOR	175:51	175:51	14	&
LEAF_NODE	175:51	175:51	15	&
FIELD	175:52	175:52	14	table
LEAF_NODE	175:52	175:52	15	table
LEAF_NODE	175:57	175:57	12	)
LEAF_NODE	176:6	176:6	10	&&
EXPR	176:9	176:9	10	count > 0 && table
AND	176:9	176:22	11	count > 0 && table
EXPR	176:9	176:17	12	count > 0
FIELD	176:9	176:9	13	count
LEAF_NODE	176:9	176:9	14	count
REL_OPERATOR	176:15	176:15	13	>
LEAF_NODE	176:15	176:15	14	>
FIELD	176:17	176:17	13	0
LEAF_NODE	176:17	176:17	14	0
LEAF_NODE	176:19	176:19	12	&&
EXPR	176:22	176:22	12	table
FIELD	176:22	176:22	13	table
LEAF_NODE	176:22	176:22	14	table
LEAF_NODE	176:27	176:27	7	)
STATEMENTS	176:29	178:2	7	
LEAF_NODE	176:29	176:29	8	{
STATEMENTS	177:6	177:6	8	
EXPR_STATEMENT	177:6	177:57	9	TIFFSetField ( out , TIFFTAG_JPEGTABLES , count , table ) ;
EXPR	177:6	177:6	10	TIFFSetField ( out , TIFFTAG_JPEGTABLES , count , table )
FUNCTION_CALL	177:6	177:56	11	TIFFSetField ( out , TIFFTAG_JPEGTABLES , count , table )
CALLEE	177:6	177:6	12	TIFFSetField
LEAF_NODE	177:6	177:6	13	TIFFSetField
LEAF_NODE	177:18	177:18	12	(
ARGUMENT	177:19	177:19	12	out
FIELD	177:19	177:19	13	out
LEAF_NODE	177:19	177:19	14	out
LEAF_NODE	177:22	177:22	12	,
ARGUMENT	177:24	177:24	12	TIFFTAG_JPEGTABLES
FIELD	177:24	177:24	13	TIFFTAG_JPEGTABLES
LEAF_NODE	177:24	177:24	14	TIFFTAG_JPEGTABLES
LEAF_NODE	177:42	177:42	12	,
ARGUMENT	177:44	177:44	12	count
FIELD	177:44	177:44	13	count
LEAF_NODE	177:44	177:44	14	count
LEAF_NODE	177:49	177:49	12	,
ARGUMENT	177:51	177:51	12	table
FIELD	177:51	177:51	13	table
LEAF_NODE	177:51	177:51	14	table
LEAF_NODE	177:56	177:56	12	)
LEAF_NODE	177:57	177:57	10	;
LEAF_NODE	178:2	178:2	8	}
LEAF_NODE	179:1	179:1	5	}
EXPR_STATEMENT	180:8	180:46	3	CopyField ( TIFFTAG_PHOTOMETRIC , shortv ) ;
EXPR	180:8	180:8	4	CopyField ( TIFFTAG_PHOTOMETRIC , shortv )
FUNCTION_CALL	180:8	180:45	5	CopyField ( TIFFTAG_PHOTOMETRIC , shortv )
CALLEE	180:8	180:8	6	CopyField
LEAF_NODE	180:8	180:8	7	CopyField
LEAF_NODE	180:17	180:17	6	(
ARGUMENT	180:18	180:18	6	TIFFTAG_PHOTOMETRIC
FIELD	180:18	180:18	7	TIFFTAG_PHOTOMETRIC
LEAF_NODE	180:18	180:18	8	TIFFTAG_PHOTOMETRIC
LEAF_NODE	180:37	180:37	6	,
ARGUMENT	180:39	180:39	6	shortv
FIELD	180:39	180:39	7	shortv
LEAF_NODE	180:39	180:39	8	shortv
LEAF_NODE	180:45	180:45	6	)
LEAF_NODE	180:46	180:46	4	;
EXPR_STATEMENT	181:1	181:37	3	CopyField ( TIFFTAG_PREDICTOR , shortv ) ;
EXPR	181:1	181:1	4	CopyField ( TIFFTAG_PREDICTOR , shortv )
FUNCTION_CALL	181:1	181:36	5	CopyField ( TIFFTAG_PREDICTOR , shortv )
CALLEE	181:1	181:1	6	CopyField
LEAF_NODE	181:1	181:1	7	CopyField
LEAF_NODE	181:10	181:10	6	(
ARGUMENT	181:11	181:11	6	TIFFTAG_PREDICTOR
FIELD	181:11	181:11	7	TIFFTAG_PREDICTOR
LEAF_NODE	181:11	181:11	8	TIFFTAG_PREDICTOR
LEAF_NODE	181:28	181:28	6	,
ARGUMENT	181:30	181:30	6	shortv
FIELD	181:30	181:30	7	shortv
LEAF_NODE	181:30	181:30	8	shortv
LEAF_NODE	181:36	181:36	6	)
LEAF_NODE	181:37	181:37	4	;
EXPR_STATEMENT	182:1	182:41	3	CopyField ( TIFFTAG_THRESHHOLDING , shortv ) ;
EXPR	182:1	182:1	4	CopyField ( TIFFTAG_THRESHHOLDING , shortv )
FUNCTION_CALL	182:1	182:40	5	CopyField ( TIFFTAG_THRESHHOLDING , shortv )
CALLEE	182:1	182:1	6	CopyField
LEAF_NODE	182:1	182:1	7	CopyField
LEAF_NODE	182:10	182:10	6	(
ARGUMENT	182:11	182:11	6	TIFFTAG_THRESHHOLDING
FIELD	182:11	182:11	7	TIFFTAG_THRESHHOLDING
LEAF_NODE	182:11	182:11	8	TIFFTAG_THRESHHOLDING
LEAF_NODE	182:32	182:32	6	,
ARGUMENT	182:34	182:34	6	shortv
FIELD	182:34	182:34	7	shortv
LEAF_NODE	182:34	182:34	8	shortv
LEAF_NODE	182:40	182:40	6	)
LEAF_NODE	182:41	182:41	4	;
EXPR_STATEMENT	183:1	183:37	3	CopyField ( TIFFTAG_FILLORDER , shortv ) ;
EXPR	183:1	183:1	4	CopyField ( TIFFTAG_FILLORDER , shortv )
FUNCTION_CALL	183:1	183:36	5	CopyField ( TIFFTAG_FILLORDER , shortv )
CALLEE	183:1	183:1	6	CopyField
LEAF_NODE	183:1	183:1	7	CopyField
LEAF_NODE	183:10	183:10	6	(
ARGUMENT	183:11	183:11	6	TIFFTAG_FILLORDER
FIELD	183:11	183:11	7	TIFFTAG_FILLORDER
LEAF_NODE	183:11	183:11	8	TIFFTAG_FILLORDER
LEAF_NODE	183:28	183:28	6	,
ARGUMENT	183:30	183:30	6	shortv
FIELD	183:30	183:30	7	shortv
LEAF_NODE	183:30	183:30	8	shortv
LEAF_NODE	183:36	183:36	6	)
LEAF_NODE	183:37	183:37	4	;
EXPR_STATEMENT	184:1	184:39	3	CopyField ( TIFFTAG_ORIENTATION , shortv ) ;
EXPR	184:1	184:1	4	CopyField ( TIFFTAG_ORIENTATION , shortv )
FUNCTION_CALL	184:1	184:38	5	CopyField ( TIFFTAG_ORIENTATION , shortv )
CALLEE	184:1	184:1	6	CopyField
LEAF_NODE	184:1	184:1	7	CopyField
LEAF_NODE	184:10	184:10	6	(
ARGUMENT	184:11	184:11	6	TIFFTAG_ORIENTATION
FIELD	184:11	184:11	7	TIFFTAG_ORIENTATION
LEAF_NODE	184:11	184:11	8	TIFFTAG_ORIENTATION
LEAF_NODE	184:30	184:30	6	,
ARGUMENT	184:32	184:32	6	shortv
FIELD	184:32	184:32	7	shortv
LEAF_NODE	184:32	184:32	8	shortv
LEAF_NODE	184:38	184:38	6	)
LEAF_NODE	184:39	184:39	4	;
EXPR_STATEMENT	185:1	185:42	3	CopyField ( TIFFTAG_MINSAMPLEVALUE , shortv ) ;
EXPR	185:1	185:1	4	CopyField ( TIFFTAG_MINSAMPLEVALUE , shortv )
FUNCTION_CALL	185:1	185:41	5	CopyField ( TIFFTAG_MINSAMPLEVALUE , shortv )
CALLEE	185:1	185:1	6	CopyField
LEAF_NODE	185:1	185:1	7	CopyField
LEAF_NODE	185:10	185:10	6	(
ARGUMENT	185:11	185:11	6	TIFFTAG_MINSAMPLEVALUE
FIELD	185:11	185:11	7	TIFFTAG_MINSAMPLEVALUE
LEAF_NODE	185:11	185:11	8	TIFFTAG_MINSAMPLEVALUE
LEAF_NODE	185:33	185:33	6	,
ARGUMENT	185:35	185:35	6	shortv
FIELD	185:35	185:35	7	shortv
LEAF_NODE	185:35	185:35	8	shortv
LEAF_NODE	185:41	185:41	6	)
LEAF_NODE	185:42	185:42	4	;
EXPR_STATEMENT	186:1	186:42	3	CopyField ( TIFFTAG_MAXSAMPLEVALUE , shortv ) ;
EXPR	186:1	186:1	4	CopyField ( TIFFTAG_MAXSAMPLEVALUE , shortv )
FUNCTION_CALL	186:1	186:41	5	CopyField ( TIFFTAG_MAXSAMPLEVALUE , shortv )
CALLEE	186:1	186:1	6	CopyField
LEAF_NODE	186:1	186:1	7	CopyField
LEAF_NODE	186:10	186:10	6	(
ARGUMENT	186:11	186:11	6	TIFFTAG_MAXSAMPLEVALUE
FIELD	186:11	186:11	7	TIFFTAG_MAXSAMPLEVALUE
LEAF_NODE	186:11	186:11	8	TIFFTAG_MAXSAMPLEVALUE
LEAF_NODE	186:33	186:33	6	,
ARGUMENT	186:35	186:35	6	shortv
FIELD	186:35	186:35	7	shortv
LEAF_NODE	186:35	186:35	8	shortv
LEAF_NODE	186:41	186:41	6	)
LEAF_NODE	186:42	186:42	4	;
EXPR_STATEMENT	187:1	187:39	3	CopyField ( TIFFTAG_XRESOLUTION , floatv ) ;
EXPR	187:1	187:1	4	CopyField ( TIFFTAG_XRESOLUTION , floatv )
FUNCTION_CALL	187:1	187:38	5	CopyField ( TIFFTAG_XRESOLUTION , floatv )
CALLEE	187:1	187:1	6	CopyField
LEAF_NODE	187:1	187:1	7	CopyField
LEAF_NODE	187:10	187:10	6	(
ARGUMENT	187:11	187:11	6	TIFFTAG_XRESOLUTION
FIELD	187:11	187:11	7	TIFFTAG_XRESOLUTION
LEAF_NODE	187:11	187:11	8	TIFFTAG_XRESOLUTION
LEAF_NODE	187:30	187:30	6	,
ARGUMENT	187:32	187:32	6	floatv
FIELD	187:32	187:32	7	floatv
LEAF_NODE	187:32	187:32	8	floatv
LEAF_NODE	187:38	187:38	6	)
LEAF_NODE	187:39	187:39	4	;
EXPR_STATEMENT	188:1	188:39	3	CopyField ( TIFFTAG_YRESOLUTION , floatv ) ;
EXPR	188:1	188:1	4	CopyField ( TIFFTAG_YRESOLUTION , floatv )
FUNCTION_CALL	188:1	188:38	5	CopyField ( TIFFTAG_YRESOLUTION , floatv )
CALLEE	188:1	188:1	6	CopyField
LEAF_NODE	188:1	188:1	7	CopyField
LEAF_NODE	188:10	188:10	6	(
ARGUMENT	188:11	188:11	6	TIFFTAG_YRESOLUTION
FIELD	188:11	188:11	7	TIFFTAG_YRESOLUTION
LEAF_NODE	188:11	188:11	8	TIFFTAG_YRESOLUTION
LEAF_NODE	188:30	188:30	6	,
ARGUMENT	188:32	188:32	6	floatv
FIELD	188:32	188:32	7	floatv
LEAF_NODE	188:32	188:32	8	floatv
LEAF_NODE	188:38	188:38	6	)
LEAF_NODE	188:39	188:39	4	;
EXPR_STATEMENT	189:1	189:40	3	CopyField ( TIFFTAG_GROUP3OPTIONS , longv ) ;
EXPR	189:1	189:1	4	CopyField ( TIFFTAG_GROUP3OPTIONS , longv )
FUNCTION_CALL	189:1	189:39	5	CopyField ( TIFFTAG_GROUP3OPTIONS , longv )
CALLEE	189:1	189:1	6	CopyField
LEAF_NODE	189:1	189:1	7	CopyField
LEAF_NODE	189:10	189:10	6	(
ARGUMENT	189:11	189:11	6	TIFFTAG_GROUP3OPTIONS
FIELD	189:11	189:11	7	TIFFTAG_GROUP3OPTIONS
LEAF_NODE	189:11	189:11	8	TIFFTAG_GROUP3OPTIONS
LEAF_NODE	189:32	189:32	6	,
ARGUMENT	189:34	189:34	6	longv
FIELD	189:34	189:34	7	longv
LEAF_NODE	189:34	189:34	8	longv
LEAF_NODE	189:39	189:39	6	)
LEAF_NODE	189:40	189:40	4	;
EXPR_STATEMENT	190:1	190:40	3	CopyField ( TIFFTAG_GROUP4OPTIONS , longv ) ;
EXPR	190:1	190:1	4	CopyField ( TIFFTAG_GROUP4OPTIONS , longv )
FUNCTION_CALL	190:1	190:39	5	CopyField ( TIFFTAG_GROUP4OPTIONS , longv )
CALLEE	190:1	190:1	6	CopyField
LEAF_NODE	190:1	190:1	7	CopyField
LEAF_NODE	190:10	190:10	6	(
ARGUMENT	190:11	190:11	6	TIFFTAG_GROUP4OPTIONS
FIELD	190:11	190:11	7	TIFFTAG_GROUP4OPTIONS
LEAF_NODE	190:11	190:11	8	TIFFTAG_GROUP4OPTIONS
LEAF_NODE	190:32	190:32	6	,
ARGUMENT	190:34	190:34	6	longv
FIELD	190:34	190:34	7	longv
LEAF_NODE	190:34	190:34	8	longv
LEAF_NODE	190:39	190:39	6	)
LEAF_NODE	190:40	190:40	4	;
EXPR_STATEMENT	191:1	191:42	3	CopyField ( TIFFTAG_RESOLUTIONUNIT , shortv ) ;
EXPR	191:1	191:1	4	CopyField ( TIFFTAG_RESOLUTIONUNIT , shortv )
FUNCTION_CALL	191:1	191:41	5	CopyField ( TIFFTAG_RESOLUTIONUNIT , shortv )
CALLEE	191:1	191:1	6	CopyField
LEAF_NODE	191:1	191:1	7	CopyField
LEAF_NODE	191:10	191:10	6	(
ARGUMENT	191:11	191:11	6	TIFFTAG_RESOLUTIONUNIT
FIELD	191:11	191:11	7	TIFFTAG_RESOLUTIONUNIT
LEAF_NODE	191:11	191:11	8	TIFFTAG_RESOLUTIONUNIT
LEAF_NODE	191:33	191:33	6	,
ARGUMENT	191:35	191:35	6	shortv
FIELD	191:35	191:35	7	shortv
LEAF_NODE	191:35	191:35	8	shortv
LEAF_NODE	191:41	191:41	6	)
LEAF_NODE	191:42	191:42	4	;
EXPR_STATEMENT	192:1	192:40	3	CopyField ( TIFFTAG_PLANARCONFIG , shortv ) ;
EXPR	192:1	192:1	4	CopyField ( TIFFTAG_PLANARCONFIG , shortv )
FUNCTION_CALL	192:1	192:39	5	CopyField ( TIFFTAG_PLANARCONFIG , shortv )
CALLEE	192:1	192:1	6	CopyField
LEAF_NODE	192:1	192:1	7	CopyField
LEAF_NODE	192:10	192:10	6	(
ARGUMENT	192:11	192:11	6	TIFFTAG_PLANARCONFIG
FIELD	192:11	192:11	7	TIFFTAG_PLANARCONFIG
LEAF_NODE	192:11	192:11	8	TIFFTAG_PLANARCONFIG
LEAF_NODE	192:31	192:31	6	,
ARGUMENT	192:33	192:33	6	shortv
FIELD	192:33	192:33	7	shortv
LEAF_NODE	192:33	192:33	8	shortv
LEAF_NODE	192:39	192:39	6	)
LEAF_NODE	192:40	192:40	4	;
EXPR_STATEMENT	193:1	193:39	3	CopyField ( TIFFTAG_ROWSPERSTRIP , longv ) ;
EXPR	193:1	193:1	4	CopyField ( TIFFTAG_ROWSPERSTRIP , longv )
FUNCTION_CALL	193:1	193:38	5	CopyField ( TIFFTAG_ROWSPERSTRIP , longv )
CALLEE	193:1	193:1	6	CopyField
LEAF_NODE	193:1	193:1	7	CopyField
LEAF_NODE	193:10	193:10	6	(
ARGUMENT	193:11	193:11	6	TIFFTAG_ROWSPERSTRIP
FIELD	193:11	193:11	7	TIFFTAG_ROWSPERSTRIP
LEAF_NODE	193:11	193:11	8	TIFFTAG_ROWSPERSTRIP
LEAF_NODE	193:31	193:31	6	,
ARGUMENT	193:33	193:33	6	longv
FIELD	193:33	193:33	7	longv
LEAF_NODE	193:33	193:33	8	longv
LEAF_NODE	193:38	193:38	6	)
LEAF_NODE	193:39	193:39	4	;
EXPR_STATEMENT	194:1	194:37	3	CopyField ( TIFFTAG_XPOSITION , floatv ) ;
EXPR	194:1	194:1	4	CopyField ( TIFFTAG_XPOSITION , floatv )
FUNCTION_CALL	194:1	194:36	5	CopyField ( TIFFTAG_XPOSITION , floatv )
CALLEE	194:1	194:1	6	CopyField
LEAF_NODE	194:1	194:1	7	CopyField
LEAF_NODE	194:10	194:10	6	(
ARGUMENT	194:11	194:11	6	TIFFTAG_XPOSITION
FIELD	194:11	194:11	7	TIFFTAG_XPOSITION
LEAF_NODE	194:11	194:11	8	TIFFTAG_XPOSITION
LEAF_NODE	194:28	194:28	6	,
ARGUMENT	194:30	194:30	6	floatv
FIELD	194:30	194:30	7	floatv
LEAF_NODE	194:30	194:30	8	floatv
LEAF_NODE	194:36	194:36	6	)
LEAF_NODE	194:37	194:37	4	;
EXPR_STATEMENT	195:1	195:37	3	CopyField ( TIFFTAG_YPOSITION , floatv ) ;
EXPR	195:1	195:1	4	CopyField ( TIFFTAG_YPOSITION , floatv )
FUNCTION_CALL	195:1	195:36	5	CopyField ( TIFFTAG_YPOSITION , floatv )
CALLEE	195:1	195:1	6	CopyField
LEAF_NODE	195:1	195:1	7	CopyField
LEAF_NODE	195:10	195:10	6	(
ARGUMENT	195:11	195:11	6	TIFFTAG_YPOSITION
FIELD	195:11	195:11	7	TIFFTAG_YPOSITION
LEAF_NODE	195:11	195:11	8	TIFFTAG_YPOSITION
LEAF_NODE	195:28	195:28	6	,
ARGUMENT	195:30	195:30	6	floatv
FIELD	195:30	195:30	7	floatv
LEAF_NODE	195:30	195:30	8	floatv
LEAF_NODE	195:36	195:36	6	)
LEAF_NODE	195:37	195:37	4	;
EXPR_STATEMENT	196:1	196:37	3	CopyField ( TIFFTAG_IMAGEDEPTH , longv ) ;
EXPR	196:1	196:1	4	CopyField ( TIFFTAG_IMAGEDEPTH , longv )
FUNCTION_CALL	196:1	196:36	5	CopyField ( TIFFTAG_IMAGEDEPTH , longv )
CALLEE	196:1	196:1	6	CopyField
LEAF_NODE	196:1	196:1	7	CopyField
LEAF_NODE	196:10	196:10	6	(
ARGUMENT	196:11	196:11	6	TIFFTAG_IMAGEDEPTH
FIELD	196:11	196:11	7	TIFFTAG_IMAGEDEPTH
LEAF_NODE	196:11	196:11	8	TIFFTAG_IMAGEDEPTH
LEAF_NODE	196:29	196:29	6	,
ARGUMENT	196:31	196:31	6	longv
FIELD	196:31	196:31	7	longv
LEAF_NODE	196:31	196:31	8	longv
LEAF_NODE	196:36	196:36	6	)
LEAF_NODE	196:37	196:37	4	;
EXPR_STATEMENT	197:1	197:36	3	CopyField ( TIFFTAG_TILEDEPTH , longv ) ;
EXPR	197:1	197:1	4	CopyField ( TIFFTAG_TILEDEPTH , longv )
FUNCTION_CALL	197:1	197:35	5	CopyField ( TIFFTAG_TILEDEPTH , longv )
CALLEE	197:1	197:1	6	CopyField
LEAF_NODE	197:1	197:1	7	CopyField
LEAF_NODE	197:10	197:10	6	(
ARGUMENT	197:11	197:11	6	TIFFTAG_TILEDEPTH
FIELD	197:11	197:11	7	TIFFTAG_TILEDEPTH
LEAF_NODE	197:11	197:11	8	TIFFTAG_TILEDEPTH
LEAF_NODE	197:28	197:28	6	,
ARGUMENT	197:30	197:30	6	longv
FIELD	197:30	197:30	7	longv
LEAF_NODE	197:30	197:30	8	longv
LEAF_NODE	197:35	197:35	6	)
LEAF_NODE	197:36	197:36	4	;
EXPR_STATEMENT	198:1	198:40	3	CopyField ( TIFFTAG_SAMPLEFORMAT , shortv ) ;
EXPR	198:1	198:1	4	CopyField ( TIFFTAG_SAMPLEFORMAT , shortv )
FUNCTION_CALL	198:1	198:39	5	CopyField ( TIFFTAG_SAMPLEFORMAT , shortv )
CALLEE	198:1	198:1	6	CopyField
LEAF_NODE	198:1	198:1	7	CopyField
LEAF_NODE	198:10	198:10	6	(
ARGUMENT	198:11	198:11	6	TIFFTAG_SAMPLEFORMAT
FIELD	198:11	198:11	7	TIFFTAG_SAMPLEFORMAT
LEAF_NODE	198:11	198:11	8	TIFFTAG_SAMPLEFORMAT
LEAF_NODE	198:31	198:31	6	,
ARGUMENT	198:33	198:33	6	shortv
FIELD	198:33	198:33	7	shortv
LEAF_NODE	198:33	198:33	8	shortv
LEAF_NODE	198:39	198:39	6	)
LEAF_NODE	198:40	198:40	4	;
EXPR_STATEMENT	199:1	199:50	3	CopyField2 ( TIFFTAG_EXTRASAMPLES , shortv , shortav ) ;
EXPR	199:1	199:1	4	CopyField2 ( TIFFTAG_EXTRASAMPLES , shortv , shortav )
FUNCTION_CALL	199:1	199:49	5	CopyField2 ( TIFFTAG_EXTRASAMPLES , shortv , shortav )
CALLEE	199:1	199:1	6	CopyField2
LEAF_NODE	199:1	199:1	7	CopyField2
LEAF_NODE	199:11	199:11	6	(
ARGUMENT	199:12	199:12	6	TIFFTAG_EXTRASAMPLES
FIELD	199:12	199:12	7	TIFFTAG_EXTRASAMPLES
LEAF_NODE	199:12	199:12	8	TIFFTAG_EXTRASAMPLES
LEAF_NODE	199:32	199:32	6	,
ARGUMENT	199:34	199:34	6	shortv
FIELD	199:34	199:34	7	shortv
LEAF_NODE	199:34	199:34	8	shortv
LEAF_NODE	199:40	199:40	6	,
ARGUMENT	199:42	199:42	6	shortav
FIELD	199:42	199:42	7	shortav
LEAF_NODE	199:42	199:42	8	shortav
LEAF_NODE	199:49	199:49	6	)
LEAF_NODE	199:50	199:50	4	;
LEAF_NODE	200:1	200:1	3	{
STATEMENTS	200:3	201:3	3	
SIMPLE_DECL	200:3	200:29	4	uint16 * red , uint16 * green , uint16 * blue ;
INIT_DECL_LIST	200:3	200:3	5	uint16 * red , uint16 * green , uint16 * blue
VAR_DECL	200:3	200:11	6	uint16 * red
TYPE	200:3	200:10	7	uint16 *
TYPE_NAME	200:3	200:3	8	uint16
LEAF_NODE	200:3	200:3	9	uint16
POINTER	200:10	200:10	8	*
LEAF_NODE	200:10	200:10	9	*
NAME	200:11	200:11	7	red
LEAF_NODE	200:11	200:11	8	red
LEAF_NODE	200:14	200:14	6	,
INIT_DECL_LIST	200:3	200:3	6	uint16 * green , uint16 * blue
VAR_DECL	200:3	200:17	7	uint16 * green
TYPE	200:3	200:16	8	uint16 *
TYPE_NAME	200:3	200:3	9	uint16
LEAF_NODE	200:3	200:3	10	uint16
POINTER	200:16	200:16	9	*
LEAF_NODE	200:16	200:16	10	*
NAME	200:17	200:17	8	green
LEAF_NODE	200:17	200:17	9	green
LEAF_NODE	200:22	200:22	7	,
VAR_DECL	200:3	200:25	7	uint16 * blue
TYPE	200:3	200:24	8	uint16 *
TYPE_NAME	200:3	200:3	9	uint16
LEAF_NODE	200:3	200:3	10	uint16
POINTER	200:24	200:24	9	*
LEAF_NODE	200:24	200:24	10	*
NAME	200:25	200:25	8	blue
LEAF_NODE	200:25	200:25	9	blue
LEAF_NODE	200:29	200:29	5	;
EXPR_STATEMENT	201:3	201:49	4	CopyField3 ( TIFFTAG_COLORMAP , red , green , blue ) ;
EXPR	201:3	201:3	5	CopyField3 ( TIFFTAG_COLORMAP , red , green , blue )
FUNCTION_CALL	201:3	201:48	6	CopyField3 ( TIFFTAG_COLORMAP , red , green , blue )
CALLEE	201:3	201:3	7	CopyField3
LEAF_NODE	201:3	201:3	8	CopyField3
LEAF_NODE	201:13	201:13	7	(
ARGUMENT	201:14	201:14	7	TIFFTAG_COLORMAP
FIELD	201:14	201:14	8	TIFFTAG_COLORMAP
LEAF_NODE	201:14	201:14	9	TIFFTAG_COLORMAP
LEAF_NODE	201:30	201:30	7	,
ARGUMENT	201:32	201:32	7	red
FIELD	201:32	201:32	8	red
LEAF_NODE	201:32	201:32	9	red
LEAF_NODE	201:35	201:35	7	,
ARGUMENT	201:37	201:37	7	green
FIELD	201:37	201:37	8	green
LEAF_NODE	201:37	201:37	9	green
LEAF_NODE	201:42	201:42	7	,
ARGUMENT	201:44	201:44	7	blue
FIELD	201:44	201:44	8	blue
LEAF_NODE	201:44	201:44	9	blue
LEAF_NODE	201:48	201:48	7	)
LEAF_NODE	201:49	201:49	5	;
LEAF_NODE	202:1	202:1	3	}
LEAF_NODE	203:1	203:1	3	{
STATEMENTS	203:3	204:3	3	
SIMPLE_DECL	203:3	203:17	4	uint16 shortv2 ;
VAR_DECL	203:3	203:10	5	uint16 shortv2
TYPE	203:3	203:3	6	uint16
TYPE_NAME	203:3	203:3	7	uint16
LEAF_NODE	203:3	203:3	8	uint16
NAME	203:10	203:10	6	shortv2
LEAF_NODE	203:10	203:10	7	shortv2
LEAF_NODE	203:17	203:17	5	;
EXPR_STATEMENT	204:3	204:50	4	CopyField2 ( TIFFTAG_PAGENUMBER , shortv , shortv2 ) ;
EXPR	204:3	204:3	5	CopyField2 ( TIFFTAG_PAGENUMBER , shortv , shortv2 )
FUNCTION_CALL	204:3	204:49	6	CopyField2 ( TIFFTAG_PAGENUMBER , shortv , shortv2 )
CALLEE	204:3	204:3	7	CopyField2
LEAF_NODE	204:3	204:3	8	CopyField2
LEAF_NODE	204:13	204:13	7	(
ARGUMENT	204:14	204:14	7	TIFFTAG_PAGENUMBER
FIELD	204:14	204:14	8	TIFFTAG_PAGENUMBER
LEAF_NODE	204:14	204:14	9	TIFFTAG_PAGENUMBER
LEAF_NODE	204:32	204:32	7	,
ARGUMENT	204:34	204:34	7	shortv
FIELD	204:34	204:34	8	shortv
LEAF_NODE	204:34	204:34	9	shortv
LEAF_NODE	204:40	204:40	7	,
ARGUMENT	204:42	204:42	7	shortv2
FIELD	204:42	204:42	8	shortv2
LEAF_NODE	204:42	204:42	9	shortv2
LEAF_NODE	204:49	204:49	7	)
LEAF_NODE	204:50	204:50	5	;
LEAF_NODE	205:1	205:1	3	}
EXPR_STATEMENT	206:1	206:35	3	CopyField ( TIFFTAG_ARTIST , stringv ) ;
EXPR	206:1	206:1	4	CopyField ( TIFFTAG_ARTIST , stringv )
FUNCTION_CALL	206:1	206:34	5	CopyField ( TIFFTAG_ARTIST , stringv )
CALLEE	206:1	206:1	6	CopyField
LEAF_NODE	206:1	206:1	7	CopyField
LEAF_NODE	206:10	206:10	6	(
ARGUMENT	206:11	206:11	6	TIFFTAG_ARTIST
FIELD	206:11	206:11	7	TIFFTAG_ARTIST
LEAF_NODE	206:11	206:11	8	TIFFTAG_ARTIST
LEAF_NODE	206:25	206:25	6	,
ARGUMENT	206:27	206:27	6	stringv
FIELD	206:27	206:27	7	stringv
LEAF_NODE	206:27	206:27	8	stringv
LEAF_NODE	206:34	206:34	6	)
LEAF_NODE	206:35	206:35	4	;
EXPR_STATEMENT	207:1	207:45	3	CopyField ( TIFFTAG_IMAGEDESCRIPTION , stringv ) ;
EXPR	207:1	207:1	4	CopyField ( TIFFTAG_IMAGEDESCRIPTION , stringv )
FUNCTION_CALL	207:1	207:44	5	CopyField ( TIFFTAG_IMAGEDESCRIPTION , stringv )
CALLEE	207:1	207:1	6	CopyField
LEAF_NODE	207:1	207:1	7	CopyField
LEAF_NODE	207:10	207:10	6	(
ARGUMENT	207:11	207:11	6	TIFFTAG_IMAGEDESCRIPTION
FIELD	207:11	207:11	7	TIFFTAG_IMAGEDESCRIPTION
LEAF_NODE	207:11	207:11	8	TIFFTAG_IMAGEDESCRIPTION
LEAF_NODE	207:35	207:35	6	,
ARGUMENT	207:37	207:37	6	stringv
FIELD	207:37	207:37	7	stringv
LEAF_NODE	207:37	207:37	8	stringv
LEAF_NODE	207:44	207:44	6	)
LEAF_NODE	207:45	207:45	4	;
EXPR_STATEMENT	208:1	208:33	3	CopyField ( TIFFTAG_MAKE , stringv ) ;
EXPR	208:1	208:1	4	CopyField ( TIFFTAG_MAKE , stringv )
FUNCTION_CALL	208:1	208:32	5	CopyField ( TIFFTAG_MAKE , stringv )
CALLEE	208:1	208:1	6	CopyField
LEAF_NODE	208:1	208:1	7	CopyField
LEAF_NODE	208:10	208:10	6	(
ARGUMENT	208:11	208:11	6	TIFFTAG_MAKE
FIELD	208:11	208:11	7	TIFFTAG_MAKE
LEAF_NODE	208:11	208:11	8	TIFFTAG_MAKE
LEAF_NODE	208:23	208:23	6	,
ARGUMENT	208:25	208:25	6	stringv
FIELD	208:25	208:25	7	stringv
LEAF_NODE	208:25	208:25	8	stringv
LEAF_NODE	208:32	208:32	6	)
LEAF_NODE	208:33	208:33	4	;
EXPR_STATEMENT	209:1	209:34	3	CopyField ( TIFFTAG_MODEL , stringv ) ;
EXPR	209:1	209:1	4	CopyField ( TIFFTAG_MODEL , stringv )
FUNCTION_CALL	209:1	209:33	5	CopyField ( TIFFTAG_MODEL , stringv )
CALLEE	209:1	209:1	6	CopyField
LEAF_NODE	209:1	209:1	7	CopyField
LEAF_NODE	209:10	209:10	6	(
ARGUMENT	209:11	209:11	6	TIFFTAG_MODEL
FIELD	209:11	209:11	7	TIFFTAG_MODEL
LEAF_NODE	209:11	209:11	8	TIFFTAG_MODEL
LEAF_NODE	209:24	209:24	6	,
ARGUMENT	209:26	209:26	6	stringv
FIELD	209:26	209:26	7	stringv
LEAF_NODE	209:26	209:26	8	stringv
LEAF_NODE	209:33	209:33	6	)
LEAF_NODE	209:34	209:34	4	;
EXPR_STATEMENT	210:1	210:37	3	CopyField ( TIFFTAG_SOFTWARE , stringv ) ;
EXPR	210:1	210:1	4	CopyField ( TIFFTAG_SOFTWARE , stringv )
FUNCTION_CALL	210:1	210:36	5	CopyField ( TIFFTAG_SOFTWARE , stringv )
CALLEE	210:1	210:1	6	CopyField
LEAF_NODE	210:1	210:1	7	CopyField
LEAF_NODE	210:10	210:10	6	(
ARGUMENT	210:11	210:11	6	TIFFTAG_SOFTWARE
FIELD	210:11	210:11	7	TIFFTAG_SOFTWARE
LEAF_NODE	210:11	210:11	8	TIFFTAG_SOFTWARE
LEAF_NODE	210:27	210:27	6	,
ARGUMENT	210:29	210:29	6	stringv
FIELD	210:29	210:29	7	stringv
LEAF_NODE	210:29	210:29	8	stringv
LEAF_NODE	210:36	210:36	6	)
LEAF_NODE	210:37	210:37	4	;
EXPR_STATEMENT	211:1	211:37	3	CopyField ( TIFFTAG_DATETIME , stringv ) ;
EXPR	211:1	211:1	4	CopyField ( TIFFTAG_DATETIME , stringv )
FUNCTION_CALL	211:1	211:36	5	CopyField ( TIFFTAG_DATETIME , stringv )
CALLEE	211:1	211:1	6	CopyField
LEAF_NODE	211:1	211:1	7	CopyField
LEAF_NODE	211:10	211:10	6	(
ARGUMENT	211:11	211:11	6	TIFFTAG_DATETIME
FIELD	211:11	211:11	7	TIFFTAG_DATETIME
LEAF_NODE	211:11	211:11	8	TIFFTAG_DATETIME
LEAF_NODE	211:27	211:27	6	,
ARGUMENT	211:29	211:29	6	stringv
FIELD	211:29	211:29	7	stringv
LEAF_NODE	211:29	211:29	8	stringv
LEAF_NODE	211:36	211:36	6	)
LEAF_NODE	211:37	211:37	4	;
EXPR_STATEMENT	212:1	212:41	3	CopyField ( TIFFTAG_HOSTCOMPUTER , stringv ) ;
EXPR	212:1	212:1	4	CopyField ( TIFFTAG_HOSTCOMPUTER , stringv )
FUNCTION_CALL	212:1	212:40	5	CopyField ( TIFFTAG_HOSTCOMPUTER , stringv )
CALLEE	212:1	212:1	6	CopyField
LEAF_NODE	212:1	212:1	7	CopyField
LEAF_NODE	212:10	212:10	6	(
ARGUMENT	212:11	212:11	6	TIFFTAG_HOSTCOMPUTER
FIELD	212:11	212:11	7	TIFFTAG_HOSTCOMPUTER
LEAF_NODE	212:11	212:11	8	TIFFTAG_HOSTCOMPUTER
LEAF_NODE	212:31	212:31	6	,
ARGUMENT	212:33	212:33	6	stringv
FIELD	212:33	212:33	7	stringv
LEAF_NODE	212:33	212:33	8	stringv
LEAF_NODE	212:40	212:40	6	)
LEAF_NODE	212:41	212:41	4	;
EXPR_STATEMENT	213:1	213:37	3	CopyField ( TIFFTAG_PAGENAME , stringv ) ;
EXPR	213:1	213:1	4	CopyField ( TIFFTAG_PAGENAME , stringv )
FUNCTION_CALL	213:1	213:36	5	CopyField ( TIFFTAG_PAGENAME , stringv )
CALLEE	213:1	213:1	6	CopyField
LEAF_NODE	213:1	213:1	7	CopyField
LEAF_NODE	213:10	213:10	6	(
ARGUMENT	213:11	213:11	6	TIFFTAG_PAGENAME
FIELD	213:11	213:11	7	TIFFTAG_PAGENAME
LEAF_NODE	213:11	213:11	8	TIFFTAG_PAGENAME
LEAF_NODE	213:27	213:27	6	,
ARGUMENT	213:29	213:29	6	stringv
FIELD	213:29	213:29	7	stringv
LEAF_NODE	213:29	213:29	8	stringv
LEAF_NODE	213:36	213:36	6	)
LEAF_NODE	213:37	213:37	4	;
EXPR_STATEMENT	214:1	214:41	3	CopyField ( TIFFTAG_DOCUMENTNAME , stringv ) ;
EXPR	214:1	214:1	4	CopyField ( TIFFTAG_DOCUMENTNAME , stringv )
FUNCTION_CALL	214:1	214:40	5	CopyField ( TIFFTAG_DOCUMENTNAME , stringv )
CALLEE	214:1	214:1	6	CopyField
LEAF_NODE	214:1	214:1	7	CopyField
LEAF_NODE	214:10	214:10	6	(
ARGUMENT	214:11	214:11	6	TIFFTAG_DOCUMENTNAME
FIELD	214:11	214:11	7	TIFFTAG_DOCUMENTNAME
LEAF_NODE	214:11	214:11	8	TIFFTAG_DOCUMENTNAME
LEAF_NODE	214:31	214:31	6	,
ARGUMENT	214:33	214:33	6	stringv
FIELD	214:33	214:33	7	stringv
LEAF_NODE	214:33	214:33	8	stringv
LEAF_NODE	214:40	214:40	6	)
LEAF_NODE	214:41	214:41	4	;
EXPR_STATEMENT	215:1	215:38	3	CopyField ( TIFFTAG_BADFAXLINES , longv ) ;
EXPR	215:1	215:1	4	CopyField ( TIFFTAG_BADFAXLINES , longv )
FUNCTION_CALL	215:1	215:37	5	CopyField ( TIFFTAG_BADFAXLINES , longv )
CALLEE	215:1	215:1	6	CopyField
LEAF_NODE	215:1	215:1	7	CopyField
LEAF_NODE	215:10	215:10	6	(
ARGUMENT	215:11	215:11	6	TIFFTAG_BADFAXLINES
FIELD	215:11	215:11	7	TIFFTAG_BADFAXLINES
LEAF_NODE	215:11	215:11	8	TIFFTAG_BADFAXLINES
LEAF_NODE	215:30	215:30	6	,
ARGUMENT	215:32	215:32	6	longv
FIELD	215:32	215:32	7	longv
LEAF_NODE	215:32	215:32	8	longv
LEAF_NODE	215:37	215:37	6	)
LEAF_NODE	215:38	215:38	4	;
EXPR_STATEMENT	216:1	216:39	3	CopyField ( TIFFTAG_CLEANFAXDATA , longv ) ;
EXPR	216:1	216:1	4	CopyField ( TIFFTAG_CLEANFAXDATA , longv )
FUNCTION_CALL	216:1	216:38	5	CopyField ( TIFFTAG_CLEANFAXDATA , longv )
CALLEE	216:1	216:1	6	CopyField
LEAF_NODE	216:1	216:1	7	CopyField
LEAF_NODE	216:10	216:10	6	(
ARGUMENT	216:11	216:11	6	TIFFTAG_CLEANFAXDATA
FIELD	216:11	216:11	7	TIFFTAG_CLEANFAXDATA
LEAF_NODE	216:11	216:11	8	TIFFTAG_CLEANFAXDATA
LEAF_NODE	216:31	216:31	6	,
ARGUMENT	216:33	216:33	6	longv
FIELD	216:33	216:33	7	longv
LEAF_NODE	216:33	216:33	8	longv
LEAF_NODE	216:38	216:38	6	)
LEAF_NODE	216:39	216:39	4	;
EXPR_STATEMENT	217:1	217:49	3	CopyField ( TIFFTAG_CONSECUTIVEBADFAXLINES , longv ) ;
EXPR	217:1	217:1	4	CopyField ( TIFFTAG_CONSECUTIVEBADFAXLINES , longv )
FUNCTION_CALL	217:1	217:48	5	CopyField ( TIFFTAG_CONSECUTIVEBADFAXLINES , longv )
CALLEE	217:1	217:1	6	CopyField
LEAF_NODE	217:1	217:1	7	CopyField
LEAF_NODE	217:10	217:10	6	(
ARGUMENT	217:11	217:11	6	TIFFTAG_CONSECUTIVEBADFAXLINES
FIELD	217:11	217:11	7	TIFFTAG_CONSECUTIVEBADFAXLINES
LEAF_NODE	217:11	217:11	8	TIFFTAG_CONSECUTIVEBADFAXLINES
LEAF_NODE	217:41	217:41	6	,
ARGUMENT	217:43	217:43	6	longv
FIELD	217:43	217:43	7	longv
LEAF_NODE	217:43	217:43	8	longv
LEAF_NODE	217:48	217:48	6	)
LEAF_NODE	217:49	217:49	4	;
EXPR_STATEMENT	218:1	218:40	3	CopyField ( TIFFTAG_FAXRECVPARAMS , longv ) ;
EXPR	218:1	218:1	4	CopyField ( TIFFTAG_FAXRECVPARAMS , longv )
FUNCTION_CALL	218:1	218:39	5	CopyField ( TIFFTAG_FAXRECVPARAMS , longv )
CALLEE	218:1	218:1	6	CopyField
LEAF_NODE	218:1	218:1	7	CopyField
LEAF_NODE	218:10	218:10	6	(
ARGUMENT	218:11	218:11	6	TIFFTAG_FAXRECVPARAMS
FIELD	218:11	218:11	7	TIFFTAG_FAXRECVPARAMS
LEAF_NODE	218:11	218:11	8	TIFFTAG_FAXRECVPARAMS
LEAF_NODE	218:32	218:32	6	,
ARGUMENT	218:34	218:34	6	longv
FIELD	218:34	218:34	7	longv
LEAF_NODE	218:34	218:34	8	longv
LEAF_NODE	218:39	218:39	6	)
LEAF_NODE	218:40	218:40	4	;
EXPR_STATEMENT	219:1	219:38	3	CopyField ( TIFFTAG_FAXRECVTIME , longv ) ;
EXPR	219:1	219:1	4	CopyField ( TIFFTAG_FAXRECVTIME , longv )
FUNCTION_CALL	219:1	219:37	5	CopyField ( TIFFTAG_FAXRECVTIME , longv )
CALLEE	219:1	219:1	6	CopyField
LEAF_NODE	219:1	219:1	7	CopyField
LEAF_NODE	219:10	219:10	6	(
ARGUMENT	219:11	219:11	6	TIFFTAG_FAXRECVTIME
FIELD	219:11	219:11	7	TIFFTAG_FAXRECVTIME
LEAF_NODE	219:11	219:11	8	TIFFTAG_FAXRECVTIME
LEAF_NODE	219:30	219:30	6	,
ARGUMENT	219:32	219:32	6	longv
FIELD	219:32	219:32	7	longv
LEAF_NODE	219:32	219:32	8	longv
LEAF_NODE	219:37	219:37	6	)
LEAF_NODE	219:38	219:38	4	;
EXPR_STATEMENT	220:1	220:42	3	CopyField ( TIFFTAG_FAXSUBADDRESS , stringv ) ;
EXPR	220:1	220:1	4	CopyField ( TIFFTAG_FAXSUBADDRESS , stringv )
FUNCTION_CALL	220:1	220:41	5	CopyField ( TIFFTAG_FAXSUBADDRESS , stringv )
CALLEE	220:1	220:1	6	CopyField
LEAF_NODE	220:1	220:1	7	CopyField
LEAF_NODE	220:10	220:10	6	(
ARGUMENT	220:11	220:11	6	TIFFTAG_FAXSUBADDRESS
FIELD	220:11	220:11	7	TIFFTAG_FAXSUBADDRESS
LEAF_NODE	220:11	220:11	8	TIFFTAG_FAXSUBADDRESS
LEAF_NODE	220:32	220:32	6	,
ARGUMENT	220:34	220:34	6	stringv
FIELD	220:34	220:34	7	stringv
LEAF_NODE	220:34	220:34	8	stringv
LEAF_NODE	220:41	220:41	6	)
LEAF_NODE	220:42	220:42	4	;
EXPR_STATEMENT	221:1	221:35	3	CopyField ( TIFFTAG_FAXDCS , stringv ) ;
EXPR	221:1	221:1	4	CopyField ( TIFFTAG_FAXDCS , stringv )
FUNCTION_CALL	221:1	221:34	5	CopyField ( TIFFTAG_FAXDCS , stringv )
CALLEE	221:1	221:1	6	CopyField
LEAF_NODE	221:1	221:1	7	CopyField
LEAF_NODE	221:10	221:10	6	(
ARGUMENT	221:11	221:11	6	TIFFTAG_FAXDCS
FIELD	221:11	221:11	7	TIFFTAG_FAXDCS
LEAF_NODE	221:11	221:11	8	TIFFTAG_FAXDCS
LEAF_NODE	221:25	221:25	6	,
ARGUMENT	221:27	221:27	6	stringv
FIELD	221:27	221:27	7	stringv
LEAF_NODE	221:27	221:27	8	stringv
LEAF_NODE	221:34	221:34	6	)
LEAF_NODE	221:35	221:35	4	;
SELECTION	222:1	223:2	3	
KEYWORD	222:1	222:1	4	if
LEAF_NODE	222:1	222:1	5	if
LEAF_NODE	222:4	222:4	4	(
CONDITION	222:5	222:5	4	TIFFIsTiled ( in )
EXPR	222:5	222:5	5	TIFFIsTiled ( in )
FUNCTION_CALL	222:5	222:19	6	TIFFIsTiled ( in )
CALLEE	222:5	222:5	7	TIFFIsTiled
LEAF_NODE	222:5	222:5	8	TIFFIsTiled
LEAF_NODE	222:16	222:16	7	(
ARGUMENT	222:17	222:17	7	in
FIELD	222:17	222:17	8	in
LEAF_NODE	222:17	222:17	9	in
LEAF_NODE	222:19	222:19	7	)
LEAF_NODE	222:20	222:20	4	)
STATEMENTS	223:2	223:2	4	
JUMP_STATEMENT	223:2	223:27	5	return ( cpTiles ( in , out ) ) ;
KEYWORD	223:2	223:2	6	return
LEAF_NODE	223:2	223:2	7	return
DESTINATION	223:9	223:9	6	( cpTiles ( in , out ) )
EXPR	223:9	223:26	7	( cpTiles ( in , out ) )
LEAF_NODE	223:9	223:9	8	(
FUNCTION_CALL	223:10	223:25	8	cpTiles ( in , out )
CALLEE	223:10	223:10	9	cpTiles
LEAF_NODE	223:10	223:10	10	cpTiles
LEAF_NODE	223:17	223:17	9	(
ARGUMENT	223:18	223:18	9	in
FIELD	223:18	223:18	10	in
LEAF_NODE	223:18	223:18	11	in
LEAF_NODE	223:20	223:20	9	,
ARGUMENT	223:22	223:22	9	out
FIELD	223:22	223:22	10	out
LEAF_NODE	223:22	223:22	11	out
LEAF_NODE	223:25	223:25	9	)
LEAF_NODE	223:26	223:26	8	)
LEAF_NODE	223:27	223:27	6	;
SELECTION	224:1	225:2	3	
KEYWORD	224:1	224:1	4	else
LEAF_NODE	224:1	224:1	5	else
STATEMENTS	225:2	225:2	4	
JUMP_STATEMENT	225:2	225:28	5	return ( cpStrips ( in , out ) ) ;
KEYWORD	225:2	225:2	6	return
LEAF_NODE	225:2	225:2	7	return
DESTINATION	225:9	225:9	6	( cpStrips ( in , out ) )
EXPR	225:9	225:27	7	( cpStrips ( in , out ) )
LEAF_NODE	225:9	225:9	8	(
FUNCTION_CALL	225:10	225:26	8	cpStrips ( in , out )
CALLEE	225:10	225:10	9	cpStrips
LEAF_NODE	225:10	225:10	10	cpStrips
LEAF_NODE	225:18	225:18	9	(
ARGUMENT	225:19	225:19	9	in
FIELD	225:19	225:19	10	in
LEAF_NODE	225:19	225:19	11	in
LEAF_NODE	225:21	225:21	9	,
ARGUMENT	225:23	225:23	9	out
FIELD	225:23	225:23	10	out
LEAF_NODE	225:23	225:23	11	out
LEAF_NODE	225:26	225:26	9	)
LEAF_NODE	225:27	225:27	8	)
LEAF_NODE	225:28	225:28	6	;
LEAF_NODE	226:0	226:0	2	}
FUNCTION_DEF	228:0	260:0	1	
RETURN_TYPE	228:0	228:7	2	static int
LEAF_NODE	228:0	228:0	3	static
TYPE_NAME	228:7	228:7	3	int
LEAF_NODE	228:7	228:7	4	int
FUNCTION_NAME	229:0	229:0	2	cpStrips
LEAF_NODE	229:0	229:0	3	cpStrips
PARAMETER_LIST	229:8	229:28	2	( TIFF * in , TIFF * out )
LEAF_NODE	229:8	229:8	3	(
PARAMETER_DECL	229:9	229:15	3	TIFF * in
TYPE	229:9	229:13	4	TIFF *
TYPE_NAME	229:9	229:9	5	TIFF
LEAF_NODE	229:9	229:9	6	TIFF
POINTER	229:13	229:13	5	*
LEAF_NODE	229:13	229:13	6	*
NAME	229:15	229:15	4	in
LEAF_NODE	229:15	229:15	5	in
LEAF_NODE	229:17	229:17	3	,
PARAMETER_DECL	229:19	229:25	3	TIFF * out
TYPE	229:19	229:23	4	TIFF *
TYPE_NAME	229:19	229:19	5	TIFF
LEAF_NODE	229:19	229:19	6	TIFF
POINTER	229:23	229:23	5	*
LEAF_NODE	229:23	229:23	6	*
NAME	229:25	229:25	4	out
LEAF_NODE	229:25	229:25	5	out
LEAF_NODE	229:28	229:28	3	)
LEAF_NODE	230:0	230:0	2	{
STATEMENTS	231:1	259:1	2	
SIMPLE_DECL	231:1	231:38	3	tmsize_t bufsize ; bufsize = TIFFStripSize ( in ) ;
VAR_DECL	231:1	231:10	4	tmsize_t bufsize ; bufsize = TIFFStripSize ( in )
TYPE	231:1	231:1	5	tmsize_t
TYPE_NAME	231:1	231:1	6	tmsize_t
LEAF_NODE	231:1	231:1	7	tmsize_t
NAME	231:10	231:10	5	bufsize
LEAF_NODE	231:10	231:10	6	bufsize
LEAF_NODE	0:0	0:0	5	;
INIT	231:10	231:10	5	bufsize = TIFFStripSize ( in )
ASSIGN	231:10	231:21	6	bufsize = TIFFStripSize ( in )
LVAL	231:10	231:10	7	bufsize
NAME	231:10	231:10	8	bufsize
LEAF_NODE	231:10	231:10	9	bufsize
ASSIGN_OP	231:19	231:19	7	=
LEAF_NODE	231:19	231:19	8	=
RVAL	231:21	231:21	7	TIFFStripSize ( in )
FUNCTION_CALL	231:21	231:37	8	TIFFStripSize ( in )
CALLEE	231:21	231:21	9	TIFFStripSize
LEAF_NODE	231:21	231:21	10	TIFFStripSize
LEAF_NODE	231:34	231:34	9	(
ARGUMENT	231:35	231:35	9	in
FIELD	231:35	231:35	10	in
LEAF_NODE	231:35	231:35	11	in
LEAF_NODE	231:37	231:37	9	)
LEAF_NODE	231:38	231:38	4	;
SIMPLE_DECL	232:1	232:59	3	unsigned char * buf ; buf = ( unsigned char * ) _TIFFmalloc ( bufsize ) ;
VAR_DECL	232:1	232:16	4	unsigned char * buf ; buf = ( unsigned char * ) _TIFFmalloc ( bufsize )
TYPE	232:1	232:15	5	unsigned char *
TYPE_NAME	232:1	232:10	6	unsigned char
LEAF_NODE	232:1	232:1	7	unsigned
LEAF_NODE	232:10	232:10	7	char
POINTER	232:15	232:15	6	*
LEAF_NODE	232:15	232:15	7	*
NAME	232:16	232:16	5	buf
LEAF_NODE	232:16	232:16	6	buf
LEAF_NODE	0:0	0:0	5	;
INIT	232:16	232:16	5	buf = ( unsigned char * ) _TIFFmalloc ( bufsize )
ASSIGN	232:16	232:22	6	buf = ( unsigned char * ) _TIFFmalloc ( bufsize )
LVAL	232:16	232:16	7	buf
NAME	232:16	232:16	8	buf
LEAF_NODE	232:16	232:16	9	buf
ASSIGN_OP	232:20	232:20	7	=
LEAF_NODE	232:20	232:20	8	=
RVAL	232:22	232:39	7	( unsigned char * ) _TIFFmalloc ( bufsize )
LEAF_NODE	232:22	232:22	8	(
TYPE_NAME	232:23	232:32	8	unsigned char
LEAF_NODE	232:23	232:23	9	unsigned
LEAF_NODE	232:32	232:32	9	char
LEAF_NODE	232:37	232:37	8	*
LEAF_NODE	232:38	232:38	8	)
FUNCTION_CALL	232:39	232:58	8	_TIFFmalloc ( bufsize )
CALLEE	232:39	232:39	9	_TIFFmalloc
LEAF_NODE	232:39	232:39	10	_TIFFmalloc
LEAF_NODE	232:50	232:50	9	(
ARGUMENT	232:51	232:51	9	bufsize
FIELD	232:51	232:51	10	bufsize
LEAF_NODE	232:51	232:51	11	bufsize
LEAF_NODE	232:58	232:58	9	)
LEAF_NODE	232:59	232:59	4	;
SELECTION	234:1	234:10	3	
KEYWORD	234:1	234:1	4	if
LEAF_NODE	234:1	234:1	5	if
LEAF_NODE	234:4	234:4	4	(
CONDITION	234:5	234:5	4	buf
EXPR	234:5	234:5	5	buf
FIELD	234:5	234:5	6	buf
LEAF_NODE	234:5	234:5	7	buf
LEAF_NODE	234:8	234:8	4	)
STATEMENTS	234:10	258:1	4	
LEAF_NODE	234:10	234:10	5	{
STATEMENTS	235:2	257:2	5	
SIMPLE_DECL	235:2	235:41	6	tstrip_t s , tstrip_t ns ; ns = TIFFNumberOfStrips ( in ) ;
INIT_DECL_LIST	235:2	235:2	7	tstrip_t s , tstrip_t ns ; ns = TIFFNumberOfStrips ( in )
VAR_DECL	235:2	235:11	8	tstrip_t s
TYPE	235:2	235:2	9	tstrip_t
TYPE_NAME	235:2	235:2	10	tstrip_t
LEAF_NODE	235:2	235:2	11	tstrip_t
NAME	235:11	235:11	9	s
LEAF_NODE	235:11	235:11	10	s
LEAF_NODE	235:12	235:12	8	,
VAR_DECL	235:2	235:14	8	tstrip_t ns ; ns = TIFFNumberOfStrips ( in )
TYPE	235:2	235:2	9	tstrip_t
TYPE_NAME	235:2	235:2	10	tstrip_t
LEAF_NODE	235:2	235:2	11	tstrip_t
NAME	235:14	235:14	9	ns
LEAF_NODE	235:14	235:14	10	ns
LEAF_NODE	0:0	0:0	9	;
INIT	235:14	235:14	9	ns = TIFFNumberOfStrips ( in )
ASSIGN	235:14	235:19	10	ns = TIFFNumberOfStrips ( in )
LVAL	235:14	235:14	11	ns
NAME	235:14	235:14	12	ns
LEAF_NODE	235:14	235:14	13	ns
ASSIGN_OP	235:17	235:17	11	=
LEAF_NODE	235:17	235:17	12	=
RVAL	235:19	235:19	11	TIFFNumberOfStrips ( in )
FUNCTION_CALL	235:19	235:40	12	TIFFNumberOfStrips ( in )
CALLEE	235:19	235:19	13	TIFFNumberOfStrips
LEAF_NODE	235:19	235:19	14	TIFFNumberOfStrips
LEAF_NODE	235:37	235:37	13	(
ARGUMENT	235:38	235:38	13	in
FIELD	235:38	235:38	14	in
LEAF_NODE	235:38	235:38	15	in
LEAF_NODE	235:40	235:40	13	)
LEAF_NODE	235:41	235:41	7	;
SIMPLE_DECL	236:2	236:20	6	uint64 * bytecounts ;
VAR_DECL	236:2	236:10	7	uint64 * bytecounts
TYPE	236:2	236:9	8	uint64 *
TYPE_NAME	236:2	236:2	9	uint64
LEAF_NODE	236:2	236:2	10	uint64
POINTER	236:9	236:9	9	*
LEAF_NODE	236:9	236:9	10	*
NAME	236:10	236:10	8	bytecounts
LEAF_NODE	236:10	236:10	9	bytecounts
LEAF_NODE	236:20	236:20	7	;
SELECTION	238:2	238:63	6	
KEYWORD	238:2	238:2	7	if
LEAF_NODE	238:2	238:2	8	if
LEAF_NODE	238:5	238:5	7	(
CONDITION	238:6	238:6	7	! TIFFGetField ( in , TIFFTAG_STRIPBYTECOUNTS , & bytecounts )
EXPR	238:6	238:6	8	! TIFFGetField ( in , TIFFTAG_STRIPBYTECOUNTS , & bytecounts )
UNARY_EXPR	238:6	238:7	9	! TIFFGetField ( in , TIFFTAG_STRIPBYTECOUNTS , & bytecounts )
UNARY_OPERATOR	238:6	238:6	10	!
LEAF_NODE	238:6	238:6	11	!
FUNCTION_CALL	238:7	238:60	10	TIFFGetField ( in , TIFFTAG_STRIPBYTECOUNTS , & bytecounts )
CALLEE	238:7	238:7	11	TIFFGetField
LEAF_NODE	238:7	238:7	12	TIFFGetField
LEAF_NODE	238:19	238:19	11	(
ARGUMENT	238:20	238:20	11	in
FIELD	238:20	238:20	12	in
LEAF_NODE	238:20	238:20	13	in
LEAF_NODE	238:22	238:22	11	,
ARGUMENT	238:24	238:24	11	TIFFTAG_STRIPBYTECOUNTS
FIELD	238:24	238:24	12	TIFFTAG_STRIPBYTECOUNTS
LEAF_NODE	238:24	238:24	13	TIFFTAG_STRIPBYTECOUNTS
LEAF_NODE	238:47	238:47	11	,
ARGUMENT	238:49	238:49	11	& bytecounts
UNARY_EXPR	238:49	238:50	12	& bytecounts
UNARY_OPERATOR	238:49	238:49	13	&
LEAF_NODE	238:49	238:49	14	&
FIELD	238:50	238:50	13	bytecounts
LEAF_NODE	238:50	238:50	14	bytecounts
LEAF_NODE	238:60	238:60	11	)
LEAF_NODE	238:61	238:61	7	)
STATEMENTS	238:63	242:2	7	
LEAF_NODE	238:63	238:63	8	{
STATEMENTS	239:3	241:3	8	
EXPR_STATEMENT	239:3	239:64	9	fprintf ( stderr , "tiffsplit: strip byte counts are missing\n" ) ;
EXPR	239:3	239:3	10	fprintf ( stderr , "tiffsplit: strip byte counts are missing\n" )
FUNCTION_CALL	239:3	239:63	11	fprintf ( stderr , "tiffsplit: strip byte counts are missing\n" )
CALLEE	239:3	239:3	12	fprintf
LEAF_NODE	239:3	239:3	13	fprintf
LEAF_NODE	239:10	239:10	12	(
ARGUMENT	239:11	239:11	12	stderr
FIELD	239:11	239:11	13	stderr
LEAF_NODE	239:11	239:11	14	stderr
LEAF_NODE	239:17	239:17	12	,
ARGUMENT	239:19	239:19	12	"tiffsplit: strip byte counts are missing\n"
FIELD	239:19	239:19	13	"tiffsplit: strip byte counts are missing\n"
LEAF_NODE	239:19	239:19	14	"tiffsplit: strip byte counts are missing\n"
LEAF_NODE	239:63	239:63	12	)
LEAF_NODE	239:64	239:64	10	;
EXPR_STATEMENT	240:24	240:38	9	_TIFFfree ( buf ) ;
EXPR	240:24	240:24	10	_TIFFfree ( buf )
FUNCTION_CALL	240:24	240:37	11	_TIFFfree ( buf )
CALLEE	240:24	240:24	12	_TIFFfree
LEAF_NODE	240:24	240:24	13	_TIFFfree
LEAF_NODE	240:33	240:33	12	(
ARGUMENT	240:34	240:34	12	buf
FIELD	240:34	240:34	13	buf
LEAF_NODE	240:34	240:34	14	buf
LEAF_NODE	240:37	240:37	12	)
LEAF_NODE	240:38	240:38	10	;
JUMP_STATEMENT	241:3	241:13	9	return ( 0 ) ;
KEYWORD	241:3	241:3	10	return
LEAF_NODE	241:3	241:3	11	return
DESTINATION	241:10	241:10	10	( 0 )
EXPR	241:10	241:12	11	( 0 )
LEAF_NODE	241:10	241:10	12	(
FIELD	241:11	241:11	12	0
LEAF_NODE	241:11	241:11	13	0
LEAF_NODE	241:12	241:12	12	)
LEAF_NODE	241:13	241:13	10	;
LEAF_NODE	242:2	242:2	8	}
ITERATION	243:2	243:27	6	
KEYWORD	243:2	243:2	7	for
LEAF_NODE	243:2	243:2	8	for
LEAF_NODE	243:6	243:6	7	(
FOR_INIT	243:7	243:12	7	s = 0 ;
EXPR	243:7	243:7	8	s = 0
ASSIGN	243:7	243:11	9	s = 0
LVAL	243:7	243:7	10	s
FIELD	243:7	243:7	11	s
LEAF_NODE	243:7	243:7	12	s
ASSIGN_OP	243:9	243:9	10	=
LEAF_NODE	243:9	243:9	11	=
RVAL	243:11	243:11	10	0
FIELD	243:11	243:11	11	0
LEAF_NODE	243:11	243:11	12	0
LEAF_NODE	243:12	243:12	8	;
CONDITION	243:14	243:14	7	s < ns
EXPR	243:14	243:18	8	s < ns
FIELD	243:14	243:14	9	s
LEAF_NODE	243:14	243:14	10	s
REL_OPERATOR	243:16	243:16	9	<
LEAF_NODE	243:16	243:16	10	<
FIELD	243:18	243:18	9	ns
LEAF_NODE	243:18	243:18	10	ns
LEAF_NODE	243:20	243:20	7	;
FOR_EXPR	243:22	243:22	7	s ++
EXPR	243:22	243:22	8	s ++
FIELD	243:22	243:23	9	s ++
LEAF_NODE	243:22	243:22	10	s
LEAF_NODE	243:23	243:23	10	++
LEAF_NODE	243:25	243:25	7	)
STATEMENTS	243:27	255:2	7	
LEAF_NODE	243:27	243:27	8	{
STATEMENTS	244:3	250:3	8	
SELECTION	244:3	244:40	9	
KEYWORD	244:3	244:3	10	if
LEAF_NODE	244:3	244:3	11	if
LEAF_NODE	244:6	244:6	10	(
CONDITION	244:7	244:7	10	bytecounts [ s ] > ( uint64 ) bufsize
EXPR	244:7	244:31	11	bytecounts [ s ] > ( uint64 ) bufsize
FIELD	244:7	244:19	12	bytecounts [ s ]
LEAF_NODE	244:7	244:7	13	bytecounts
LEAF_NODE	244:17	244:17	13	[
EXPR	244:18	244:18	13	s
FIELD	244:18	244:18	14	s
LEAF_NODE	244:18	244:18	15	s
LEAF_NODE	244:19	244:19	13	]
REL_OPERATOR	244:21	244:21	12	>
LEAF_NODE	244:21	244:21	13	>
LEAF_NODE	244:23	244:23	12	(
TYPE_NAME	244:24	244:24	12	uint64
LEAF_NODE	244:24	244:24	13	uint64
LEAF_NODE	244:30	244:30	12	)
FIELD	244:31	244:31	12	bufsize
LEAF_NODE	244:31	244:31	13	bufsize
LEAF_NODE	244:38	244:38	10	)
STATEMENTS	244:40	249:3	10	
LEAF_NODE	244:40	244:40	11	{
STATEMENTS	245:4	248:4	11	
EXPR_STATEMENT	245:4	245:69	12	buf = ( unsigned char * ) _TIFFrealloc ( buf , ( tmsize_t ) bytecounts [ s ] ) ;
EXPR	245:4	245:4	13	buf = ( unsigned char * ) _TIFFrealloc ( buf , ( tmsize_t ) bytecounts [ s ] )
ASSIGN	245:4	245:10	14	buf = ( unsigned char * ) _TIFFrealloc ( buf , ( tmsize_t ) bytecounts [ s ] )
LVAL	245:4	245:4	15	buf
FIELD	245:4	245:4	16	buf
LEAF_NODE	245:4	245:4	17	buf
ASSIGN_OP	245:8	245:8	15	=
LEAF_NODE	245:8	245:8	16	=
RVAL	245:10	245:27	15	( unsigned char * ) _TIFFrealloc ( buf , ( tmsize_t ) bytecounts [ s ] )
LEAF_NODE	245:10	245:10	16	(
TYPE_NAME	245:11	245:20	16	unsigned char
LEAF_NODE	245:11	245:11	17	unsigned
LEAF_NODE	245:20	245:20	17	char
LEAF_NODE	245:25	245:25	16	*
LEAF_NODE	245:26	245:26	16	)
FUNCTION_CALL	245:27	245:68	16	_TIFFrealloc ( buf , ( tmsize_t ) bytecounts [ s ] )
CALLEE	245:27	245:27	17	_TIFFrealloc
LEAF_NODE	245:27	245:27	18	_TIFFrealloc
LEAF_NODE	245:39	245:39	17	(
ARGUMENT	245:40	245:40	17	buf
FIELD	245:40	245:40	18	buf
LEAF_NODE	245:40	245:40	19	buf
LEAF_NODE	245:43	245:43	17	,
ARGUMENT	245:45	245:55	17	( tmsize_t ) bytecounts [ s ]
LEAF_NODE	245:45	245:45	18	(
TYPE_NAME	245:46	245:46	18	tmsize_t
LEAF_NODE	245:46	245:46	19	tmsize_t
LEAF_NODE	245:54	245:54	18	)
FIELD	245:55	245:67	18	bytecounts [ s ]
LEAF_NODE	245:55	245:55	19	bytecounts
LEAF_NODE	245:65	245:65	19	[
EXPR	245:66	245:66	19	s
FIELD	245:66	245:66	20	s
LEAF_NODE	245:66	245:66	21	s
LEAF_NODE	245:67	245:67	19	]
LEAF_NODE	245:68	245:68	17	)
LEAF_NODE	245:69	245:69	13	;
SELECTION	246:4	247:5	12	
KEYWORD	246:4	246:4	13	if
LEAF_NODE	246:4	246:4	14	if
LEAF_NODE	246:7	246:7	13	(
CONDITION	246:8	246:8	13	! buf
EXPR	246:8	246:8	14	! buf
UNARY_EXPR	246:8	246:9	15	! buf
UNARY_OPERATOR	246:8	246:8	16	!
LEAF_NODE	246:8	246:8	17	!
FIELD	246:9	246:9	16	buf
LEAF_NODE	246:9	246:9	17	buf
LEAF_NODE	246:12	246:12	13	)
STATEMENTS	247:5	247:5	13	
JUMP_STATEMENT	247:5	247:15	14	return ( 0 ) ;
KEYWORD	247:5	247:5	15	return
LEAF_NODE	247:5	247:5	16	return
DESTINATION	247:12	247:12	15	( 0 )
EXPR	247:12	247:14	16	( 0 )
LEAF_NODE	247:12	247:12	17	(
FIELD	247:13	247:13	17	0
LEAF_NODE	247:13	247:13	18	0
LEAF_NODE	247:14	247:14	17	)
LEAF_NODE	247:15	247:15	15	;
EXPR_STATEMENT	248:4	248:37	12	bufsize = ( tmsize_t ) bytecounts [ s ] ;
EXPR	248:4	248:4	13	bufsize = ( tmsize_t ) bytecounts [ s ]
ASSIGN	248:4	248:14	14	bufsize = ( tmsize_t ) bytecounts [ s ]
LVAL	248:4	248:4	15	bufsize
FIELD	248:4	248:4	16	bufsize
LEAF_NODE	248:4	248:4	17	bufsize
ASSIGN_OP	248:12	248:12	15	=
LEAF_NODE	248:12	248:12	16	=
RVAL	248:14	248:24	15	( tmsize_t ) bytecounts [ s ]
LEAF_NODE	248:14	248:14	16	(
TYPE_NAME	248:15	248:15	16	tmsize_t
LEAF_NODE	248:15	248:15	17	tmsize_t
LEAF_NODE	248:23	248:23	16	)
FIELD	248:24	248:36	16	bytecounts [ s ]
LEAF_NODE	248:24	248:24	17	bytecounts
LEAF_NODE	248:34	248:34	17	[
EXPR	248:35	248:35	17	s
FIELD	248:35	248:35	18	s
LEAF_NODE	248:35	248:35	19	s
LEAF_NODE	248:36	248:36	17	]
LEAF_NODE	248:37	248:37	13	;
LEAF_NODE	249:3	249:3	11	}
SELECTION	250:3	251:68	9	
KEYWORD	250:3	250:3	10	if
LEAF_NODE	250:3	250:3	11	if
LEAF_NODE	250:6	250:6	10	(
CONDITION	250:7	250:7	10	TIFFReadRawStrip ( in , s , buf , ( tmsize_t ) bytecounts [ s ] ) < 0 || TIFFWriteRawStrip ( out , s , buf , ( tmsize_t ) bytecounts [ s ] ) < 0
EXPR	250:7	250:7	11	TIFFReadRawStrip ( in , s , buf , ( tmsize_t ) bytecounts [ s ] ) < 0 || TIFFWriteRawStrip ( out , s , buf , ( tmsize_t ) bytecounts [ s ] ) < 0
OR	250:7	251:7	12	TIFFReadRawStrip ( in , s , buf , ( tmsize_t ) bytecounts [ s ] ) < 0 || TIFFWriteRawStrip ( out , s , buf , ( tmsize_t ) bytecounts [ s ] ) < 0
EXPR	250:7	250:63	13	TIFFReadRawStrip ( in , s , buf , ( tmsize_t ) bytecounts [ s ] ) < 0
FUNCTION_CALL	250:7	250:59	14	TIFFReadRawStrip ( in , s , buf , ( tmsize_t ) bytecounts [ s ] )
CALLEE	250:7	250:7	15	TIFFReadRawStrip
LEAF_NODE	250:7	250:7	16	TIFFReadRawStrip
LEAF_NODE	250:23	250:23	15	(
ARGUMENT	250:24	250:24	15	in
FIELD	250:24	250:24	16	in
LEAF_NODE	250:24	250:24	17	in
LEAF_NODE	250:26	250:26	15	,
ARGUMENT	250:28	250:28	15	s
FIELD	250:28	250:28	16	s
LEAF_NODE	250:28	250:28	17	s
LEAF_NODE	250:29	250:29	15	,
ARGUMENT	250:31	250:31	15	buf
FIELD	250:31	250:31	16	buf
LEAF_NODE	250:31	250:31	17	buf
LEAF_NODE	250:34	250:34	15	,
ARGUMENT	250:36	250:46	15	( tmsize_t ) bytecounts [ s ]
LEAF_NODE	250:36	250:36	16	(
TYPE_NAME	250:37	250:37	16	tmsize_t
LEAF_NODE	250:37	250:37	17	tmsize_t
LEAF_NODE	250:45	250:45	16	)
FIELD	250:46	250:58	16	bytecounts [ s ]
LEAF_NODE	250:46	250:46	17	bytecounts
LEAF_NODE	250:56	250:56	17	[
EXPR	250:57	250:57	17	s
FIELD	250:57	250:57	18	s
LEAF_NODE	250:57	250:57	19	s
LEAF_NODE	250:58	250:58	17	]
LEAF_NODE	250:59	250:59	15	)
REL_OPERATOR	250:61	250:61	14	<
LEAF_NODE	250:61	250:61	15	<
FIELD	250:63	250:63	14	0
LEAF_NODE	250:63	250:63	15	0
LEAF_NODE	250:65	250:65	13	||
EXPR	251:7	251:65	13	TIFFWriteRawStrip ( out , s , buf , ( tmsize_t ) bytecounts [ s ] ) < 0
FUNCTION_CALL	251:7	251:61	14	TIFFWriteRawStrip ( out , s , buf , ( tmsize_t ) bytecounts [ s ] )
CALLEE	251:7	251:7	15	TIFFWriteRawStrip
LEAF_NODE	251:7	251:7	16	TIFFWriteRawStrip
LEAF_NODE	251:24	251:24	15	(
ARGUMENT	251:25	251:25	15	out
FIELD	251:25	251:25	16	out
LEAF_NODE	251:25	251:25	17	out
LEAF_NODE	251:28	251:28	15	,
ARGUMENT	251:30	251:30	15	s
FIELD	251:30	251:30	16	s
LEAF_NODE	251:30	251:30	17	s
LEAF_NODE	251:31	251:31	15	,
ARGUMENT	251:33	251:33	15	buf
FIELD	251:33	251:33	16	buf
LEAF_NODE	251:33	251:33	17	buf
LEAF_NODE	251:36	251:36	15	,
ARGUMENT	251:38	251:48	15	( tmsize_t ) bytecounts [ s ]
LEAF_NODE	251:38	251:38	16	(
TYPE_NAME	251:39	251:39	16	tmsize_t
LEAF_NODE	251:39	251:39	17	tmsize_t
LEAF_NODE	251:47	251:47	16	)
FIELD	251:48	251:60	16	bytecounts [ s ]
LEAF_NODE	251:48	251:48	17	bytecounts
LEAF_NODE	251:58	251:58	17	[
EXPR	251:59	251:59	17	s
FIELD	251:59	251:59	18	s
LEAF_NODE	251:59	251:59	19	s
LEAF_NODE	251:60	251:60	17	]
LEAF_NODE	251:61	251:61	15	)
REL_OPERATOR	251:63	251:63	14	<
LEAF_NODE	251:63	251:63	15	<
FIELD	251:65	251:65	14	0
LEAF_NODE	251:65	251:65	15	0
LEAF_NODE	251:66	251:66	10	)
STATEMENTS	251:68	254:3	10	
LEAF_NODE	251:68	251:68	11	{
STATEMENTS	252:4	253:4	11	
EXPR_STATEMENT	252:4	252:18	12	_TIFFfree ( buf ) ;
EXPR	252:4	252:4	13	_TIFFfree ( buf )
FUNCTION_CALL	252:4	252:17	14	_TIFFfree ( buf )
CALLEE	252:4	252:4	15	_TIFFfree
LEAF_NODE	252:4	252:4	16	_TIFFfree
LEAF_NODE	252:13	252:13	15	(
ARGUMENT	252:14	252:14	15	buf
FIELD	252:14	252:14	16	buf
LEAF_NODE	252:14	252:14	17	buf
LEAF_NODE	252:17	252:17	15	)
LEAF_NODE	252:18	252:18	13	;
JUMP_STATEMENT	253:4	253:14	12	return ( 0 ) ;
KEYWORD	253:4	253:4	13	return
LEAF_NODE	253:4	253:4	14	return
DESTINATION	253:11	253:11	13	( 0 )
EXPR	253:11	253:13	14	( 0 )
LEAF_NODE	253:11	253:11	15	(
FIELD	253:12	253:12	15	0
LEAF_NODE	253:12	253:12	16	0
LEAF_NODE	253:13	253:13	15	)
LEAF_NODE	253:14	253:14	13	;
LEAF_NODE	254:3	254:3	11	}
LEAF_NODE	255:2	255:2	8	}
EXPR_STATEMENT	256:2	256:16	6	_TIFFfree ( buf ) ;
EXPR	256:2	256:2	7	_TIFFfree ( buf )
FUNCTION_CALL	256:2	256:15	8	_TIFFfree ( buf )
CALLEE	256:2	256:2	9	_TIFFfree
LEAF_NODE	256:2	256:2	10	_TIFFfree
LEAF_NODE	256:11	256:11	9	(
ARGUMENT	256:12	256:12	9	buf
FIELD	256:12	256:12	10	buf
LEAF_NODE	256:12	256:12	11	buf
LEAF_NODE	256:15	256:15	9	)
LEAF_NODE	256:16	256:16	7	;
JUMP_STATEMENT	257:2	257:12	6	return ( 1 ) ;
KEYWORD	257:2	257:2	7	return
LEAF_NODE	257:2	257:2	8	return
DESTINATION	257:9	257:9	7	( 1 )
EXPR	257:9	257:11	8	( 1 )
LEAF_NODE	257:9	257:9	9	(
FIELD	257:10	257:10	9	1
LEAF_NODE	257:10	257:10	10	1
LEAF_NODE	257:11	257:11	9	)
LEAF_NODE	257:12	257:12	7	;
LEAF_NODE	258:1	258:1	5	}
JUMP_STATEMENT	259:1	259:11	3	return ( 0 ) ;
KEYWORD	259:1	259:1	4	return
LEAF_NODE	259:1	259:1	5	return
DESTINATION	259:8	259:8	4	( 0 )
EXPR	259:8	259:10	5	( 0 )
LEAF_NODE	259:8	259:8	6	(
FIELD	259:9	259:9	6	0
LEAF_NODE	259:9	259:9	7	0
LEAF_NODE	259:10	259:10	6	)
LEAF_NODE	259:11	259:11	4	;
LEAF_NODE	260:0	260:0	2	}
FUNCTION_DEF	262:0	294:0	1	
RETURN_TYPE	262:0	262:7	2	static int
LEAF_NODE	262:0	262:0	3	static
TYPE_NAME	262:7	262:7	3	int
LEAF_NODE	262:7	262:7	4	int
FUNCTION_NAME	263:0	263:0	2	cpTiles
LEAF_NODE	263:0	263:0	3	cpTiles
PARAMETER_LIST	263:7	263:27	2	( TIFF * in , TIFF * out )
LEAF_NODE	263:7	263:7	3	(
PARAMETER_DECL	263:8	263:14	3	TIFF * in
TYPE	263:8	263:12	4	TIFF *
TYPE_NAME	263:8	263:8	5	TIFF
LEAF_NODE	263:8	263:8	6	TIFF
POINTER	263:12	263:12	5	*
LEAF_NODE	263:12	263:12	6	*
NAME	263:14	263:14	4	in
LEAF_NODE	263:14	263:14	5	in
LEAF_NODE	263:16	263:16	3	,
PARAMETER_DECL	263:18	263:24	3	TIFF * out
TYPE	263:18	263:22	4	TIFF *
TYPE_NAME	263:18	263:18	5	TIFF
LEAF_NODE	263:18	263:18	6	TIFF
POINTER	263:22	263:22	5	*
LEAF_NODE	263:22	263:22	6	*
NAME	263:24	263:24	4	out
LEAF_NODE	263:24	263:24	5	out
LEAF_NODE	263:27	263:27	3	)
LEAF_NODE	264:0	264:0	2	{
STATEMENTS	265:1	293:1	2	
SIMPLE_DECL	265:1	265:36	3	tmsize_t bufsize ; bufsize = TIFFTileSize ( in ) ;
VAR_DECL	265:1	265:10	4	tmsize_t bufsize ; bufsize = TIFFTileSize ( in )
TYPE	265:1	265:1	5	tmsize_t
TYPE_NAME	265:1	265:1	6	tmsize_t
LEAF_NODE	265:1	265:1	7	tmsize_t
NAME	265:10	265:10	5	bufsize
LEAF_NODE	265:10	265:10	6	bufsize
LEAF_NODE	0:0	0:0	5	;
INIT	265:10	265:10	5	bufsize = TIFFTileSize ( in )
ASSIGN	265:10	265:20	6	bufsize = TIFFTileSize ( in )
LVAL	265:10	265:10	7	bufsize
NAME	265:10	265:10	8	bufsize
LEAF_NODE	265:10	265:10	9	bufsize
ASSIGN_OP	265:18	265:18	7	=
LEAF_NODE	265:18	265:18	8	=
RVAL	265:20	265:20	7	TIFFTileSize ( in )
FUNCTION_CALL	265:20	265:35	8	TIFFTileSize ( in )
CALLEE	265:20	265:20	9	TIFFTileSize
LEAF_NODE	265:20	265:20	10	TIFFTileSize
LEAF_NODE	265:32	265:32	9	(
ARGUMENT	265:33	265:33	9	in
FIELD	265:33	265:33	10	in
LEAF_NODE	265:33	265:33	11	in
LEAF_NODE	265:35	265:35	9	)
LEAF_NODE	265:36	265:36	4	;
SIMPLE_DECL	266:1	266:59	3	unsigned char * buf ; buf = ( unsigned char * ) _TIFFmalloc ( bufsize ) ;
VAR_DECL	266:1	266:16	4	unsigned char * buf ; buf = ( unsigned char * ) _TIFFmalloc ( bufsize )
TYPE	266:1	266:15	5	unsigned char *
TYPE_NAME	266:1	266:10	6	unsigned char
LEAF_NODE	266:1	266:1	7	unsigned
LEAF_NODE	266:10	266:10	7	char
POINTER	266:15	266:15	6	*
LEAF_NODE	266:15	266:15	7	*
NAME	266:16	266:16	5	buf
LEAF_NODE	266:16	266:16	6	buf
LEAF_NODE	0:0	0:0	5	;
INIT	266:16	266:16	5	buf = ( unsigned char * ) _TIFFmalloc ( bufsize )
ASSIGN	266:16	266:22	6	buf = ( unsigned char * ) _TIFFmalloc ( bufsize )
LVAL	266:16	266:16	7	buf
NAME	266:16	266:16	8	buf
LEAF_NODE	266:16	266:16	9	buf
ASSIGN_OP	266:20	266:20	7	=
LEAF_NODE	266:20	266:20	8	=
RVAL	266:22	266:39	7	( unsigned char * ) _TIFFmalloc ( bufsize )
LEAF_NODE	266:22	266:22	8	(
TYPE_NAME	266:23	266:32	8	unsigned char
LEAF_NODE	266:23	266:23	9	unsigned
LEAF_NODE	266:32	266:32	9	char
LEAF_NODE	266:37	266:37	8	*
LEAF_NODE	266:38	266:38	8	)
FUNCTION_CALL	266:39	266:58	8	_TIFFmalloc ( bufsize )
CALLEE	266:39	266:39	9	_TIFFmalloc
LEAF_NODE	266:39	266:39	10	_TIFFmalloc
LEAF_NODE	266:50	266:50	9	(
ARGUMENT	266:51	266:51	9	bufsize
FIELD	266:51	266:51	10	bufsize
LEAF_NODE	266:51	266:51	11	bufsize
LEAF_NODE	266:58	266:58	9	)
LEAF_NODE	266:59	266:59	4	;
SELECTION	268:1	268:10	3	
KEYWORD	268:1	268:1	4	if
LEAF_NODE	268:1	268:1	5	if
LEAF_NODE	268:4	268:4	4	(
CONDITION	268:5	268:5	4	buf
EXPR	268:5	268:5	5	buf
FIELD	268:5	268:5	6	buf
LEAF_NODE	268:5	268:5	7	buf
LEAF_NODE	268:8	268:8	4	)
STATEMENTS	268:10	292:1	4	
LEAF_NODE	268:10	268:10	5	{
STATEMENTS	269:2	291:2	5	
SIMPLE_DECL	269:2	269:39	6	ttile_t t , ttile_t nt ; nt = TIFFNumberOfTiles ( in ) ;
INIT_DECL_LIST	269:2	269:2	7	ttile_t t , ttile_t nt ; nt = TIFFNumberOfTiles ( in )
VAR_DECL	269:2	269:10	8	ttile_t t
TYPE	269:2	269:2	9	ttile_t
TYPE_NAME	269:2	269:2	10	ttile_t
LEAF_NODE	269:2	269:2	11	ttile_t
NAME	269:10	269:10	9	t
LEAF_NODE	269:10	269:10	10	t
LEAF_NODE	269:11	269:11	8	,
VAR_DECL	269:2	269:13	8	ttile_t nt ; nt = TIFFNumberOfTiles ( in )
TYPE	269:2	269:2	9	ttile_t
TYPE_NAME	269:2	269:2	10	ttile_t
LEAF_NODE	269:2	269:2	11	ttile_t
NAME	269:13	269:13	9	nt
LEAF_NODE	269:13	269:13	10	nt
LEAF_NODE	0:0	0:0	9	;
INIT	269:13	269:13	9	nt = TIFFNumberOfTiles ( in )
ASSIGN	269:13	269:18	10	nt = TIFFNumberOfTiles ( in )
LVAL	269:13	269:13	11	nt
NAME	269:13	269:13	12	nt
LEAF_NODE	269:13	269:13	13	nt
ASSIGN_OP	269:16	269:16	11	=
LEAF_NODE	269:16	269:16	12	=
RVAL	269:18	269:18	11	TIFFNumberOfTiles ( in )
FUNCTION_CALL	269:18	269:38	12	TIFFNumberOfTiles ( in )
CALLEE	269:18	269:18	13	TIFFNumberOfTiles
LEAF_NODE	269:18	269:18	14	TIFFNumberOfTiles
LEAF_NODE	269:35	269:35	13	(
ARGUMENT	269:36	269:36	13	in
FIELD	269:36	269:36	14	in
LEAF_NODE	269:36	269:36	15	in
LEAF_NODE	269:38	269:38	13	)
LEAF_NODE	269:39	269:39	7	;
SIMPLE_DECL	270:2	270:20	6	uint64 * bytecounts ;
VAR_DECL	270:2	270:10	7	uint64 * bytecounts
TYPE	270:2	270:9	8	uint64 *
TYPE_NAME	270:2	270:2	9	uint64
LEAF_NODE	270:2	270:2	10	uint64
POINTER	270:9	270:9	9	*
LEAF_NODE	270:9	270:9	10	*
NAME	270:10	270:10	8	bytecounts
LEAF_NODE	270:10	270:10	9	bytecounts
LEAF_NODE	270:20	270:20	7	;
SELECTION	272:2	272:62	6	
KEYWORD	272:2	272:2	7	if
LEAF_NODE	272:2	272:2	8	if
LEAF_NODE	272:5	272:5	7	(
CONDITION	272:6	272:6	7	! TIFFGetField ( in , TIFFTAG_TILEBYTECOUNTS , & bytecounts )
EXPR	272:6	272:6	8	! TIFFGetField ( in , TIFFTAG_TILEBYTECOUNTS , & bytecounts )
UNARY_EXPR	272:6	272:7	9	! TIFFGetField ( in , TIFFTAG_TILEBYTECOUNTS , & bytecounts )
UNARY_OPERATOR	272:6	272:6	10	!
LEAF_NODE	272:6	272:6	11	!
FUNCTION_CALL	272:7	272:59	10	TIFFGetField ( in , TIFFTAG_TILEBYTECOUNTS , & bytecounts )
CALLEE	272:7	272:7	11	TIFFGetField
LEAF_NODE	272:7	272:7	12	TIFFGetField
LEAF_NODE	272:19	272:19	11	(
ARGUMENT	272:20	272:20	11	in
FIELD	272:20	272:20	12	in
LEAF_NODE	272:20	272:20	13	in
LEAF_NODE	272:22	272:22	11	,
ARGUMENT	272:24	272:24	11	TIFFTAG_TILEBYTECOUNTS
FIELD	272:24	272:24	12	TIFFTAG_TILEBYTECOUNTS
LEAF_NODE	272:24	272:24	13	TIFFTAG_TILEBYTECOUNTS
LEAF_NODE	272:46	272:46	11	,
ARGUMENT	272:48	272:48	11	& bytecounts
UNARY_EXPR	272:48	272:49	12	& bytecounts
UNARY_OPERATOR	272:48	272:48	13	&
LEAF_NODE	272:48	272:48	14	&
FIELD	272:49	272:49	13	bytecounts
LEAF_NODE	272:49	272:49	14	bytecounts
LEAF_NODE	272:59	272:59	11	)
LEAF_NODE	272:60	272:60	7	)
STATEMENTS	272:62	276:2	7	
LEAF_NODE	272:62	272:62	8	{
STATEMENTS	273:3	275:3	8	
EXPR_STATEMENT	273:3	273:63	9	fprintf ( stderr , "tiffsplit: tile byte counts are missing\n" ) ;
EXPR	273:3	273:3	10	fprintf ( stderr , "tiffsplit: tile byte counts are missing\n" )
FUNCTION_CALL	273:3	273:62	11	fprintf ( stderr , "tiffsplit: tile byte counts are missing\n" )
CALLEE	273:3	273:3	12	fprintf
LEAF_NODE	273:3	273:3	13	fprintf
LEAF_NODE	273:10	273:10	12	(
ARGUMENT	273:11	273:11	12	stderr
FIELD	273:11	273:11	13	stderr
LEAF_NODE	273:11	273:11	14	stderr
LEAF_NODE	273:17	273:17	12	,
ARGUMENT	273:19	273:19	12	"tiffsplit: tile byte counts are missing\n"
FIELD	273:19	273:19	13	"tiffsplit: tile byte counts are missing\n"
LEAF_NODE	273:19	273:19	14	"tiffsplit: tile byte counts are missing\n"
LEAF_NODE	273:62	273:62	12	)
LEAF_NODE	273:63	273:63	10	;
EXPR_STATEMENT	274:24	274:38	9	_TIFFfree ( buf ) ;
EXPR	274:24	274:24	10	_TIFFfree ( buf )
FUNCTION_CALL	274:24	274:37	11	_TIFFfree ( buf )
CALLEE	274:24	274:24	12	_TIFFfree
LEAF_NODE	274:24	274:24	13	_TIFFfree
LEAF_NODE	274:33	274:33	12	(
ARGUMENT	274:34	274:34	12	buf
FIELD	274:34	274:34	13	buf
LEAF_NODE	274:34	274:34	14	buf
LEAF_NODE	274:37	274:37	12	)
LEAF_NODE	274:38	274:38	10	;
JUMP_STATEMENT	275:3	275:13	9	return ( 0 ) ;
KEYWORD	275:3	275:3	10	return
LEAF_NODE	275:3	275:3	11	return
DESTINATION	275:10	275:10	10	( 0 )
EXPR	275:10	275:12	11	( 0 )
LEAF_NODE	275:10	275:10	12	(
FIELD	275:11	275:11	12	0
LEAF_NODE	275:11	275:11	13	0
LEAF_NODE	275:12	275:12	12	)
LEAF_NODE	275:13	275:13	10	;
LEAF_NODE	276:2	276:2	8	}
ITERATION	277:2	277:27	6	
KEYWORD	277:2	277:2	7	for
LEAF_NODE	277:2	277:2	8	for
LEAF_NODE	277:6	277:6	7	(
FOR_INIT	277:7	277:12	7	t = 0 ;
EXPR	277:7	277:7	8	t = 0
ASSIGN	277:7	277:11	9	t = 0
LVAL	277:7	277:7	10	t
FIELD	277:7	277:7	11	t
LEAF_NODE	277:7	277:7	12	t
ASSIGN_OP	277:9	277:9	10	=
LEAF_NODE	277:9	277:9	11	=
RVAL	277:11	277:11	10	0
FIELD	277:11	277:11	11	0
LEAF_NODE	277:11	277:11	12	0
LEAF_NODE	277:12	277:12	8	;
CONDITION	277:14	277:14	7	t < nt
EXPR	277:14	277:18	8	t < nt
FIELD	277:14	277:14	9	t
LEAF_NODE	277:14	277:14	10	t
REL_OPERATOR	277:16	277:16	9	<
LEAF_NODE	277:16	277:16	10	<
FIELD	277:18	277:18	9	nt
LEAF_NODE	277:18	277:18	10	nt
LEAF_NODE	277:20	277:20	7	;
FOR_EXPR	277:22	277:22	7	t ++
EXPR	277:22	277:22	8	t ++
FIELD	277:22	277:23	9	t ++
LEAF_NODE	277:22	277:22	10	t
LEAF_NODE	277:23	277:23	10	++
LEAF_NODE	277:25	277:25	7	)
STATEMENTS	277:27	289:2	7	
LEAF_NODE	277:27	277:27	8	{
STATEMENTS	278:3	284:3	8	
SELECTION	278:3	278:41	9	
KEYWORD	278:3	278:3	10	if
LEAF_NODE	278:3	278:3	11	if
LEAF_NODE	278:6	278:6	10	(
CONDITION	278:7	278:7	10	bytecounts [ t ] > ( uint64 ) bufsize
EXPR	278:7	278:32	11	bytecounts [ t ] > ( uint64 ) bufsize
FIELD	278:7	278:19	12	bytecounts [ t ]
LEAF_NODE	278:7	278:7	13	bytecounts
LEAF_NODE	278:17	278:17	13	[
EXPR	278:18	278:18	13	t
FIELD	278:18	278:18	14	t
LEAF_NODE	278:18	278:18	15	t
LEAF_NODE	278:19	278:19	13	]
REL_OPERATOR	278:21	278:21	12	>
LEAF_NODE	278:21	278:21	13	>
LEAF_NODE	278:23	278:23	12	(
TYPE_NAME	278:24	278:24	12	uint64
LEAF_NODE	278:24	278:24	13	uint64
LEAF_NODE	278:30	278:30	12	)
FIELD	278:32	278:32	12	bufsize
LEAF_NODE	278:32	278:32	13	bufsize
LEAF_NODE	278:39	278:39	10	)
STATEMENTS	278:41	283:3	10	
LEAF_NODE	278:41	278:41	11	{
STATEMENTS	279:4	282:4	11	
EXPR_STATEMENT	279:4	279:69	12	buf = ( unsigned char * ) _TIFFrealloc ( buf , ( tmsize_t ) bytecounts [ t ] ) ;
EXPR	279:4	279:4	13	buf = ( unsigned char * ) _TIFFrealloc ( buf , ( tmsize_t ) bytecounts [ t ] )
ASSIGN	279:4	279:10	14	buf = ( unsigned char * ) _TIFFrealloc ( buf , ( tmsize_t ) bytecounts [ t ] )
LVAL	279:4	279:4	15	buf
FIELD	279:4	279:4	16	buf
LEAF_NODE	279:4	279:4	17	buf
ASSIGN_OP	279:8	279:8	15	=
LEAF_NODE	279:8	279:8	16	=
RVAL	279:10	279:27	15	( unsigned char * ) _TIFFrealloc ( buf , ( tmsize_t ) bytecounts [ t ] )
LEAF_NODE	279:10	279:10	16	(
TYPE_NAME	279:11	279:20	16	unsigned char
LEAF_NODE	279:11	279:11	17	unsigned
LEAF_NODE	279:20	279:20	17	char
LEAF_NODE	279:25	279:25	16	*
LEAF_NODE	279:26	279:26	16	)
FUNCTION_CALL	279:27	279:68	16	_TIFFrealloc ( buf , ( tmsize_t ) bytecounts [ t ] )
CALLEE	279:27	279:27	17	_TIFFrealloc
LEAF_NODE	279:27	279:27	18	_TIFFrealloc
LEAF_NODE	279:39	279:39	17	(
ARGUMENT	279:40	279:40	17	buf
FIELD	279:40	279:40	18	buf
LEAF_NODE	279:40	279:40	19	buf
LEAF_NODE	279:43	279:43	17	,
ARGUMENT	279:45	279:55	17	( tmsize_t ) bytecounts [ t ]
LEAF_NODE	279:45	279:45	18	(
TYPE_NAME	279:46	279:46	18	tmsize_t
LEAF_NODE	279:46	279:46	19	tmsize_t
LEAF_NODE	279:54	279:54	18	)
FIELD	279:55	279:67	18	bytecounts [ t ]
LEAF_NODE	279:55	279:55	19	bytecounts
LEAF_NODE	279:65	279:65	19	[
EXPR	279:66	279:66	19	t
FIELD	279:66	279:66	20	t
LEAF_NODE	279:66	279:66	21	t
LEAF_NODE	279:67	279:67	19	]
LEAF_NODE	279:68	279:68	17	)
LEAF_NODE	279:69	279:69	13	;
SELECTION	280:4	281:5	12	
KEYWORD	280:4	280:4	13	if
LEAF_NODE	280:4	280:4	14	if
LEAF_NODE	280:7	280:7	13	(
CONDITION	280:8	280:8	13	! buf
EXPR	280:8	280:8	14	! buf
UNARY_EXPR	280:8	280:9	15	! buf
UNARY_OPERATOR	280:8	280:8	16	!
LEAF_NODE	280:8	280:8	17	!
FIELD	280:9	280:9	16	buf
LEAF_NODE	280:9	280:9	17	buf
LEAF_NODE	280:12	280:12	13	)
STATEMENTS	281:5	281:5	13	
JUMP_STATEMENT	281:5	281:15	14	return ( 0 ) ;
KEYWORD	281:5	281:5	15	return
LEAF_NODE	281:5	281:5	16	return
DESTINATION	281:12	281:12	15	( 0 )
EXPR	281:12	281:14	16	( 0 )
LEAF_NODE	281:12	281:12	17	(
FIELD	281:13	281:13	17	0
LEAF_NODE	281:13	281:13	18	0
LEAF_NODE	281:14	281:14	17	)
LEAF_NODE	281:15	281:15	15	;
EXPR_STATEMENT	282:4	282:37	12	bufsize = ( tmsize_t ) bytecounts [ t ] ;
EXPR	282:4	282:4	13	bufsize = ( tmsize_t ) bytecounts [ t ]
ASSIGN	282:4	282:14	14	bufsize = ( tmsize_t ) bytecounts [ t ]
LVAL	282:4	282:4	15	bufsize
FIELD	282:4	282:4	16	bufsize
LEAF_NODE	282:4	282:4	17	bufsize
ASSIGN_OP	282:12	282:12	15	=
LEAF_NODE	282:12	282:12	16	=
RVAL	282:14	282:24	15	( tmsize_t ) bytecounts [ t ]
LEAF_NODE	282:14	282:14	16	(
TYPE_NAME	282:15	282:15	16	tmsize_t
LEAF_NODE	282:15	282:15	17	tmsize_t
LEAF_NODE	282:23	282:23	16	)
FIELD	282:24	282:36	16	bytecounts [ t ]
LEAF_NODE	282:24	282:24	17	bytecounts
LEAF_NODE	282:34	282:34	17	[
EXPR	282:35	282:35	17	t
FIELD	282:35	282:35	18	t
LEAF_NODE	282:35	282:35	19	t
LEAF_NODE	282:36	282:36	17	]
LEAF_NODE	282:37	282:37	13	;
LEAF_NODE	283:3	283:3	11	}
SELECTION	284:3	285:67	9	
KEYWORD	284:3	284:3	10	if
LEAF_NODE	284:3	284:3	11	if
LEAF_NODE	284:6	284:6	10	(
CONDITION	284:7	284:7	10	TIFFReadRawTile ( in , t , buf , ( tmsize_t ) bytecounts [ t ] ) < 0 || TIFFWriteRawTile ( out , t , buf , ( tmsize_t ) bytecounts [ t ] ) < 0
EXPR	284:7	284:7	11	TIFFReadRawTile ( in , t , buf , ( tmsize_t ) bytecounts [ t ] ) < 0 || TIFFWriteRawTile ( out , t , buf , ( tmsize_t ) bytecounts [ t ] ) < 0
OR	284:7	285:7	12	TIFFReadRawTile ( in , t , buf , ( tmsize_t ) bytecounts [ t ] ) < 0 || TIFFWriteRawTile ( out , t , buf , ( tmsize_t ) bytecounts [ t ] ) < 0
EXPR	284:7	284:62	13	TIFFReadRawTile ( in , t , buf , ( tmsize_t ) bytecounts [ t ] ) < 0
FUNCTION_CALL	284:7	284:58	14	TIFFReadRawTile ( in , t , buf , ( tmsize_t ) bytecounts [ t ] )
CALLEE	284:7	284:7	15	TIFFReadRawTile
LEAF_NODE	284:7	284:7	16	TIFFReadRawTile
LEAF_NODE	284:22	284:22	15	(
ARGUMENT	284:23	284:23	15	in
FIELD	284:23	284:23	16	in
LEAF_NODE	284:23	284:23	17	in
LEAF_NODE	284:25	284:25	15	,
ARGUMENT	284:27	284:27	15	t
FIELD	284:27	284:27	16	t
LEAF_NODE	284:27	284:27	17	t
LEAF_NODE	284:28	284:28	15	,
ARGUMENT	284:30	284:30	15	buf
FIELD	284:30	284:30	16	buf
LEAF_NODE	284:30	284:30	17	buf
LEAF_NODE	284:33	284:33	15	,
ARGUMENT	284:35	284:45	15	( tmsize_t ) bytecounts [ t ]
LEAF_NODE	284:35	284:35	16	(
TYPE_NAME	284:36	284:36	16	tmsize_t
LEAF_NODE	284:36	284:36	17	tmsize_t
LEAF_NODE	284:44	284:44	16	)
FIELD	284:45	284:57	16	bytecounts [ t ]
LEAF_NODE	284:45	284:45	17	bytecounts
LEAF_NODE	284:55	284:55	17	[
EXPR	284:56	284:56	17	t
FIELD	284:56	284:56	18	t
LEAF_NODE	284:56	284:56	19	t
LEAF_NODE	284:57	284:57	17	]
LEAF_NODE	284:58	284:58	15	)
REL_OPERATOR	284:60	284:60	14	<
LEAF_NODE	284:60	284:60	15	<
FIELD	284:62	284:62	14	0
LEAF_NODE	284:62	284:62	15	0
LEAF_NODE	284:64	284:64	13	||
EXPR	285:7	285:64	13	TIFFWriteRawTile ( out , t , buf , ( tmsize_t ) bytecounts [ t ] ) < 0
FUNCTION_CALL	285:7	285:60	14	TIFFWriteRawTile ( out , t , buf , ( tmsize_t ) bytecounts [ t ] )
CALLEE	285:7	285:7	15	TIFFWriteRawTile
LEAF_NODE	285:7	285:7	16	TIFFWriteRawTile
LEAF_NODE	285:23	285:23	15	(
ARGUMENT	285:24	285:24	15	out
FIELD	285:24	285:24	16	out
LEAF_NODE	285:24	285:24	17	out
LEAF_NODE	285:27	285:27	15	,
ARGUMENT	285:29	285:29	15	t
FIELD	285:29	285:29	16	t
LEAF_NODE	285:29	285:29	17	t
LEAF_NODE	285:30	285:30	15	,
ARGUMENT	285:32	285:32	15	buf
FIELD	285:32	285:32	16	buf
LEAF_NODE	285:32	285:32	17	buf
LEAF_NODE	285:35	285:35	15	,
ARGUMENT	285:37	285:47	15	( tmsize_t ) bytecounts [ t ]
LEAF_NODE	285:37	285:37	16	(
TYPE_NAME	285:38	285:38	16	tmsize_t
LEAF_NODE	285:38	285:38	17	tmsize_t
LEAF_NODE	285:46	285:46	16	)
FIELD	285:47	285:59	16	bytecounts [ t ]
LEAF_NODE	285:47	285:47	17	bytecounts
LEAF_NODE	285:57	285:57	17	[
EXPR	285:58	285:58	17	t
FIELD	285:58	285:58	18	t
LEAF_NODE	285:58	285:58	19	t
LEAF_NODE	285:59	285:59	17	]
LEAF_NODE	285:60	285:60	15	)
REL_OPERATOR	285:62	285:62	14	<
LEAF_NODE	285:62	285:62	15	<
FIELD	285:64	285:64	14	0
LEAF_NODE	285:64	285:64	15	0
LEAF_NODE	285:65	285:65	10	)
STATEMENTS	285:67	288:3	10	
LEAF_NODE	285:67	285:67	11	{
STATEMENTS	286:4	287:4	11	
EXPR_STATEMENT	286:4	286:18	12	_TIFFfree ( buf ) ;
EXPR	286:4	286:4	13	_TIFFfree ( buf )
FUNCTION_CALL	286:4	286:17	14	_TIFFfree ( buf )
CALLEE	286:4	286:4	15	_TIFFfree
LEAF_NODE	286:4	286:4	16	_TIFFfree
LEAF_NODE	286:13	286:13	15	(
ARGUMENT	286:14	286:14	15	buf
FIELD	286:14	286:14	16	buf
LEAF_NODE	286:14	286:14	17	buf
LEAF_NODE	286:17	286:17	15	)
LEAF_NODE	286:18	286:18	13	;
JUMP_STATEMENT	287:4	287:14	12	return ( 0 ) ;
KEYWORD	287:4	287:4	13	return
LEAF_NODE	287:4	287:4	14	return
DESTINATION	287:11	287:11	13	( 0 )
EXPR	287:11	287:13	14	( 0 )
LEAF_NODE	287:11	287:11	15	(
FIELD	287:12	287:12	15	0
LEAF_NODE	287:12	287:12	16	0
LEAF_NODE	287:13	287:13	15	)
LEAF_NODE	287:14	287:14	13	;
LEAF_NODE	288:3	288:3	11	}
LEAF_NODE	289:2	289:2	8	}
EXPR_STATEMENT	290:2	290:16	6	_TIFFfree ( buf ) ;
EXPR	290:2	290:2	7	_TIFFfree ( buf )
FUNCTION_CALL	290:2	290:15	8	_TIFFfree ( buf )
CALLEE	290:2	290:2	9	_TIFFfree
LEAF_NODE	290:2	290:2	10	_TIFFfree
LEAF_NODE	290:11	290:11	9	(
ARGUMENT	290:12	290:12	9	buf
FIELD	290:12	290:12	10	buf
LEAF_NODE	290:12	290:12	11	buf
LEAF_NODE	290:15	290:15	9	)
LEAF_NODE	290:16	290:16	7	;
JUMP_STATEMENT	291:2	291:12	6	return ( 1 ) ;
KEYWORD	291:2	291:2	7	return
LEAF_NODE	291:2	291:2	8	return
DESTINATION	291:9	291:9	7	( 1 )
EXPR	291:9	291:11	8	( 1 )
LEAF_NODE	291:9	291:9	9	(
FIELD	291:10	291:10	9	1
LEAF_NODE	291:10	291:10	10	1
LEAF_NODE	291:11	291:11	9	)
LEAF_NODE	291:12	291:12	7	;
LEAF_NODE	292:1	292:1	5	}
JUMP_STATEMENT	293:1	293:11	3	return ( 0 ) ;
KEYWORD	293:1	293:1	4	return
LEAF_NODE	293:1	293:1	5	return
DESTINATION	293:8	293:8	4	( 0 )
EXPR	293:8	293:10	5	( 0 )
LEAF_NODE	293:8	293:8	6	(
FIELD	293:9	293:9	6	0
LEAF_NODE	293:9	293:9	7	0
LEAF_NODE	293:10	293:10	6	)
LEAF_NODE	293:11	293:11	4	;
LEAF_NODE	294:0	294:0	2	}
