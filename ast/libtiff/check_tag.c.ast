SOURCE_FILE	32:0	70:0	0	
FUNCTION_DEF	32:0	49:0	1	
RETURN_TYPE	32:0	32:0	2	int
TYPE_NAME	32:0	32:0	3	int
LEAF_NODE	32:0	32:0	4	int
FUNCTION_NAME	33:0	33:0	2	CheckShortField
LEAF_NODE	33:0	33:0	3	CheckShortField
PARAMETER_LIST	33:15	33:65	2	( TIFF * tif , const ttag_t field , const uint16 value )
LEAF_NODE	33:15	33:15	3	(
PARAMETER_DECL	33:16	33:22	3	TIFF * tif
TYPE	33:16	33:21	4	TIFF *
TYPE_NAME	33:16	33:16	5	TIFF
LEAF_NODE	33:16	33:16	6	TIFF
POINTER	33:21	33:21	5	*
LEAF_NODE	33:21	33:21	6	*
NAME	33:22	33:22	4	tif
LEAF_NODE	33:22	33:22	5	tif
LEAF_NODE	33:25	33:25	3	,
PARAMETER_DECL	33:27	33:40	3	const ttag_t field
TYPE	33:27	33:27	4	const ttag_t
TYPE_NAME	33:27	33:33	5	const ttag_t
LEAF_NODE	33:27	33:27	6	const
LEAF_NODE	33:33	33:33	6	ttag_t
NAME	33:40	33:40	4	field
LEAF_NODE	33:40	33:40	5	field
LEAF_NODE	33:45	33:45	3	,
PARAMETER_DECL	33:47	33:60	3	const uint16 value
TYPE	33:47	33:47	4	const uint16
TYPE_NAME	33:47	33:53	5	const uint16
LEAF_NODE	33:47	33:47	6	const
LEAF_NODE	33:53	33:53	6	uint16
NAME	33:60	33:60	4	value
LEAF_NODE	33:60	33:60	5	value
LEAF_NODE	33:65	33:65	3	)
LEAF_NODE	34:0	34:0	2	{
STATEMENTS	35:1	48:1	2	
SIMPLE_DECL	35:1	35:17	3	uint16 tmp ; tmp = 123 ;
VAR_DECL	35:1	35:8	4	uint16 tmp ; tmp = 123
TYPE	35:1	35:1	5	uint16
TYPE_NAME	35:1	35:1	6	uint16
LEAF_NODE	35:1	35:1	7	uint16
NAME	35:8	35:8	5	tmp
LEAF_NODE	35:8	35:8	6	tmp
LEAF_NODE	0:0	0:0	5	;
INIT	35:8	35:8	5	tmp = 123
ASSIGN	35:8	35:14	6	tmp = 123
LVAL	35:8	35:8	7	tmp
NAME	35:8	35:8	8	tmp
LEAF_NODE	35:8	35:8	9	tmp
ASSIGN_OP	35:12	35:12	7	=
LEAF_NODE	35:12	35:12	8	=
RVAL	35:14	35:14	7	123
FIELD	35:14	35:14	8	123
LEAF_NODE	35:14	35:14	9	123
LEAF_NODE	35:17	35:17	4	;
SELECTION	37:1	37:38	3	
KEYWORD	37:1	37:1	4	if
LEAF_NODE	37:1	37:1	5	if
LEAF_NODE	37:4	37:4	4	(
CONDITION	37:5	37:5	4	! TIFFGetField ( tif , field , & tmp )
EXPR	37:5	37:5	5	! TIFFGetField ( tif , field , & tmp )
UNARY_EXPR	37:5	37:6	6	! TIFFGetField ( tif , field , & tmp )
UNARY_OPERATOR	37:5	37:5	7	!
LEAF_NODE	37:5	37:5	8	!
FUNCTION_CALL	37:6	37:35	7	TIFFGetField ( tif , field , & tmp )
CALLEE	37:6	37:6	8	TIFFGetField
LEAF_NODE	37:6	37:6	9	TIFFGetField
LEAF_NODE	37:18	37:18	8	(
ARGUMENT	37:19	37:19	8	tif
FIELD	37:19	37:19	9	tif
LEAF_NODE	37:19	37:19	10	tif
LEAF_NODE	37:22	37:22	8	,
ARGUMENT	37:24	37:24	8	field
FIELD	37:24	37:24	9	field
LEAF_NODE	37:24	37:24	10	field
LEAF_NODE	37:29	37:29	8	,
ARGUMENT	37:31	37:31	8	& tmp
UNARY_EXPR	37:31	37:32	9	& tmp
UNARY_OPERATOR	37:31	37:31	10	&
LEAF_NODE	37:31	37:31	11	&
FIELD	37:32	37:32	10	tmp
LEAF_NODE	37:32	37:32	11	tmp
LEAF_NODE	37:35	37:35	8	)
LEAF_NODE	37:36	37:36	4	)
STATEMENTS	37:38	41:1	4	
LEAF_NODE	37:38	37:38	5	{
STATEMENTS	38:2	40:2	5	
EXPR_STATEMENT	38:2	39:26	6	fprintf ( stderr , "Problem fetching tag %lu.\n" , ( unsigned long ) field ) ;
EXPR	38:2	38:2	7	fprintf ( stderr , "Problem fetching tag %lu.\n" , ( unsigned long ) field )
FUNCTION_CALL	38:2	39:25	8	fprintf ( stderr , "Problem fetching tag %lu.\n" , ( unsigned long ) field )
CALLEE	38:2	38:2	9	fprintf
LEAF_NODE	38:2	38:2	10	fprintf
LEAF_NODE	38:10	38:10	9	(
ARGUMENT	38:11	38:11	9	stderr
FIELD	38:11	38:11	10	stderr
LEAF_NODE	38:11	38:11	11	stderr
LEAF_NODE	38:17	38:17	9	,
ARGUMENT	38:19	38:19	9	"Problem fetching tag %lu.\n"
FIELD	38:19	38:19	10	"Problem fetching tag %lu.\n"
LEAF_NODE	38:19	38:19	11	"Problem fetching tag %lu.\n"
LEAF_NODE	38:48	38:48	9	,
ARGUMENT	39:4	39:20	9	( unsigned long ) field
LEAF_NODE	39:4	39:4	10	(
TYPE_NAME	39:5	39:14	10	unsigned long
LEAF_NODE	39:5	39:5	11	unsigned
LEAF_NODE	39:14	39:14	11	long
LEAF_NODE	39:18	39:18	10	)
FIELD	39:20	39:20	10	field
LEAF_NODE	39:20	39:20	11	field
LEAF_NODE	39:25	39:25	9	)
LEAF_NODE	39:26	39:26	7	;
JUMP_STATEMENT	40:2	40:11	6	return - 1 ;
KEYWORD	40:2	40:2	7	return
LEAF_NODE	40:2	40:2	8	return
DESTINATION	40:9	40:9	7	- 1
EXPR	40:9	40:9	8	- 1
UNARY_EXPR	40:9	40:10	9	- 1
UNARY_OPERATOR	40:9	40:9	10	-
LEAF_NODE	40:9	40:9	11	-
FIELD	40:10	40:10	10	1
LEAF_NODE	40:10	40:10	11	1
LEAF_NODE	40:11	40:11	7	;
LEAF_NODE	41:1	41:1	5	}
SELECTION	42:1	42:19	3	
KEYWORD	42:1	42:1	4	if
LEAF_NODE	42:1	42:1	5	if
LEAF_NODE	42:4	42:4	4	(
CONDITION	42:5	42:5	4	tmp != value
EXPR	42:5	42:12	5	tmp != value
FIELD	42:5	42:5	6	tmp
LEAF_NODE	42:5	42:5	7	tmp
EQ_OPERATOR	42:9	42:9	6	!=
LEAF_NODE	42:9	42:9	7	!=
FIELD	42:12	42:12	6	value
LEAF_NODE	42:12	42:12	7	value
LEAF_NODE	42:17	42:17	4	)
STATEMENTS	42:19	46:1	4	
LEAF_NODE	42:19	42:19	5	{
STATEMENTS	43:2	45:2	5	
EXPR_STATEMENT	43:2	44:26	6	fprintf ( stderr , "Wrong SHORT value fetched for tag %lu.\n" , ( unsigned long ) field ) ;
EXPR	43:2	43:2	7	fprintf ( stderr , "Wrong SHORT value fetched for tag %lu.\n" , ( unsigned long ) field )
FUNCTION_CALL	43:2	44:25	8	fprintf ( stderr , "Wrong SHORT value fetched for tag %lu.\n" , ( unsigned long ) field )
CALLEE	43:2	43:2	9	fprintf
LEAF_NODE	43:2	43:2	10	fprintf
LEAF_NODE	43:10	43:10	9	(
ARGUMENT	43:11	43:11	9	stderr
FIELD	43:11	43:11	10	stderr
LEAF_NODE	43:11	43:11	11	stderr
LEAF_NODE	43:17	43:17	9	,
ARGUMENT	43:19	43:19	9	"Wrong SHORT value fetched for tag %lu.\n"
FIELD	43:19	43:19	10	"Wrong SHORT value fetched for tag %lu.\n"
LEAF_NODE	43:19	43:19	11	"Wrong SHORT value fetched for tag %lu.\n"
LEAF_NODE	43:61	43:61	9	,
ARGUMENT	44:4	44:20	9	( unsigned long ) field
LEAF_NODE	44:4	44:4	10	(
TYPE_NAME	44:5	44:14	10	unsigned long
LEAF_NODE	44:5	44:5	11	unsigned
LEAF_NODE	44:14	44:14	11	long
LEAF_NODE	44:18	44:18	10	)
FIELD	44:20	44:20	10	field
LEAF_NODE	44:20	44:20	11	field
LEAF_NODE	44:25	44:25	9	)
LEAF_NODE	44:26	44:26	7	;
JUMP_STATEMENT	45:2	45:11	6	return - 1 ;
KEYWORD	45:2	45:2	7	return
LEAF_NODE	45:2	45:2	8	return
DESTINATION	45:9	45:9	7	- 1
EXPR	45:9	45:9	8	- 1
UNARY_EXPR	45:9	45:10	9	- 1
UNARY_OPERATOR	45:9	45:9	10	-
LEAF_NODE	45:9	45:9	11	-
FIELD	45:10	45:10	10	1
LEAF_NODE	45:10	45:10	11	1
LEAF_NODE	45:11	45:11	7	;
LEAF_NODE	46:1	46:1	5	}
JUMP_STATEMENT	48:1	48:9	3	return 0 ;
KEYWORD	48:1	48:1	4	return
LEAF_NODE	48:1	48:1	5	return
DESTINATION	48:8	48:8	4	0
EXPR	48:8	48:8	5	0
FIELD	48:8	48:8	6	0
LEAF_NODE	48:8	48:8	7	0
LEAF_NODE	48:9	48:9	4	;
LEAF_NODE	49:0	49:0	2	}
FUNCTION_DEF	51:0	68:0	1	
RETURN_TYPE	51:0	51:0	2	int
TYPE_NAME	51:0	51:0	3	int
LEAF_NODE	51:0	51:0	4	int
FUNCTION_NAME	52:0	52:0	2	CheckShortPairedField
LEAF_NODE	52:0	52:0	3	CheckShortPairedField
PARAMETER_LIST	52:21	52:73	2	( TIFF * tif , const ttag_t field , const uint16 * values )
LEAF_NODE	52:21	52:21	3	(
PARAMETER_DECL	52:22	52:28	3	TIFF * tif
TYPE	52:22	52:27	4	TIFF *
TYPE_NAME	52:22	52:22	5	TIFF
LEAF_NODE	52:22	52:22	6	TIFF
POINTER	52:27	52:27	5	*
LEAF_NODE	52:27	52:27	6	*
NAME	52:28	52:28	4	tif
LEAF_NODE	52:28	52:28	5	tif
LEAF_NODE	52:31	52:31	3	,
PARAMETER_DECL	52:33	52:46	3	const ttag_t field
TYPE	52:33	52:33	4	const ttag_t
TYPE_NAME	52:33	52:39	5	const ttag_t
LEAF_NODE	52:33	52:33	6	const
LEAF_NODE	52:39	52:39	6	ttag_t
NAME	52:46	52:46	4	field
LEAF_NODE	52:46	52:46	5	field
LEAF_NODE	52:51	52:51	3	,
PARAMETER_DECL	52:53	52:67	3	const uint16 * values
TYPE	52:53	52:66	4	const uint16 *
TYPE_NAME	52:53	52:59	5	const uint16
LEAF_NODE	52:53	52:53	6	const
LEAF_NODE	52:59	52:59	6	uint16
POINTER	52:66	52:66	5	*
LEAF_NODE	52:66	52:66	6	*
NAME	52:67	52:67	4	values
LEAF_NODE	52:67	52:67	5	values
LEAF_NODE	52:73	52:73	3	)
LEAF_NODE	53:0	53:0	2	{
STATEMENTS	54:1	67:1	2	
LEAF_NODE	54:1	54:1	3	uint16
LEAF_NODE	54:8	54:8	3	tmp
LEAF_NODE	54:11	54:11	3	[
LEAF_NODE	54:12	54:12	3	2
LEAF_NODE	54:13	54:13	3	]
LEAF_NODE	54:15	54:15	3	=
LEAF_NODE	54:17	54:17	3	{
STATEMENTS	54:19	54:24	3	
LEAF_NODE	54:19	54:19	4	123
LEAF_NODE	54:22	54:22	4	,
LEAF_NODE	54:24	54:24	4	456
LEAF_NODE	54:28	54:28	3	}
LEAF_NODE	54:29	54:29	3	;
SELECTION	56:1	56:46	3	
KEYWORD	56:1	56:1	4	if
LEAF_NODE	56:1	56:1	5	if
LEAF_NODE	56:4	56:4	4	(
CONDITION	56:5	56:5	4	! TIFFGetField ( tif , field , tmp , tmp + 1 )
EXPR	56:5	56:5	5	! TIFFGetField ( tif , field , tmp , tmp + 1 )
UNARY_EXPR	56:5	56:6	6	! TIFFGetField ( tif , field , tmp , tmp + 1 )
UNARY_OPERATOR	56:5	56:5	7	!
LEAF_NODE	56:5	56:5	8	!
FUNCTION_CALL	56:6	56:43	7	TIFFGetField ( tif , field , tmp , tmp + 1 )
CALLEE	56:6	56:6	8	TIFFGetField
LEAF_NODE	56:6	56:6	9	TIFFGetField
LEAF_NODE	56:18	56:18	8	(
ARGUMENT	56:19	56:19	8	tif
FIELD	56:19	56:19	9	tif
LEAF_NODE	56:19	56:19	10	tif
LEAF_NODE	56:22	56:22	8	,
ARGUMENT	56:24	56:24	8	field
FIELD	56:24	56:24	9	field
LEAF_NODE	56:24	56:24	10	field
LEAF_NODE	56:29	56:29	8	,
ARGUMENT	56:31	56:31	8	tmp
FIELD	56:31	56:31	9	tmp
LEAF_NODE	56:31	56:31	10	tmp
LEAF_NODE	56:34	56:34	8	,
ARGUMENT	56:36	56:42	8	tmp + 1
FIELD	56:36	56:36	9	tmp
LEAF_NODE	56:36	56:36	10	tmp
LEAF_NODE	56:40	56:40	9	+
FIELD	56:42	56:42	9	1
LEAF_NODE	56:42	56:42	10	1
LEAF_NODE	56:43	56:43	8	)
LEAF_NODE	56:44	56:44	4	)
STATEMENTS	56:46	60:1	4	
LEAF_NODE	56:46	56:46	5	{
STATEMENTS	57:2	59:2	5	
EXPR_STATEMENT	57:2	58:26	6	fprintf ( stderr , "Problem fetching tag %lu.\n" , ( unsigned long ) field ) ;
EXPR	57:2	57:2	7	fprintf ( stderr , "Problem fetching tag %lu.\n" , ( unsigned long ) field )
FUNCTION_CALL	57:2	58:25	8	fprintf ( stderr , "Problem fetching tag %lu.\n" , ( unsigned long ) field )
CALLEE	57:2	57:2	9	fprintf
LEAF_NODE	57:2	57:2	10	fprintf
LEAF_NODE	57:10	57:10	9	(
ARGUMENT	57:11	57:11	9	stderr
FIELD	57:11	57:11	10	stderr
LEAF_NODE	57:11	57:11	11	stderr
LEAF_NODE	57:17	57:17	9	,
ARGUMENT	57:19	57:19	9	"Problem fetching tag %lu.\n"
FIELD	57:19	57:19	10	"Problem fetching tag %lu.\n"
LEAF_NODE	57:19	57:19	11	"Problem fetching tag %lu.\n"
LEAF_NODE	57:48	57:48	9	,
ARGUMENT	58:4	58:20	9	( unsigned long ) field
LEAF_NODE	58:4	58:4	10	(
TYPE_NAME	58:5	58:14	10	unsigned long
LEAF_NODE	58:5	58:5	11	unsigned
LEAF_NODE	58:14	58:14	11	long
LEAF_NODE	58:18	58:18	10	)
FIELD	58:20	58:20	10	field
LEAF_NODE	58:20	58:20	11	field
LEAF_NODE	58:25	58:25	9	)
LEAF_NODE	58:26	58:26	7	;
JUMP_STATEMENT	59:2	59:11	6	return - 1 ;
KEYWORD	59:2	59:2	7	return
LEAF_NODE	59:2	59:2	8	return
DESTINATION	59:9	59:9	7	- 1
EXPR	59:9	59:9	8	- 1
UNARY_EXPR	59:9	59:10	9	- 1
UNARY_OPERATOR	59:9	59:9	10	-
LEAF_NODE	59:9	59:9	11	-
FIELD	59:10	59:10	10	1
LEAF_NODE	59:10	59:10	11	1
LEAF_NODE	59:11	59:11	7	;
LEAF_NODE	60:1	60:1	5	}
SELECTION	61:1	61:49	3	
KEYWORD	61:1	61:1	4	if
LEAF_NODE	61:1	61:1	5	if
LEAF_NODE	61:4	61:4	4	(
CONDITION	61:5	61:5	4	tmp [ 0 ] != values [ 0 ] || tmp [ 1 ] != values [ 1 ]
EXPR	61:5	61:5	5	tmp [ 0 ] != values [ 0 ] || tmp [ 1 ] != values [ 1 ]
OR	61:5	61:28	6	tmp [ 0 ] != values [ 0 ] || tmp [ 1 ] != values [ 1 ]
EXPR	61:5	61:15	7	tmp [ 0 ] != values [ 0 ]
FIELD	61:5	61:10	8	tmp [ 0 ]
LEAF_NODE	61:5	61:5	9	tmp
LEAF_NODE	61:8	61:8	9	[
EXPR	61:9	61:9	9	0
FIELD	61:9	61:9	10	0
LEAF_NODE	61:9	61:9	11	0
LEAF_NODE	61:10	61:10	9	]
EQ_OPERATOR	61:12	61:12	8	!=
LEAF_NODE	61:12	61:12	9	!=
FIELD	61:15	61:23	8	values [ 0 ]
LEAF_NODE	61:15	61:15	9	values
LEAF_NODE	61:21	61:21	9	[
EXPR	61:22	61:22	9	0
FIELD	61:22	61:22	10	0
LEAF_NODE	61:22	61:22	11	0
LEAF_NODE	61:23	61:23	9	]
LEAF_NODE	61:25	61:25	7	||
EXPR	61:28	61:38	7	tmp [ 1 ] != values [ 1 ]
FIELD	61:28	61:33	8	tmp [ 1 ]
LEAF_NODE	61:28	61:28	9	tmp
LEAF_NODE	61:31	61:31	9	[
EXPR	61:32	61:32	9	1
FIELD	61:32	61:32	10	1
LEAF_NODE	61:32	61:32	11	1
LEAF_NODE	61:33	61:33	9	]
EQ_OPERATOR	61:35	61:35	8	!=
LEAF_NODE	61:35	61:35	9	!=
FIELD	61:38	61:46	8	values [ 1 ]
LEAF_NODE	61:38	61:38	9	values
LEAF_NODE	61:44	61:44	9	[
EXPR	61:45	61:45	9	1
FIELD	61:45	61:45	10	1
LEAF_NODE	61:45	61:45	11	1
LEAF_NODE	61:46	61:46	9	]
LEAF_NODE	61:47	61:47	4	)
STATEMENTS	61:49	65:1	4	
LEAF_NODE	61:49	61:49	5	{
STATEMENTS	62:2	64:2	5	
EXPR_STATEMENT	62:2	63:26	6	fprintf ( stderr , "Wrong SHORT PAIR fetched for tag %lu.\n" , ( unsigned long ) field ) ;
EXPR	62:2	62:2	7	fprintf ( stderr , "Wrong SHORT PAIR fetched for tag %lu.\n" , ( unsigned long ) field )
FUNCTION_CALL	62:2	63:25	8	fprintf ( stderr , "Wrong SHORT PAIR fetched for tag %lu.\n" , ( unsigned long ) field )
CALLEE	62:2	62:2	9	fprintf
LEAF_NODE	62:2	62:2	10	fprintf
LEAF_NODE	62:10	62:10	9	(
ARGUMENT	62:11	62:11	9	stderr
FIELD	62:11	62:11	10	stderr
LEAF_NODE	62:11	62:11	11	stderr
LEAF_NODE	62:17	62:17	9	,
ARGUMENT	62:19	62:19	9	"Wrong SHORT PAIR fetched for tag %lu.\n"
FIELD	62:19	62:19	10	"Wrong SHORT PAIR fetched for tag %lu.\n"
LEAF_NODE	62:19	62:19	11	"Wrong SHORT PAIR fetched for tag %lu.\n"
LEAF_NODE	62:60	62:60	9	,
ARGUMENT	63:4	63:20	9	( unsigned long ) field
LEAF_NODE	63:4	63:4	10	(
TYPE_NAME	63:5	63:14	10	unsigned long
LEAF_NODE	63:5	63:5	11	unsigned
LEAF_NODE	63:14	63:14	11	long
LEAF_NODE	63:18	63:18	10	)
FIELD	63:20	63:20	10	field
LEAF_NODE	63:20	63:20	11	field
LEAF_NODE	63:25	63:25	9	)
LEAF_NODE	63:26	63:26	7	;
JUMP_STATEMENT	64:2	64:11	6	return - 1 ;
KEYWORD	64:2	64:2	7	return
LEAF_NODE	64:2	64:2	8	return
DESTINATION	64:9	64:9	7	- 1
EXPR	64:9	64:9	8	- 1
UNARY_EXPR	64:9	64:10	9	- 1
UNARY_OPERATOR	64:9	64:9	10	-
LEAF_NODE	64:9	64:9	11	-
FIELD	64:10	64:10	10	1
LEAF_NODE	64:10	64:10	11	1
LEAF_NODE	64:11	64:11	7	;
LEAF_NODE	65:1	65:1	5	}
JUMP_STATEMENT	67:1	67:9	3	return 0 ;
KEYWORD	67:1	67:1	4	return
LEAF_NODE	67:1	67:1	5	return
DESTINATION	67:8	67:8	4	0
EXPR	67:8	67:8	5	0
FIELD	67:8	67:8	6	0
LEAF_NODE	67:8	67:8	7	0
LEAF_NODE	67:9	67:9	4	;
LEAF_NODE	68:0	68:0	2	}
FUNCTION_DEF	70:0	87:0	1	
RETURN_TYPE	70:0	70:0	2	int
TYPE_NAME	70:0	70:0	3	int
LEAF_NODE	70:0	70:0	4	int
FUNCTION_NAME	71:0	71:0	2	CheckLongField
LEAF_NODE	71:0	71:0	3	CheckLongField
PARAMETER_LIST	71:14	71:64	2	( TIFF * tif , const ttag_t field , const uint32 value )
LEAF_NODE	71:14	71:14	3	(
PARAMETER_DECL	71:15	71:21	3	TIFF * tif
TYPE	71:15	71:20	4	TIFF *
TYPE_NAME	71:15	71:15	5	TIFF
LEAF_NODE	71:15	71:15	6	TIFF
POINTER	71:20	71:20	5	*
LEAF_NODE	71:20	71:20	6	*
NAME	71:21	71:21	4	tif
LEAF_NODE	71:21	71:21	5	tif
LEAF_NODE	71:24	71:24	3	,
PARAMETER_DECL	71:26	71:39	3	const ttag_t field
TYPE	71:26	71:26	4	const ttag_t
TYPE_NAME	71:26	71:32	5	const ttag_t
LEAF_NODE	71:26	71:26	6	const
LEAF_NODE	71:32	71:32	6	ttag_t
NAME	71:39	71:39	4	field
LEAF_NODE	71:39	71:39	5	field
LEAF_NODE	71:44	71:44	3	,
PARAMETER_DECL	71:46	71:59	3	const uint32 value
TYPE	71:46	71:46	4	const uint32
TYPE_NAME	71:46	71:52	5	const uint32
LEAF_NODE	71:46	71:46	6	const
LEAF_NODE	71:52	71:52	6	uint32
NAME	71:59	71:59	4	value
LEAF_NODE	71:59	71:59	5	value
LEAF_NODE	71:64	71:64	3	)
LEAF_NODE	72:0	72:0	2	{
STATEMENTS	73:1	86:1	2	
SIMPLE_DECL	73:1	73:17	3	uint32 tmp ; tmp = 123 ;
VAR_DECL	73:1	73:8	4	uint32 tmp ; tmp = 123
TYPE	73:1	73:1	5	uint32
TYPE_NAME	73:1	73:1	6	uint32
LEAF_NODE	73:1	73:1	7	uint32
NAME	73:8	73:8	5	tmp
LEAF_NODE	73:8	73:8	6	tmp
LEAF_NODE	0:0	0:0	5	;
INIT	73:8	73:8	5	tmp = 123
ASSIGN	73:8	73:14	6	tmp = 123
LVAL	73:8	73:8	7	tmp
NAME	73:8	73:8	8	tmp
LEAF_NODE	73:8	73:8	9	tmp
ASSIGN_OP	73:12	73:12	7	=
LEAF_NODE	73:12	73:12	8	=
RVAL	73:14	73:14	7	123
FIELD	73:14	73:14	8	123
LEAF_NODE	73:14	73:14	9	123
LEAF_NODE	73:17	73:17	4	;
SELECTION	75:1	75:38	3	
KEYWORD	75:1	75:1	4	if
LEAF_NODE	75:1	75:1	5	if
LEAF_NODE	75:4	75:4	4	(
CONDITION	75:5	75:5	4	! TIFFGetField ( tif , field , & tmp )
EXPR	75:5	75:5	5	! TIFFGetField ( tif , field , & tmp )
UNARY_EXPR	75:5	75:6	6	! TIFFGetField ( tif , field , & tmp )
UNARY_OPERATOR	75:5	75:5	7	!
LEAF_NODE	75:5	75:5	8	!
FUNCTION_CALL	75:6	75:35	7	TIFFGetField ( tif , field , & tmp )
CALLEE	75:6	75:6	8	TIFFGetField
LEAF_NODE	75:6	75:6	9	TIFFGetField
LEAF_NODE	75:18	75:18	8	(
ARGUMENT	75:19	75:19	8	tif
FIELD	75:19	75:19	9	tif
LEAF_NODE	75:19	75:19	10	tif
LEAF_NODE	75:22	75:22	8	,
ARGUMENT	75:24	75:24	8	field
FIELD	75:24	75:24	9	field
LEAF_NODE	75:24	75:24	10	field
LEAF_NODE	75:29	75:29	8	,
ARGUMENT	75:31	75:31	8	& tmp
UNARY_EXPR	75:31	75:32	9	& tmp
UNARY_OPERATOR	75:31	75:31	10	&
LEAF_NODE	75:31	75:31	11	&
FIELD	75:32	75:32	10	tmp
LEAF_NODE	75:32	75:32	11	tmp
LEAF_NODE	75:35	75:35	8	)
LEAF_NODE	75:36	75:36	4	)
STATEMENTS	75:38	79:1	4	
LEAF_NODE	75:38	75:38	5	{
STATEMENTS	76:2	78:2	5	
EXPR_STATEMENT	76:2	77:26	6	fprintf ( stderr , "Problem fetching tag %lu.\n" , ( unsigned long ) field ) ;
EXPR	76:2	76:2	7	fprintf ( stderr , "Problem fetching tag %lu.\n" , ( unsigned long ) field )
FUNCTION_CALL	76:2	77:25	8	fprintf ( stderr , "Problem fetching tag %lu.\n" , ( unsigned long ) field )
CALLEE	76:2	76:2	9	fprintf
LEAF_NODE	76:2	76:2	10	fprintf
LEAF_NODE	76:10	76:10	9	(
ARGUMENT	76:11	76:11	9	stderr
FIELD	76:11	76:11	10	stderr
LEAF_NODE	76:11	76:11	11	stderr
LEAF_NODE	76:17	76:17	9	,
ARGUMENT	76:19	76:19	9	"Problem fetching tag %lu.\n"
FIELD	76:19	76:19	10	"Problem fetching tag %lu.\n"
LEAF_NODE	76:19	76:19	11	"Problem fetching tag %lu.\n"
LEAF_NODE	76:48	76:48	9	,
ARGUMENT	77:4	77:20	9	( unsigned long ) field
LEAF_NODE	77:4	77:4	10	(
TYPE_NAME	77:5	77:14	10	unsigned long
LEAF_NODE	77:5	77:5	11	unsigned
LEAF_NODE	77:14	77:14	11	long
LEAF_NODE	77:18	77:18	10	)
FIELD	77:20	77:20	10	field
LEAF_NODE	77:20	77:20	11	field
LEAF_NODE	77:25	77:25	9	)
LEAF_NODE	77:26	77:26	7	;
JUMP_STATEMENT	78:2	78:11	6	return - 1 ;
KEYWORD	78:2	78:2	7	return
LEAF_NODE	78:2	78:2	8	return
DESTINATION	78:9	78:9	7	- 1
EXPR	78:9	78:9	8	- 1
UNARY_EXPR	78:9	78:10	9	- 1
UNARY_OPERATOR	78:9	78:9	10	-
LEAF_NODE	78:9	78:9	11	-
FIELD	78:10	78:10	10	1
LEAF_NODE	78:10	78:10	11	1
LEAF_NODE	78:11	78:11	7	;
LEAF_NODE	79:1	79:1	5	}
SELECTION	80:1	80:19	3	
KEYWORD	80:1	80:1	4	if
LEAF_NODE	80:1	80:1	5	if
LEAF_NODE	80:4	80:4	4	(
CONDITION	80:5	80:5	4	tmp != value
EXPR	80:5	80:12	5	tmp != value
FIELD	80:5	80:5	6	tmp
LEAF_NODE	80:5	80:5	7	tmp
EQ_OPERATOR	80:9	80:9	6	!=
LEAF_NODE	80:9	80:9	7	!=
FIELD	80:12	80:12	6	value
LEAF_NODE	80:12	80:12	7	value
LEAF_NODE	80:17	80:17	4	)
STATEMENTS	80:19	84:1	4	
LEAF_NODE	80:19	80:19	5	{
STATEMENTS	81:2	83:2	5	
EXPR_STATEMENT	81:2	82:26	6	fprintf ( stderr , "Wrong LONG value fetched for tag %lu.\n" , ( unsigned long ) field ) ;
EXPR	81:2	81:2	7	fprintf ( stderr , "Wrong LONG value fetched for tag %lu.\n" , ( unsigned long ) field )
FUNCTION_CALL	81:2	82:25	8	fprintf ( stderr , "Wrong LONG value fetched for tag %lu.\n" , ( unsigned long ) field )
CALLEE	81:2	81:2	9	fprintf
LEAF_NODE	81:2	81:2	10	fprintf
LEAF_NODE	81:10	81:10	9	(
ARGUMENT	81:11	81:11	9	stderr
FIELD	81:11	81:11	10	stderr
LEAF_NODE	81:11	81:11	11	stderr
LEAF_NODE	81:17	81:17	9	,
ARGUMENT	81:19	81:19	9	"Wrong LONG value fetched for tag %lu.\n"
FIELD	81:19	81:19	10	"Wrong LONG value fetched for tag %lu.\n"
LEAF_NODE	81:19	81:19	11	"Wrong LONG value fetched for tag %lu.\n"
LEAF_NODE	81:60	81:60	9	,
ARGUMENT	82:4	82:20	9	( unsigned long ) field
LEAF_NODE	82:4	82:4	10	(
TYPE_NAME	82:5	82:14	10	unsigned long
LEAF_NODE	82:5	82:5	11	unsigned
LEAF_NODE	82:14	82:14	11	long
LEAF_NODE	82:18	82:18	10	)
FIELD	82:20	82:20	10	field
LEAF_NODE	82:20	82:20	11	field
LEAF_NODE	82:25	82:25	9	)
LEAF_NODE	82:26	82:26	7	;
JUMP_STATEMENT	83:2	83:11	6	return - 1 ;
KEYWORD	83:2	83:2	7	return
LEAF_NODE	83:2	83:2	8	return
DESTINATION	83:9	83:9	7	- 1
EXPR	83:9	83:9	8	- 1
UNARY_EXPR	83:9	83:10	9	- 1
UNARY_OPERATOR	83:9	83:9	10	-
LEAF_NODE	83:9	83:9	11	-
FIELD	83:10	83:10	10	1
LEAF_NODE	83:10	83:10	11	1
LEAF_NODE	83:11	83:11	7	;
LEAF_NODE	84:1	84:1	5	}
JUMP_STATEMENT	86:1	86:9	3	return 0 ;
KEYWORD	86:1	86:1	4	return
LEAF_NODE	86:1	86:1	5	return
DESTINATION	86:8	86:8	4	0
EXPR	86:8	86:8	5	0
FIELD	86:8	86:8	6	0
LEAF_NODE	86:8	86:8	7	0
LEAF_NODE	86:9	86:9	4	;
LEAF_NODE	87:0	87:0	2	}
