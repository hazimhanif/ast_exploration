SOURCE_FILE	42:7	60:0	0	
SIMPLE_DECL	42:7	42:47	1	const char [ ] filename ; filename = "custom_dir.tif" ;
VAR_DECL	42:7	42:18	2	const char [ ] filename ; filename = "custom_dir.tif"
TYPE	42:7	42:26	3	const char [ ]
TYPE_NAME	42:7	42:13	4	const char
LEAF_NODE	42:7	42:7	5	const
LEAF_NODE	42:13	42:13	5	char
TYPE_SUFFIX	42:26	42:27	4	[ ]
LEAF_NODE	42:26	42:26	5	[
LEAF_NODE	42:27	42:27	5	]
NAME	42:18	42:18	3	filename
LEAF_NODE	42:18	42:18	4	filename
LEAF_NODE	0:0	0:0	3	;
INIT	42:18	42:18	3	filename = "custom_dir.tif"
ASSIGN	42:18	42:31	4	filename = "custom_dir.tif"
LVAL	42:18	42:18	5	filename
NAME	42:18	42:18	6	filename
LEAF_NODE	42:18	42:18	7	filename
ASSIGN_OP	42:29	42:29	5	=
LEAF_NODE	42:29	42:29	6	=
RVAL	42:31	42:31	5	"custom_dir.tif"
FIELD	42:31	42:31	6	"custom_dir.tif"
LEAF_NODE	42:31	42:31	7	"custom_dir.tif"
LEAF_NODE	42:47	42:47	2	;
SIMPLE_DECL	45:0	45:22	1	const uint16 width ; width = 1 ;
VAR_DECL	45:0	45:13	2	const uint16 width ; width = 1
TYPE	45:0	45:0	3	const uint16
TYPE_NAME	45:0	45:6	4	const uint16
LEAF_NODE	45:0	45:0	5	const
LEAF_NODE	45:6	45:6	5	uint16
NAME	45:13	45:13	3	width
LEAF_NODE	45:13	45:13	4	width
LEAF_NODE	0:0	0:0	3	;
INIT	45:13	45:13	3	width = 1
ASSIGN	45:13	45:21	4	width = 1
LVAL	45:13	45:13	5	width
NAME	45:13	45:13	6	width
LEAF_NODE	45:13	45:13	7	width
ASSIGN_OP	45:19	45:19	5	=
LEAF_NODE	45:19	45:19	6	=
RVAL	45:21	45:21	5	1
FIELD	45:21	45:21	6	1
LEAF_NODE	45:21	45:21	7	1
LEAF_NODE	45:22	45:22	2	;
SIMPLE_DECL	46:0	46:23	1	const uint16 length ; length = 1 ;
VAR_DECL	46:0	46:13	2	const uint16 length ; length = 1
TYPE	46:0	46:0	3	const uint16
TYPE_NAME	46:0	46:6	4	const uint16
LEAF_NODE	46:0	46:0	5	const
LEAF_NODE	46:6	46:6	5	uint16
NAME	46:13	46:13	3	length
LEAF_NODE	46:13	46:13	4	length
LEAF_NODE	0:0	0:0	3	;
INIT	46:13	46:13	3	length = 1
ASSIGN	46:13	46:22	4	length = 1
LVAL	46:13	46:13	5	length
NAME	46:13	46:13	6	length
LEAF_NODE	46:13	46:13	7	length
ASSIGN_OP	46:20	46:20	5	=
LEAF_NODE	46:20	46:20	6	=
RVAL	46:22	46:22	5	1
FIELD	46:22	46:22	6	1
LEAF_NODE	46:22	46:22	7	1
LEAF_NODE	46:23	46:23	2	;
SIMPLE_DECL	47:0	47:20	1	const uint16 bps ; bps = 8 ;
VAR_DECL	47:0	47:13	2	const uint16 bps ; bps = 8
TYPE	47:0	47:0	3	const uint16
TYPE_NAME	47:0	47:6	4	const uint16
LEAF_NODE	47:0	47:0	5	const
LEAF_NODE	47:6	47:6	5	uint16
NAME	47:13	47:13	3	bps
LEAF_NODE	47:13	47:13	4	bps
LEAF_NODE	0:0	0:0	3	;
INIT	47:13	47:13	3	bps = 8
ASSIGN	47:13	47:19	4	bps = 8
LVAL	47:13	47:13	5	bps
NAME	47:13	47:13	6	bps
LEAF_NODE	47:13	47:13	7	bps
ASSIGN_OP	47:17	47:17	5	=
LEAF_NODE	47:17	47:17	6	=
RVAL	47:19	47:19	5	8
FIELD	47:19	47:19	6	8
LEAF_NODE	47:19	47:19	7	8
LEAF_NODE	47:20	47:20	2	;
SIMPLE_DECL	48:0	48:42	1	const uint16 photometric ; photometric = PHOTOMETRIC_RGB ;
VAR_DECL	48:0	48:13	2	const uint16 photometric ; photometric = PHOTOMETRIC_RGB
TYPE	48:0	48:0	3	const uint16
TYPE_NAME	48:0	48:6	4	const uint16
LEAF_NODE	48:0	48:0	5	const
LEAF_NODE	48:6	48:6	5	uint16
NAME	48:13	48:13	3	photometric
LEAF_NODE	48:13	48:13	4	photometric
LEAF_NODE	0:0	0:0	3	;
INIT	48:13	48:13	3	photometric = PHOTOMETRIC_RGB
ASSIGN	48:13	48:27	4	photometric = PHOTOMETRIC_RGB
LVAL	48:13	48:13	5	photometric
NAME	48:13	48:13	6	photometric
LEAF_NODE	48:13	48:13	7	photometric
ASSIGN_OP	48:25	48:25	5	=
LEAF_NODE	48:25	48:25	6	=
RVAL	48:27	48:27	5	PHOTOMETRIC_RGB
FIELD	48:27	48:27	6	PHOTOMETRIC_RGB
LEAF_NODE	48:27	48:27	7	PHOTOMETRIC_RGB
LEAF_NODE	48:42	48:42	2	;
SIMPLE_DECL	49:0	49:31	1	const uint16 rows_per_strip ; rows_per_strip = 1 ;
VAR_DECL	49:0	49:13	2	const uint16 rows_per_strip ; rows_per_strip = 1
TYPE	49:0	49:0	3	const uint16
TYPE_NAME	49:0	49:6	4	const uint16
LEAF_NODE	49:0	49:0	5	const
LEAF_NODE	49:6	49:6	5	uint16
NAME	49:13	49:13	3	rows_per_strip
LEAF_NODE	49:13	49:13	4	rows_per_strip
LEAF_NODE	0:0	0:0	3	;
INIT	49:13	49:13	3	rows_per_strip = 1
ASSIGN	49:13	49:30	4	rows_per_strip = 1
LVAL	49:13	49:13	5	rows_per_strip
NAME	49:13	49:13	6	rows_per_strip
LEAF_NODE	49:13	49:13	7	rows_per_strip
ASSIGN_OP	49:28	49:28	5	=
LEAF_NODE	49:28	49:28	6	=
RVAL	49:30	49:30	5	1
FIELD	49:30	49:30	6	1
LEAF_NODE	49:30	49:30	7	1
LEAF_NODE	49:31	49:31	2	;
SIMPLE_DECL	50:0	50:47	1	const uint16 planarconfig ; planarconfig = PLANARCONFIG_CONTIG ;
VAR_DECL	50:0	50:13	2	const uint16 planarconfig ; planarconfig = PLANARCONFIG_CONTIG
TYPE	50:0	50:0	3	const uint16
TYPE_NAME	50:0	50:6	4	const uint16
LEAF_NODE	50:0	50:0	5	const
LEAF_NODE	50:6	50:6	5	uint16
NAME	50:13	50:13	3	planarconfig
LEAF_NODE	50:13	50:13	4	planarconfig
LEAF_NODE	0:0	0:0	3	;
INIT	50:13	50:13	3	planarconfig = PLANARCONFIG_CONTIG
ASSIGN	50:13	50:28	4	planarconfig = PLANARCONFIG_CONTIG
LVAL	50:13	50:13	5	planarconfig
NAME	50:13	50:13	6	planarconfig
LEAF_NODE	50:13	50:13	7	planarconfig
ASSIGN_OP	50:26	50:26	5	=
LEAF_NODE	50:26	50:26	6	=
RVAL	50:28	50:28	5	PLANARCONFIG_CONTIG
FIELD	50:28	50:28	6	PLANARCONFIG_CONTIG
LEAF_NODE	50:28	50:28	7	PLANARCONFIG_CONTIG
LEAF_NODE	50:47	50:47	2	;
FUNCTION_DEF	60:0	243:0	1	
RETURN_TYPE	60:0	60:0	2	int
TYPE_NAME	60:0	60:0	3	int
LEAF_NODE	60:0	60:0	4	int
FUNCTION_NAME	61:0	61:0	2	main
LEAF_NODE	61:0	61:0	3	main
PARAMETER_LIST	61:4	61:5	2	( )
LEAF_NODE	61:4	61:4	3	(
LEAF_NODE	61:5	61:5	3	)
LEAF_NODE	62:0	62:0	2	{
STATEMENTS	63:1	242:1	2	
SIMPLE_DECL	63:1	63:11	3	TIFF * tif ;
VAR_DECL	63:1	63:8	4	TIFF * tif
TYPE	63:1	63:7	5	TIFF *
TYPE_NAME	63:1	63:1	6	TIFF
LEAF_NODE	63:1	63:1	7	TIFF
POINTER	63:7	63:7	6	*
LEAF_NODE	63:7	63:7	7	*
NAME	63:8	63:8	5	tif
LEAF_NODE	63:8	63:8	6	tif
LEAF_NODE	63:11	63:11	4	;
LEAF_NODE	64:1	64:1	3	unsigned
LEAF_NODE	64:10	64:10	3	char
LEAF_NODE	64:15	64:15	3	buf
LEAF_NODE	64:18	64:18	3	[
LEAF_NODE	64:19	64:19	3	SPP
LEAF_NODE	64:22	64:22	3	]
LEAF_NODE	64:24	64:24	3	=
LEAF_NODE	64:26	64:26	3	{
STATEMENTS	64:28	64:36	3	
LEAF_NODE	64:28	64:28	4	0
LEAF_NODE	64:29	64:29	4	,
LEAF_NODE	64:31	64:31	4	127
LEAF_NODE	64:34	64:34	4	,
LEAF_NODE	64:36	64:36	4	255
LEAF_NODE	64:40	64:40	3	}
LEAF_NODE	64:41	64:41	3	;
SIMPLE_DECL	65:1	65:48	3	uint64 dir_offset ; dir_offset = 0 , uint64 dir_offset2 ; dir_offset2 = 0 ;
INIT_DECL_LIST	65:1	65:1	4	uint64 dir_offset ; dir_offset = 0 , uint64 dir_offset2 ; dir_offset2 = 0
VAR_DECL	65:1	65:17	5	uint64 dir_offset ; dir_offset = 0
TYPE	65:1	65:1	6	uint64
TYPE_NAME	65:1	65:1	7	uint64
LEAF_NODE	65:1	65:1	8	uint64
NAME	65:17	65:17	6	dir_offset
LEAF_NODE	65:17	65:17	7	dir_offset
LEAF_NODE	0:0	0:0	6	;
INIT	65:17	65:17	6	dir_offset = 0
ASSIGN	65:17	65:30	7	dir_offset = 0
LVAL	65:17	65:17	8	dir_offset
NAME	65:17	65:17	9	dir_offset
LEAF_NODE	65:17	65:17	10	dir_offset
ASSIGN_OP	65:28	65:28	8	=
LEAF_NODE	65:28	65:28	9	=
RVAL	65:30	65:30	8	0
FIELD	65:30	65:30	9	0
LEAF_NODE	65:30	65:30	10	0
LEAF_NODE	65:31	65:31	5	,
VAR_DECL	65:1	65:33	5	uint64 dir_offset2 ; dir_offset2 = 0
TYPE	65:1	65:1	6	uint64
TYPE_NAME	65:1	65:1	7	uint64
LEAF_NODE	65:1	65:1	8	uint64
NAME	65:33	65:33	6	dir_offset2
LEAF_NODE	65:33	65:33	7	dir_offset2
LEAF_NODE	0:0	0:0	6	;
INIT	65:33	65:33	6	dir_offset2 = 0
ASSIGN	65:33	65:47	7	dir_offset2 = 0
LVAL	65:33	65:33	8	dir_offset2
NAME	65:33	65:33	9	dir_offset2
LEAF_NODE	65:33	65:33	10	dir_offset2
ASSIGN_OP	65:45	65:45	8	=
LEAF_NODE	65:45	65:45	9	=
RVAL	65:47	65:47	8	0
FIELD	65:47	65:47	9	0
LEAF_NODE	65:47	65:47	10	0
LEAF_NODE	65:48	65:48	4	;
SIMPLE_DECL	66:1	66:58	3	uint64 read_dir_offset ; read_dir_offset = 0 , uint64 read_dir_offset2 ; read_dir_offset2 = 0 ;
INIT_DECL_LIST	66:1	66:1	4	uint64 read_dir_offset ; read_dir_offset = 0 , uint64 read_dir_offset2 ; read_dir_offset2 = 0
VAR_DECL	66:1	66:17	5	uint64 read_dir_offset ; read_dir_offset = 0
TYPE	66:1	66:1	6	uint64
TYPE_NAME	66:1	66:1	7	uint64
LEAF_NODE	66:1	66:1	8	uint64
NAME	66:17	66:17	6	read_dir_offset
LEAF_NODE	66:17	66:17	7	read_dir_offset
LEAF_NODE	0:0	0:0	6	;
INIT	66:17	66:17	6	read_dir_offset = 0
ASSIGN	66:17	66:35	7	read_dir_offset = 0
LVAL	66:17	66:17	8	read_dir_offset
NAME	66:17	66:17	9	read_dir_offset
LEAF_NODE	66:17	66:17	10	read_dir_offset
ASSIGN_OP	66:33	66:33	8	=
LEAF_NODE	66:33	66:33	9	=
RVAL	66:35	66:35	8	0
FIELD	66:35	66:35	9	0
LEAF_NODE	66:35	66:35	10	0
LEAF_NODE	66:36	66:36	5	,
VAR_DECL	66:1	66:38	5	uint64 read_dir_offset2 ; read_dir_offset2 = 0
TYPE	66:1	66:1	6	uint64
TYPE_NAME	66:1	66:1	7	uint64
LEAF_NODE	66:1	66:1	8	uint64
NAME	66:38	66:38	6	read_dir_offset2
LEAF_NODE	66:38	66:38	7	read_dir_offset2
LEAF_NODE	0:0	0:0	6	;
INIT	66:38	66:38	6	read_dir_offset2 = 0
ASSIGN	66:38	66:57	7	read_dir_offset2 = 0
LVAL	66:38	66:38	8	read_dir_offset2
NAME	66:38	66:38	9	read_dir_offset2
LEAF_NODE	66:38	66:38	10	read_dir_offset2
ASSIGN_OP	66:55	66:55	8	=
LEAF_NODE	66:55	66:55	9	=
RVAL	66:57	66:57	8	0
FIELD	66:57	66:57	9	0
LEAF_NODE	66:57	66:57	10	0
LEAF_NODE	66:58	66:58	4	;
SIMPLE_DECL	67:1	67:40	3	uint64 * dir_offset2_ptr ; dir_offset2_ptr = NULL ;
VAR_DECL	67:1	67:18	4	uint64 * dir_offset2_ptr ; dir_offset2_ptr = NULL
TYPE	67:1	67:17	5	uint64 *
TYPE_NAME	67:1	67:1	6	uint64
LEAF_NODE	67:1	67:1	7	uint64
POINTER	67:17	67:17	6	*
LEAF_NODE	67:17	67:17	7	*
NAME	67:18	67:18	5	dir_offset2_ptr
LEAF_NODE	67:18	67:18	6	dir_offset2_ptr
LEAF_NODE	0:0	0:0	5	;
INIT	67:18	67:18	5	dir_offset2_ptr = NULL
ASSIGN	67:18	67:36	6	dir_offset2_ptr = NULL
LVAL	67:18	67:18	7	dir_offset2_ptr
NAME	67:18	67:18	8	dir_offset2_ptr
LEAF_NODE	67:18	67:18	9	dir_offset2_ptr
ASSIGN_OP	67:34	67:34	7	=
LEAF_NODE	67:34	67:34	8	=
RVAL	67:36	67:36	7	NULL
FIELD	67:36	67:36	8	NULL
LEAF_NODE	67:36	67:36	9	NULL
LEAF_NODE	67:40	67:40	4	;
SIMPLE_DECL	68:1	68:28	3	char * ascii_value ;
VAR_DECL	68:1	68:17	4	char * ascii_value
TYPE	68:1	68:16	5	char *
TYPE_NAME	68:1	68:1	6	char
LEAF_NODE	68:1	68:1	7	char
POINTER	68:16	68:16	6	*
LEAF_NODE	68:16	68:16	7	*
NAME	68:17	68:17	5	ascii_value
LEAF_NODE	68:17	68:17	6	ascii_value
LEAF_NODE	68:28	68:28	4	;
SIMPLE_DECL	69:1	69:28	3	uint16 count16 ; count16 = 0 ;
VAR_DECL	69:1	69:17	4	uint16 count16 ; count16 = 0
TYPE	69:1	69:1	5	uint16
TYPE_NAME	69:1	69:1	6	uint16
LEAF_NODE	69:1	69:1	7	uint16
NAME	69:17	69:17	5	count16
LEAF_NODE	69:17	69:17	6	count16
LEAF_NODE	0:0	0:0	5	;
INIT	69:17	69:17	5	count16 = 0
ASSIGN	69:17	69:27	6	count16 = 0
LVAL	69:17	69:17	7	count16
NAME	69:17	69:17	8	count16
LEAF_NODE	69:17	69:17	9	count16
ASSIGN_OP	69:25	69:25	7	=
LEAF_NODE	69:25	69:25	8	=
RVAL	69:27	69:27	7	0
FIELD	69:27	69:27	8	0
LEAF_NODE	69:27	69:27	9	0
LEAF_NODE	69:28	69:28	4	;
EXPR_STATEMENT	73:1	73:31	3	tif = TIFFOpen ( filename , "w+" ) ;
EXPR	73:1	73:1	4	tif = TIFFOpen ( filename , "w+" )
ASSIGN	73:1	73:7	5	tif = TIFFOpen ( filename , "w+" )
LVAL	73:1	73:1	6	tif
FIELD	73:1	73:1	7	tif
LEAF_NODE	73:1	73:1	8	tif
ASSIGN_OP	73:5	73:5	6	=
LEAF_NODE	73:5	73:5	7	=
RVAL	73:7	73:7	6	TIFFOpen ( filename , "w+" )
FUNCTION_CALL	73:7	73:30	7	TIFFOpen ( filename , "w+" )
CALLEE	73:7	73:7	8	TIFFOpen
LEAF_NODE	73:7	73:7	9	TIFFOpen
LEAF_NODE	73:15	73:15	8	(
ARGUMENT	73:16	73:16	8	filename
FIELD	73:16	73:16	9	filename
LEAF_NODE	73:16	73:16	10	filename
LEAF_NODE	73:24	73:24	8	,
ARGUMENT	73:26	73:26	8	"w+"
FIELD	73:26	73:26	9	"w+"
LEAF_NODE	73:26	73:26	10	"w+"
LEAF_NODE	73:30	73:30	8	)
LEAF_NODE	73:31	73:31	4	;
SELECTION	74:1	74:11	3	
KEYWORD	74:1	74:1	4	if
LEAF_NODE	74:1	74:1	5	if
LEAF_NODE	74:4	74:4	4	(
CONDITION	74:5	74:5	4	! tif
EXPR	74:5	74:5	5	! tif
UNARY_EXPR	74:5	74:6	6	! tif
UNARY_OPERATOR	74:5	74:5	7	!
LEAF_NODE	74:5	74:5	8	!
FIELD	74:6	74:6	7	tif
LEAF_NODE	74:6	74:6	8	tif
LEAF_NODE	74:9	74:9	4	)
STATEMENTS	74:11	77:1	4	
LEAF_NODE	74:11	74:11	5	{
STATEMENTS	75:2	76:2	5	
EXPR_STATEMENT	75:2	75:65	6	fprintf ( stderr , "Can't create test TIFF file %s.\n" , filename ) ;
EXPR	75:2	75:2	7	fprintf ( stderr , "Can't create test TIFF file %s.\n" , filename )
FUNCTION_CALL	75:2	75:64	8	fprintf ( stderr , "Can't create test TIFF file %s.\n" , filename )
CALLEE	75:2	75:2	9	fprintf
LEAF_NODE	75:2	75:2	10	fprintf
LEAF_NODE	75:10	75:10	9	(
ARGUMENT	75:11	75:11	9	stderr
FIELD	75:11	75:11	10	stderr
LEAF_NODE	75:11	75:11	11	stderr
LEAF_NODE	75:17	75:17	9	,
ARGUMENT	75:19	75:19	9	"Can't create test TIFF file %s.\n"
FIELD	75:19	75:19	10	"Can't create test TIFF file %s.\n"
LEAF_NODE	75:19	75:19	11	"Can't create test TIFF file %s.\n"
LEAF_NODE	75:54	75:54	9	,
ARGUMENT	75:56	75:56	9	filename
FIELD	75:56	75:56	10	filename
LEAF_NODE	75:56	75:56	11	filename
LEAF_NODE	75:64	75:64	9	)
LEAF_NODE	75:65	75:65	7	;
JUMP_STATEMENT	76:2	76:10	6	return 1 ;
KEYWORD	76:2	76:2	7	return
LEAF_NODE	76:2	76:2	8	return
DESTINATION	76:9	76:9	7	1
EXPR	76:9	76:9	8	1
FIELD	76:9	76:9	9	1
LEAF_NODE	76:9	76:9	10	1
LEAF_NODE	76:10	76:10	7	;
LEAF_NODE	77:1	77:1	5	}
SELECTION	79:1	79:52	3	
KEYWORD	79:1	79:1	4	if
LEAF_NODE	79:1	79:1	5	if
LEAF_NODE	79:4	79:4	4	(
CONDITION	79:5	79:5	4	! TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , width )
EXPR	79:5	79:5	5	! TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , width )
UNARY_EXPR	79:5	79:6	6	! TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , width )
UNARY_OPERATOR	79:5	79:5	7	!
LEAF_NODE	79:5	79:5	8	!
FUNCTION_CALL	79:6	79:49	7	TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , width )
CALLEE	79:6	79:6	8	TIFFSetField
LEAF_NODE	79:6	79:6	9	TIFFSetField
LEAF_NODE	79:18	79:18	8	(
ARGUMENT	79:19	79:19	8	tif
FIELD	79:19	79:19	9	tif
LEAF_NODE	79:19	79:19	10	tif
LEAF_NODE	79:22	79:22	8	,
ARGUMENT	79:24	79:24	8	TIFFTAG_IMAGEWIDTH
FIELD	79:24	79:24	9	TIFFTAG_IMAGEWIDTH
LEAF_NODE	79:24	79:24	10	TIFFTAG_IMAGEWIDTH
LEAF_NODE	79:42	79:42	8	,
ARGUMENT	79:44	79:44	8	width
FIELD	79:44	79:44	9	width
LEAF_NODE	79:44	79:44	10	width
LEAF_NODE	79:49	79:49	8	)
LEAF_NODE	79:50	79:50	4	)
STATEMENTS	79:52	82:1	4	
LEAF_NODE	79:52	79:52	5	{
STATEMENTS	80:2	81:2	5	
EXPR_STATEMENT	80:2	80:49	6	fprintf ( stderr , "Can't set ImageWidth tag.\n" ) ;
EXPR	80:2	80:2	7	fprintf ( stderr , "Can't set ImageWidth tag.\n" )
FUNCTION_CALL	80:2	80:48	8	fprintf ( stderr , "Can't set ImageWidth tag.\n" )
CALLEE	80:2	80:2	9	fprintf
LEAF_NODE	80:2	80:2	10	fprintf
LEAF_NODE	80:10	80:10	9	(
ARGUMENT	80:11	80:11	9	stderr
FIELD	80:11	80:11	10	stderr
LEAF_NODE	80:11	80:11	11	stderr
LEAF_NODE	80:17	80:17	9	,
ARGUMENT	80:19	80:19	9	"Can't set ImageWidth tag.\n"
FIELD	80:19	80:19	10	"Can't set ImageWidth tag.\n"
LEAF_NODE	80:19	80:19	11	"Can't set ImageWidth tag.\n"
LEAF_NODE	80:48	80:48	9	)
LEAF_NODE	80:49	80:49	7	;
JUMP_STATEMENT	81:2	81:14	6	goto failure ;
KEYWORD	81:2	81:2	7	goto
LEAF_NODE	81:2	81:2	8	goto
DESTINATION	81:7	81:7	7	failure
LEAF_NODE	81:7	81:7	8	failure
LEAF_NODE	81:14	81:14	7	;
LEAF_NODE	82:1	82:1	5	}
SELECTION	83:1	83:54	3	
KEYWORD	83:1	83:1	4	if
LEAF_NODE	83:1	83:1	5	if
LEAF_NODE	83:4	83:4	4	(
CONDITION	83:5	83:5	4	! TIFFSetField ( tif , TIFFTAG_IMAGELENGTH , length )
EXPR	83:5	83:5	5	! TIFFSetField ( tif , TIFFTAG_IMAGELENGTH , length )
UNARY_EXPR	83:5	83:6	6	! TIFFSetField ( tif , TIFFTAG_IMAGELENGTH , length )
UNARY_OPERATOR	83:5	83:5	7	!
LEAF_NODE	83:5	83:5	8	!
FUNCTION_CALL	83:6	83:51	7	TIFFSetField ( tif , TIFFTAG_IMAGELENGTH , length )
CALLEE	83:6	83:6	8	TIFFSetField
LEAF_NODE	83:6	83:6	9	TIFFSetField
LEAF_NODE	83:18	83:18	8	(
ARGUMENT	83:19	83:19	8	tif
FIELD	83:19	83:19	9	tif
LEAF_NODE	83:19	83:19	10	tif
LEAF_NODE	83:22	83:22	8	,
ARGUMENT	83:24	83:24	8	TIFFTAG_IMAGELENGTH
FIELD	83:24	83:24	9	TIFFTAG_IMAGELENGTH
LEAF_NODE	83:24	83:24	10	TIFFTAG_IMAGELENGTH
LEAF_NODE	83:43	83:43	8	,
ARGUMENT	83:45	83:45	8	length
FIELD	83:45	83:45	9	length
LEAF_NODE	83:45	83:45	10	length
LEAF_NODE	83:51	83:51	8	)
LEAF_NODE	83:52	83:52	4	)
STATEMENTS	83:54	86:1	4	
LEAF_NODE	83:54	83:54	5	{
STATEMENTS	84:2	85:2	5	
EXPR_STATEMENT	84:2	84:50	6	fprintf ( stderr , "Can't set ImageLength tag.\n" ) ;
EXPR	84:2	84:2	7	fprintf ( stderr , "Can't set ImageLength tag.\n" )
FUNCTION_CALL	84:2	84:49	8	fprintf ( stderr , "Can't set ImageLength tag.\n" )
CALLEE	84:2	84:2	9	fprintf
LEAF_NODE	84:2	84:2	10	fprintf
LEAF_NODE	84:10	84:10	9	(
ARGUMENT	84:11	84:11	9	stderr
FIELD	84:11	84:11	10	stderr
LEAF_NODE	84:11	84:11	11	stderr
LEAF_NODE	84:17	84:17	9	,
ARGUMENT	84:19	84:19	9	"Can't set ImageLength tag.\n"
FIELD	84:19	84:19	10	"Can't set ImageLength tag.\n"
LEAF_NODE	84:19	84:19	11	"Can't set ImageLength tag.\n"
LEAF_NODE	84:49	84:49	9	)
LEAF_NODE	84:50	84:50	7	;
JUMP_STATEMENT	85:2	85:14	6	goto failure ;
KEYWORD	85:2	85:2	7	goto
LEAF_NODE	85:2	85:2	8	goto
DESTINATION	85:7	85:7	7	failure
LEAF_NODE	85:7	85:7	8	failure
LEAF_NODE	85:14	85:14	7	;
LEAF_NODE	86:1	86:1	5	}
SELECTION	87:1	87:53	3	
KEYWORD	87:1	87:1	4	if
LEAF_NODE	87:1	87:1	5	if
LEAF_NODE	87:4	87:4	4	(
CONDITION	87:5	87:5	4	! TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , bps )
EXPR	87:5	87:5	5	! TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , bps )
UNARY_EXPR	87:5	87:6	6	! TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , bps )
UNARY_OPERATOR	87:5	87:5	7	!
LEAF_NODE	87:5	87:5	8	!
FUNCTION_CALL	87:6	87:50	7	TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , bps )
CALLEE	87:6	87:6	8	TIFFSetField
LEAF_NODE	87:6	87:6	9	TIFFSetField
LEAF_NODE	87:18	87:18	8	(
ARGUMENT	87:19	87:19	8	tif
FIELD	87:19	87:19	9	tif
LEAF_NODE	87:19	87:19	10	tif
LEAF_NODE	87:22	87:22	8	,
ARGUMENT	87:24	87:24	8	TIFFTAG_BITSPERSAMPLE
FIELD	87:24	87:24	9	TIFFTAG_BITSPERSAMPLE
LEAF_NODE	87:24	87:24	10	TIFFTAG_BITSPERSAMPLE
LEAF_NODE	87:45	87:45	8	,
ARGUMENT	87:47	87:47	8	bps
FIELD	87:47	87:47	9	bps
LEAF_NODE	87:47	87:47	10	bps
LEAF_NODE	87:50	87:50	8	)
LEAF_NODE	87:51	87:51	4	)
STATEMENTS	87:53	90:1	4	
LEAF_NODE	87:53	87:53	5	{
STATEMENTS	88:2	89:2	5	
EXPR_STATEMENT	88:2	88:52	6	fprintf ( stderr , "Can't set BitsPerSample tag.\n" ) ;
EXPR	88:2	88:2	7	fprintf ( stderr , "Can't set BitsPerSample tag.\n" )
FUNCTION_CALL	88:2	88:51	8	fprintf ( stderr , "Can't set BitsPerSample tag.\n" )
CALLEE	88:2	88:2	9	fprintf
LEAF_NODE	88:2	88:2	10	fprintf
LEAF_NODE	88:10	88:10	9	(
ARGUMENT	88:11	88:11	9	stderr
FIELD	88:11	88:11	10	stderr
LEAF_NODE	88:11	88:11	11	stderr
LEAF_NODE	88:17	88:17	9	,
ARGUMENT	88:19	88:19	9	"Can't set BitsPerSample tag.\n"
FIELD	88:19	88:19	10	"Can't set BitsPerSample tag.\n"
LEAF_NODE	88:19	88:19	11	"Can't set BitsPerSample tag.\n"
LEAF_NODE	88:51	88:51	9	)
LEAF_NODE	88:52	88:52	7	;
JUMP_STATEMENT	89:2	89:14	6	goto failure ;
KEYWORD	89:2	89:2	7	goto
LEAF_NODE	89:2	89:2	8	goto
DESTINATION	89:7	89:7	7	failure
LEAF_NODE	89:7	89:7	8	failure
LEAF_NODE	89:14	89:14	7	;
LEAF_NODE	90:1	90:1	5	}
SELECTION	91:1	91:55	3	
KEYWORD	91:1	91:1	4	if
LEAF_NODE	91:1	91:1	5	if
LEAF_NODE	91:4	91:4	4	(
CONDITION	91:5	91:5	4	! TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , SPP )
EXPR	91:5	91:5	5	! TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , SPP )
UNARY_EXPR	91:5	91:6	6	! TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , SPP )
UNARY_OPERATOR	91:5	91:5	7	!
LEAF_NODE	91:5	91:5	8	!
FUNCTION_CALL	91:6	91:52	7	TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , SPP )
CALLEE	91:6	91:6	8	TIFFSetField
LEAF_NODE	91:6	91:6	9	TIFFSetField
LEAF_NODE	91:18	91:18	8	(
ARGUMENT	91:19	91:19	8	tif
FIELD	91:19	91:19	9	tif
LEAF_NODE	91:19	91:19	10	tif
LEAF_NODE	91:22	91:22	8	,
ARGUMENT	91:24	91:24	8	TIFFTAG_SAMPLESPERPIXEL
FIELD	91:24	91:24	9	TIFFTAG_SAMPLESPERPIXEL
LEAF_NODE	91:24	91:24	10	TIFFTAG_SAMPLESPERPIXEL
LEAF_NODE	91:47	91:47	8	,
ARGUMENT	91:49	91:49	8	SPP
FIELD	91:49	91:49	9	SPP
LEAF_NODE	91:49	91:49	10	SPP
LEAF_NODE	91:52	91:52	8	)
LEAF_NODE	91:53	91:53	4	)
STATEMENTS	91:55	94:1	4	
LEAF_NODE	91:55	91:55	5	{
STATEMENTS	92:2	93:2	5	
EXPR_STATEMENT	92:2	92:54	6	fprintf ( stderr , "Can't set SamplesPerPixel tag.\n" ) ;
EXPR	92:2	92:2	7	fprintf ( stderr , "Can't set SamplesPerPixel tag.\n" )
FUNCTION_CALL	92:2	92:53	8	fprintf ( stderr , "Can't set SamplesPerPixel tag.\n" )
CALLEE	92:2	92:2	9	fprintf
LEAF_NODE	92:2	92:2	10	fprintf
LEAF_NODE	92:10	92:10	9	(
ARGUMENT	92:11	92:11	9	stderr
FIELD	92:11	92:11	10	stderr
LEAF_NODE	92:11	92:11	11	stderr
LEAF_NODE	92:17	92:17	9	,
ARGUMENT	92:19	92:19	9	"Can't set SamplesPerPixel tag.\n"
FIELD	92:19	92:19	10	"Can't set SamplesPerPixel tag.\n"
LEAF_NODE	92:19	92:19	11	"Can't set SamplesPerPixel tag.\n"
LEAF_NODE	92:53	92:53	9	)
LEAF_NODE	92:54	92:54	7	;
JUMP_STATEMENT	93:2	93:14	6	goto failure ;
KEYWORD	93:2	93:2	7	goto
LEAF_NODE	93:2	93:2	8	goto
DESTINATION	93:7	93:7	7	failure
LEAF_NODE	93:7	93:7	8	failure
LEAF_NODE	93:14	93:14	7	;
LEAF_NODE	94:1	94:1	5	}
SELECTION	95:1	95:63	3	
KEYWORD	95:1	95:1	4	if
LEAF_NODE	95:1	95:1	5	if
LEAF_NODE	95:4	95:4	4	(
CONDITION	95:5	95:5	4	! TIFFSetField ( tif , TIFFTAG_ROWSPERSTRIP , rows_per_strip )
EXPR	95:5	95:5	5	! TIFFSetField ( tif , TIFFTAG_ROWSPERSTRIP , rows_per_strip )
UNARY_EXPR	95:5	95:6	6	! TIFFSetField ( tif , TIFFTAG_ROWSPERSTRIP , rows_per_strip )
UNARY_OPERATOR	95:5	95:5	7	!
LEAF_NODE	95:5	95:5	8	!
FUNCTION_CALL	95:6	95:60	7	TIFFSetField ( tif , TIFFTAG_ROWSPERSTRIP , rows_per_strip )
CALLEE	95:6	95:6	8	TIFFSetField
LEAF_NODE	95:6	95:6	9	TIFFSetField
LEAF_NODE	95:18	95:18	8	(
ARGUMENT	95:19	95:19	8	tif
FIELD	95:19	95:19	9	tif
LEAF_NODE	95:19	95:19	10	tif
LEAF_NODE	95:22	95:22	8	,
ARGUMENT	95:24	95:24	8	TIFFTAG_ROWSPERSTRIP
FIELD	95:24	95:24	9	TIFFTAG_ROWSPERSTRIP
LEAF_NODE	95:24	95:24	10	TIFFTAG_ROWSPERSTRIP
LEAF_NODE	95:44	95:44	8	,
ARGUMENT	95:46	95:46	8	rows_per_strip
FIELD	95:46	95:46	9	rows_per_strip
LEAF_NODE	95:46	95:46	10	rows_per_strip
LEAF_NODE	95:60	95:60	8	)
LEAF_NODE	95:61	95:61	4	)
STATEMENTS	95:63	98:1	4	
LEAF_NODE	95:63	95:63	5	{
STATEMENTS	96:2	97:2	5	
EXPR_STATEMENT	96:2	96:54	6	fprintf ( stderr , "Can't set SamplesPerPixel tag.\n" ) ;
EXPR	96:2	96:2	7	fprintf ( stderr , "Can't set SamplesPerPixel tag.\n" )
FUNCTION_CALL	96:2	96:53	8	fprintf ( stderr , "Can't set SamplesPerPixel tag.\n" )
CALLEE	96:2	96:2	9	fprintf
LEAF_NODE	96:2	96:2	10	fprintf
LEAF_NODE	96:10	96:10	9	(
ARGUMENT	96:11	96:11	9	stderr
FIELD	96:11	96:11	10	stderr
LEAF_NODE	96:11	96:11	11	stderr
LEAF_NODE	96:17	96:17	9	,
ARGUMENT	96:19	96:19	9	"Can't set SamplesPerPixel tag.\n"
FIELD	96:19	96:19	10	"Can't set SamplesPerPixel tag.\n"
LEAF_NODE	96:19	96:19	11	"Can't set SamplesPerPixel tag.\n"
LEAF_NODE	96:53	96:53	9	)
LEAF_NODE	96:54	96:54	7	;
JUMP_STATEMENT	97:2	97:14	6	goto failure ;
KEYWORD	97:2	97:2	7	goto
LEAF_NODE	97:2	97:2	8	goto
DESTINATION	97:7	97:7	7	failure
LEAF_NODE	97:7	97:7	8	failure
LEAF_NODE	97:14	97:14	7	;
LEAF_NODE	98:1	98:1	5	}
SELECTION	99:1	99:61	3	
KEYWORD	99:1	99:1	4	if
LEAF_NODE	99:1	99:1	5	if
LEAF_NODE	99:4	99:4	4	(
CONDITION	99:5	99:5	4	! TIFFSetField ( tif , TIFFTAG_PLANARCONFIG , planarconfig )
EXPR	99:5	99:5	5	! TIFFSetField ( tif , TIFFTAG_PLANARCONFIG , planarconfig )
UNARY_EXPR	99:5	99:6	6	! TIFFSetField ( tif , TIFFTAG_PLANARCONFIG , planarconfig )
UNARY_OPERATOR	99:5	99:5	7	!
LEAF_NODE	99:5	99:5	8	!
FUNCTION_CALL	99:6	99:58	7	TIFFSetField ( tif , TIFFTAG_PLANARCONFIG , planarconfig )
CALLEE	99:6	99:6	8	TIFFSetField
LEAF_NODE	99:6	99:6	9	TIFFSetField
LEAF_NODE	99:18	99:18	8	(
ARGUMENT	99:19	99:19	8	tif
FIELD	99:19	99:19	9	tif
LEAF_NODE	99:19	99:19	10	tif
LEAF_NODE	99:22	99:22	8	,
ARGUMENT	99:24	99:24	8	TIFFTAG_PLANARCONFIG
FIELD	99:24	99:24	9	TIFFTAG_PLANARCONFIG
LEAF_NODE	99:24	99:24	10	TIFFTAG_PLANARCONFIG
LEAF_NODE	99:44	99:44	8	,
ARGUMENT	99:46	99:46	8	planarconfig
FIELD	99:46	99:46	9	planarconfig
LEAF_NODE	99:46	99:46	10	planarconfig
LEAF_NODE	99:58	99:58	8	)
LEAF_NODE	99:59	99:59	4	)
STATEMENTS	99:61	102:1	4	
LEAF_NODE	99:61	99:61	5	{
STATEMENTS	100:2	101:2	5	
EXPR_STATEMENT	100:2	100:58	6	fprintf ( stderr , "Can't set PlanarConfiguration tag.\n" ) ;
EXPR	100:2	100:2	7	fprintf ( stderr , "Can't set PlanarConfiguration tag.\n" )
FUNCTION_CALL	100:2	100:57	8	fprintf ( stderr , "Can't set PlanarConfiguration tag.\n" )
CALLEE	100:2	100:2	9	fprintf
LEAF_NODE	100:2	100:2	10	fprintf
LEAF_NODE	100:10	100:10	9	(
ARGUMENT	100:11	100:11	9	stderr
FIELD	100:11	100:11	10	stderr
LEAF_NODE	100:11	100:11	11	stderr
LEAF_NODE	100:17	100:17	9	,
ARGUMENT	100:19	100:19	9	"Can't set PlanarConfiguration tag.\n"
FIELD	100:19	100:19	10	"Can't set PlanarConfiguration tag.\n"
LEAF_NODE	100:19	100:19	11	"Can't set PlanarConfiguration tag.\n"
LEAF_NODE	100:57	100:57	9	)
LEAF_NODE	100:58	100:58	7	;
JUMP_STATEMENT	101:2	101:14	6	goto failure ;
KEYWORD	101:2	101:2	7	goto
LEAF_NODE	101:2	101:2	8	goto
DESTINATION	101:7	101:7	7	failure
LEAF_NODE	101:7	101:7	8	failure
LEAF_NODE	101:14	101:14	7	;
LEAF_NODE	102:1	102:1	5	}
SELECTION	103:1	103:59	3	
KEYWORD	103:1	103:1	4	if
LEAF_NODE	103:1	103:1	5	if
LEAF_NODE	103:4	103:4	4	(
CONDITION	103:5	103:5	4	! TIFFSetField ( tif , TIFFTAG_PHOTOMETRIC , photometric )
EXPR	103:5	103:5	5	! TIFFSetField ( tif , TIFFTAG_PHOTOMETRIC , photometric )
UNARY_EXPR	103:5	103:6	6	! TIFFSetField ( tif , TIFFTAG_PHOTOMETRIC , photometric )
UNARY_OPERATOR	103:5	103:5	7	!
LEAF_NODE	103:5	103:5	8	!
FUNCTION_CALL	103:6	103:56	7	TIFFSetField ( tif , TIFFTAG_PHOTOMETRIC , photometric )
CALLEE	103:6	103:6	8	TIFFSetField
LEAF_NODE	103:6	103:6	9	TIFFSetField
LEAF_NODE	103:18	103:18	8	(
ARGUMENT	103:19	103:19	8	tif
FIELD	103:19	103:19	9	tif
LEAF_NODE	103:19	103:19	10	tif
LEAF_NODE	103:22	103:22	8	,
ARGUMENT	103:24	103:24	8	TIFFTAG_PHOTOMETRIC
FIELD	103:24	103:24	9	TIFFTAG_PHOTOMETRIC
LEAF_NODE	103:24	103:24	10	TIFFTAG_PHOTOMETRIC
LEAF_NODE	103:43	103:43	8	,
ARGUMENT	103:45	103:45	8	photometric
FIELD	103:45	103:45	9	photometric
LEAF_NODE	103:45	103:45	10	photometric
LEAF_NODE	103:56	103:56	8	)
LEAF_NODE	103:57	103:57	4	)
STATEMENTS	103:59	106:1	4	
LEAF_NODE	103:59	103:59	5	{
STATEMENTS	104:2	105:2	5	
EXPR_STATEMENT	104:2	104:64	6	fprintf ( stderr , "Can't set PhotometricInterpretation tag.\n" ) ;
EXPR	104:2	104:2	7	fprintf ( stderr , "Can't set PhotometricInterpretation tag.\n" )
FUNCTION_CALL	104:2	104:63	8	fprintf ( stderr , "Can't set PhotometricInterpretation tag.\n" )
CALLEE	104:2	104:2	9	fprintf
LEAF_NODE	104:2	104:2	10	fprintf
LEAF_NODE	104:10	104:10	9	(
ARGUMENT	104:11	104:11	9	stderr
FIELD	104:11	104:11	10	stderr
LEAF_NODE	104:11	104:11	11	stderr
LEAF_NODE	104:17	104:17	9	,
ARGUMENT	104:19	104:19	9	"Can't set PhotometricInterpretation tag.\n"
FIELD	104:19	104:19	10	"Can't set PhotometricInterpretation tag.\n"
LEAF_NODE	104:19	104:19	11	"Can't set PhotometricInterpretation tag.\n"
LEAF_NODE	104:63	104:63	9	)
LEAF_NODE	104:64	104:64	7	;
JUMP_STATEMENT	105:2	105:14	6	goto failure ;
KEYWORD	105:2	105:2	7	goto
LEAF_NODE	105:2	105:2	8	goto
DESTINATION	105:7	105:7	7	failure
LEAF_NODE	105:7	105:7	8	failure
LEAF_NODE	105:14	105:14	7	;
LEAF_NODE	106:1	106:1	5	}
SELECTION	109:1	109:46	3	
KEYWORD	109:1	109:1	4	if
LEAF_NODE	109:1	109:1	5	if
LEAF_NODE	109:4	109:4	4	(
CONDITION	109:5	109:5	4	TIFFWriteScanline ( tif , buf , 0 , 0 ) == - 1
EXPR	109:5	109:42	5	TIFFWriteScanline ( tif , buf , 0 , 0 ) == - 1
FUNCTION_CALL	109:5	109:37	6	TIFFWriteScanline ( tif , buf , 0 , 0 )
CALLEE	109:5	109:5	7	TIFFWriteScanline
LEAF_NODE	109:5	109:5	8	TIFFWriteScanline
LEAF_NODE	109:22	109:22	7	(
ARGUMENT	109:23	109:23	7	tif
FIELD	109:23	109:23	8	tif
LEAF_NODE	109:23	109:23	9	tif
LEAF_NODE	109:26	109:26	7	,
ARGUMENT	109:28	109:28	7	buf
FIELD	109:28	109:28	8	buf
LEAF_NODE	109:28	109:28	9	buf
LEAF_NODE	109:31	109:31	7	,
ARGUMENT	109:33	109:33	7	0
FIELD	109:33	109:33	8	0
LEAF_NODE	109:33	109:33	9	0
LEAF_NODE	109:34	109:34	7	,
ARGUMENT	109:36	109:36	7	0
FIELD	109:36	109:36	8	0
LEAF_NODE	109:36	109:36	9	0
LEAF_NODE	109:37	109:37	7	)
EQ_OPERATOR	109:39	109:39	6	==
LEAF_NODE	109:39	109:39	7	==
UNARY_EXPR	109:42	109:43	6	- 1
UNARY_OPERATOR	109:42	109:42	7	-
LEAF_NODE	109:42	109:42	8	-
FIELD	109:43	109:43	7	1
LEAF_NODE	109:43	109:43	8	1
LEAF_NODE	109:44	109:44	4	)
STATEMENTS	109:46	112:1	4	
LEAF_NODE	109:46	109:46	5	{
STATEMENTS	110:2	111:2	5	
EXPR_STATEMENT	110:2	110:47	6	fprintf ( stderr , "Can't write image data.\n" ) ;
EXPR	110:2	110:2	7	fprintf ( stderr , "Can't write image data.\n" )
FUNCTION_CALL	110:2	110:46	8	fprintf ( stderr , "Can't write image data.\n" )
CALLEE	110:2	110:2	9	fprintf
LEAF_NODE	110:2	110:2	10	fprintf
LEAF_NODE	110:10	110:10	9	(
ARGUMENT	110:11	110:11	9	stderr
FIELD	110:11	110:11	10	stderr
LEAF_NODE	110:11	110:11	11	stderr
LEAF_NODE	110:17	110:17	9	,
ARGUMENT	110:19	110:19	9	"Can't write image data.\n"
FIELD	110:19	110:19	10	"Can't write image data.\n"
LEAF_NODE	110:19	110:19	11	"Can't write image data.\n"
LEAF_NODE	110:46	110:46	9	)
LEAF_NODE	110:47	110:47	7	;
JUMP_STATEMENT	111:2	111:14	6	goto failure ;
KEYWORD	111:2	111:2	7	goto
LEAF_NODE	111:2	111:2	8	goto
DESTINATION	111:7	111:7	7	failure
LEAF_NODE	111:7	111:7	8	failure
LEAF_NODE	111:14	111:14	7	;
LEAF_NODE	112:1	112:1	5	}
SELECTION	114:8	114:40	3	
KEYWORD	114:8	114:8	4	if
LEAF_NODE	114:8	114:8	5	if
LEAF_NODE	114:11	114:11	4	(
CONDITION	114:12	114:12	4	! TIFFWriteDirectory ( tif )
EXPR	114:12	114:12	5	! TIFFWriteDirectory ( tif )
UNARY_EXPR	114:12	114:13	6	! TIFFWriteDirectory ( tif )
UNARY_OPERATOR	114:12	114:12	7	!
LEAF_NODE	114:12	114:12	8	!
FUNCTION_CALL	114:13	114:37	7	TIFFWriteDirectory ( tif )
CALLEE	114:13	114:13	8	TIFFWriteDirectory
LEAF_NODE	114:13	114:13	9	TIFFWriteDirectory
LEAF_NODE	114:31	114:31	8	(
ARGUMENT	114:33	114:33	8	tif
FIELD	114:33	114:33	9	tif
LEAF_NODE	114:33	114:33	10	tif
LEAF_NODE	114:37	114:37	8	)
LEAF_NODE	114:38	114:38	4	)
STATEMENTS	114:40	117:1	4	
LEAF_NODE	114:40	114:40	5	{
STATEMENTS	115:2	116:2	5	
EXPR_STATEMENT	115:2	115:52	6	fprintf ( stderr , "TIFFWriteDirectory() failed.\n" ) ;
EXPR	115:2	115:2	7	fprintf ( stderr , "TIFFWriteDirectory() failed.\n" )
FUNCTION_CALL	115:2	115:51	8	fprintf ( stderr , "TIFFWriteDirectory() failed.\n" )
CALLEE	115:2	115:2	9	fprintf
LEAF_NODE	115:2	115:2	10	fprintf
LEAF_NODE	115:10	115:10	9	(
ARGUMENT	115:11	115:11	9	stderr
FIELD	115:11	115:11	10	stderr
LEAF_NODE	115:11	115:11	11	stderr
LEAF_NODE	115:17	115:17	9	,
ARGUMENT	115:19	115:19	9	"TIFFWriteDirectory() failed.\n"
FIELD	115:19	115:19	10	"TIFFWriteDirectory() failed.\n"
LEAF_NODE	115:19	115:19	11	"TIFFWriteDirectory() failed.\n"
LEAF_NODE	115:51	115:51	9	)
LEAF_NODE	115:52	115:52	7	;
JUMP_STATEMENT	116:2	116:14	6	goto failure ;
KEYWORD	116:2	116:2	7	goto
LEAF_NODE	116:2	116:2	8	goto
DESTINATION	116:7	116:7	7	failure
LEAF_NODE	116:7	116:7	8	failure
LEAF_NODE	116:14	116:14	7	;
LEAF_NODE	117:1	117:1	5	}
SELECTION	122:1	122:40	3	
KEYWORD	122:1	122:1	4	if
LEAF_NODE	122:1	122:1	5	if
LEAF_NODE	122:4	122:4	4	(
CONDITION	122:5	122:5	4	TIFFCreateEXIFDirectory ( tif ) != 0
EXPR	122:5	122:37	5	TIFFCreateEXIFDirectory ( tif ) != 0
FUNCTION_CALL	122:5	122:32	6	TIFFCreateEXIFDirectory ( tif )
CALLEE	122:5	122:5	7	TIFFCreateEXIFDirectory
LEAF_NODE	122:5	122:5	8	TIFFCreateEXIFDirectory
LEAF_NODE	122:28	122:28	7	(
ARGUMENT	122:29	122:29	7	tif
FIELD	122:29	122:29	8	tif
LEAF_NODE	122:29	122:29	9	tif
LEAF_NODE	122:32	122:32	7	)
EQ_OPERATOR	122:34	122:34	6	!=
LEAF_NODE	122:34	122:34	7	!=
FIELD	122:37	122:37	6	0
LEAF_NODE	122:37	122:37	7	0
LEAF_NODE	122:38	122:38	4	)
STATEMENTS	122:40	125:1	4	
LEAF_NODE	122:40	122:40	5	{
STATEMENTS	123:2	124:2	5	
EXPR_STATEMENT	123:2	123:58	6	fprintf ( stderr , "TIFFCreateEXIFDirectory() failed.\n" ) ;
EXPR	123:2	123:2	7	fprintf ( stderr , "TIFFCreateEXIFDirectory() failed.\n" )
FUNCTION_CALL	123:2	123:57	8	fprintf ( stderr , "TIFFCreateEXIFDirectory() failed.\n" )
CALLEE	123:2	123:2	9	fprintf
LEAF_NODE	123:2	123:2	10	fprintf
LEAF_NODE	123:10	123:10	9	(
ARGUMENT	123:11	123:11	9	stderr
FIELD	123:11	123:11	10	stderr
LEAF_NODE	123:11	123:11	11	stderr
LEAF_NODE	123:17	123:17	9	,
ARGUMENT	123:19	123:19	9	"TIFFCreateEXIFDirectory() failed.\n"
FIELD	123:19	123:19	10	"TIFFCreateEXIFDirectory() failed.\n"
LEAF_NODE	123:19	123:19	11	"TIFFCreateEXIFDirectory() failed.\n"
LEAF_NODE	123:57	123:57	9	)
LEAF_NODE	123:58	123:58	7	;
JUMP_STATEMENT	124:2	124:14	6	goto failure ;
KEYWORD	124:2	124:2	7	goto
LEAF_NODE	124:2	124:2	8	goto
DESTINATION	124:7	124:7	7	failure
LEAF_NODE	124:7	124:7	8	failure
LEAF_NODE	124:14	124:14	7	;
LEAF_NODE	125:1	125:1	5	}
SELECTION	127:1	127:84	3	
KEYWORD	127:1	127:1	4	if
LEAF_NODE	127:1	127:1	5	if
LEAF_NODE	127:4	127:4	4	(
CONDITION	127:5	127:5	4	! TIFFSetField ( tif , EXIFTAG_SPECTRALSENSITIVITY , "EXIF Spectral Sensitivity" )
EXPR	127:5	127:5	5	! TIFFSetField ( tif , EXIFTAG_SPECTRALSENSITIVITY , "EXIF Spectral Sensitivity" )
UNARY_EXPR	127:5	127:6	6	! TIFFSetField ( tif , EXIFTAG_SPECTRALSENSITIVITY , "EXIF Spectral Sensitivity" )
UNARY_OPERATOR	127:5	127:5	7	!
LEAF_NODE	127:5	127:5	8	!
FUNCTION_CALL	127:6	127:81	7	TIFFSetField ( tif , EXIFTAG_SPECTRALSENSITIVITY , "EXIF Spectral Sensitivity" )
CALLEE	127:6	127:6	8	TIFFSetField
LEAF_NODE	127:6	127:6	9	TIFFSetField
LEAF_NODE	127:18	127:18	8	(
ARGUMENT	127:20	127:20	8	tif
FIELD	127:20	127:20	9	tif
LEAF_NODE	127:20	127:20	10	tif
LEAF_NODE	127:23	127:23	8	,
ARGUMENT	127:25	127:25	8	EXIFTAG_SPECTRALSENSITIVITY
FIELD	127:25	127:25	9	EXIFTAG_SPECTRALSENSITIVITY
LEAF_NODE	127:25	127:25	10	EXIFTAG_SPECTRALSENSITIVITY
LEAF_NODE	127:52	127:52	8	,
ARGUMENT	127:54	127:54	8	"EXIF Spectral Sensitivity"
FIELD	127:54	127:54	9	"EXIF Spectral Sensitivity"
LEAF_NODE	127:54	127:54	10	"EXIF Spectral Sensitivity"
LEAF_NODE	127:81	127:81	8	)
LEAF_NODE	127:82	127:82	4	)
STATEMENTS	127:84	130:1	4	
LEAF_NODE	127:84	127:84	5	{
STATEMENTS	128:2	129:2	5	
EXPR_STATEMENT	128:2	128:56	6	fprintf ( stderr , "Can't write SPECTRALSENSITIVITY\n" ) ;
EXPR	128:2	128:2	7	fprintf ( stderr , "Can't write SPECTRALSENSITIVITY\n" )
FUNCTION_CALL	128:2	128:55	8	fprintf ( stderr , "Can't write SPECTRALSENSITIVITY\n" )
CALLEE	128:2	128:2	9	fprintf
LEAF_NODE	128:2	128:2	10	fprintf
LEAF_NODE	128:10	128:10	9	(
ARGUMENT	128:11	128:11	9	stderr
FIELD	128:11	128:11	10	stderr
LEAF_NODE	128:11	128:11	11	stderr
LEAF_NODE	128:17	128:17	9	,
ARGUMENT	128:19	128:19	9	"Can't write SPECTRALSENSITIVITY\n"
FIELD	128:19	128:19	10	"Can't write SPECTRALSENSITIVITY\n"
LEAF_NODE	128:19	128:19	11	"Can't write SPECTRALSENSITIVITY\n"
LEAF_NODE	128:55	128:55	9	)
LEAF_NODE	128:56	128:56	7	;
JUMP_STATEMENT	129:2	129:14	6	goto failure ;
KEYWORD	129:2	129:2	7	goto
LEAF_NODE	129:2	129:2	8	goto
DESTINATION	129:7	129:7	7	failure
LEAF_NODE	129:7	129:7	8	failure
LEAF_NODE	129:14	129:14	7	;
LEAF_NODE	130:1	130:1	5	}
SELECTION	132:8	132:59	3	
KEYWORD	132:8	132:8	4	if
LEAF_NODE	132:8	132:8	5	if
LEAF_NODE	132:11	132:11	4	(
CONDITION	132:12	132:12	4	! TIFFWriteCustomDirectory ( tif , & dir_offset )
EXPR	132:12	132:12	5	! TIFFWriteCustomDirectory ( tif , & dir_offset )
UNARY_EXPR	132:12	132:13	6	! TIFFWriteCustomDirectory ( tif , & dir_offset )
UNARY_OPERATOR	132:12	132:12	7	!
LEAF_NODE	132:12	132:12	8	!
FUNCTION_CALL	132:13	132:56	7	TIFFWriteCustomDirectory ( tif , & dir_offset )
CALLEE	132:13	132:13	8	TIFFWriteCustomDirectory
LEAF_NODE	132:13	132:13	9	TIFFWriteCustomDirectory
LEAF_NODE	132:37	132:37	8	(
ARGUMENT	132:39	132:39	8	tif
FIELD	132:39	132:39	9	tif
LEAF_NODE	132:39	132:39	10	tif
LEAF_NODE	132:42	132:42	8	,
ARGUMENT	132:44	132:44	8	& dir_offset
UNARY_EXPR	132:44	132:45	9	& dir_offset
UNARY_OPERATOR	132:44	132:44	10	&
LEAF_NODE	132:44	132:44	11	&
FIELD	132:45	132:45	10	dir_offset
LEAF_NODE	132:45	132:45	11	dir_offset
LEAF_NODE	132:56	132:56	8	)
LEAF_NODE	132:57	132:57	4	)
STATEMENTS	132:59	135:1	4	
LEAF_NODE	132:59	132:59	5	{
STATEMENTS	133:2	134:2	5	
EXPR_STATEMENT	133:2	133:68	6	fprintf ( stderr , "TIFFWriteCustomDirectory() with EXIF failed.\n" ) ;
EXPR	133:2	133:2	7	fprintf ( stderr , "TIFFWriteCustomDirectory() with EXIF failed.\n" )
FUNCTION_CALL	133:2	133:67	8	fprintf ( stderr , "TIFFWriteCustomDirectory() with EXIF failed.\n" )
CALLEE	133:2	133:2	9	fprintf
LEAF_NODE	133:2	133:2	10	fprintf
LEAF_NODE	133:10	133:10	9	(
ARGUMENT	133:11	133:11	9	stderr
FIELD	133:11	133:11	10	stderr
LEAF_NODE	133:11	133:11	11	stderr
LEAF_NODE	133:17	133:17	9	,
ARGUMENT	133:19	133:19	9	"TIFFWriteCustomDirectory() with EXIF failed.\n"
FIELD	133:19	133:19	10	"TIFFWriteCustomDirectory() with EXIF failed.\n"
LEAF_NODE	133:19	133:19	11	"TIFFWriteCustomDirectory() with EXIF failed.\n"
LEAF_NODE	133:67	133:67	9	)
LEAF_NODE	133:68	133:68	7	;
JUMP_STATEMENT	134:2	134:14	6	goto failure ;
KEYWORD	134:2	134:2	7	goto
LEAF_NODE	134:2	134:2	8	goto
DESTINATION	134:7	134:7	7	failure
LEAF_NODE	134:7	134:7	8	failure
LEAF_NODE	134:14	134:14	7	;
LEAF_NODE	135:1	135:1	5	}
EXPR_STATEMENT	142:1	142:25	3	TIFFFreeDirectory ( tif ) ;
EXPR	142:1	142:1	4	TIFFFreeDirectory ( tif )
FUNCTION_CALL	142:1	142:24	5	TIFFFreeDirectory ( tif )
CALLEE	142:1	142:1	6	TIFFFreeDirectory
LEAF_NODE	142:1	142:1	7	TIFFFreeDirectory
LEAF_NODE	142:18	142:18	6	(
ARGUMENT	142:20	142:20	6	tif
FIELD	142:20	142:20	7	tif
LEAF_NODE	142:20	142:20	8	tif
LEAF_NODE	142:24	142:24	6	)
LEAF_NODE	142:25	142:25	4	;
SELECTION	143:1	143:61	3	
KEYWORD	143:1	143:1	4	if
LEAF_NODE	143:1	143:1	5	if
LEAF_NODE	143:4	143:4	4	(
CONDITION	143:5	143:5	4	TIFFCreateCustomDirectory ( tif , & customFieldArray ) != 0
EXPR	143:5	143:58	5	TIFFCreateCustomDirectory ( tif , & customFieldArray ) != 0
FUNCTION_CALL	143:5	143:53	6	TIFFCreateCustomDirectory ( tif , & customFieldArray )
CALLEE	143:5	143:5	7	TIFFCreateCustomDirectory
LEAF_NODE	143:5	143:5	8	TIFFCreateCustomDirectory
LEAF_NODE	143:30	143:30	7	(
ARGUMENT	143:31	143:31	7	tif
FIELD	143:31	143:31	8	tif
LEAF_NODE	143:31	143:31	9	tif
LEAF_NODE	143:34	143:34	7	,
ARGUMENT	143:36	143:36	7	& customFieldArray
UNARY_EXPR	143:36	143:37	8	& customFieldArray
UNARY_OPERATOR	143:36	143:36	9	&
LEAF_NODE	143:36	143:36	10	&
FIELD	143:37	143:37	9	customFieldArray
LEAF_NODE	143:37	143:37	10	customFieldArray
LEAF_NODE	143:53	143:53	7	)
EQ_OPERATOR	143:55	143:55	6	!=
LEAF_NODE	143:55	143:55	7	!=
FIELD	143:58	143:58	6	0
LEAF_NODE	143:58	143:58	7	0
LEAF_NODE	143:59	143:59	4	)
STATEMENTS	143:61	146:1	4	
LEAF_NODE	143:61	143:61	5	{
STATEMENTS	144:2	145:2	5	
EXPR_STATEMENT	144:2	144:58	6	fprintf ( stderr , "TIFFCreateEXIFDirectory() failed.\n" ) ;
EXPR	144:2	144:2	7	fprintf ( stderr , "TIFFCreateEXIFDirectory() failed.\n" )
FUNCTION_CALL	144:2	144:57	8	fprintf ( stderr , "TIFFCreateEXIFDirectory() failed.\n" )
CALLEE	144:2	144:2	9	fprintf
LEAF_NODE	144:2	144:2	10	fprintf
LEAF_NODE	144:10	144:10	9	(
ARGUMENT	144:11	144:11	9	stderr
FIELD	144:11	144:11	10	stderr
LEAF_NODE	144:11	144:11	11	stderr
LEAF_NODE	144:17	144:17	9	,
ARGUMENT	144:19	144:19	9	"TIFFCreateEXIFDirectory() failed.\n"
FIELD	144:19	144:19	10	"TIFFCreateEXIFDirectory() failed.\n"
LEAF_NODE	144:19	144:19	11	"TIFFCreateEXIFDirectory() failed.\n"
LEAF_NODE	144:57	144:57	9	)
LEAF_NODE	144:58	144:58	7	;
JUMP_STATEMENT	145:2	145:14	6	goto failure ;
KEYWORD	145:2	145:2	7	goto
LEAF_NODE	145:2	145:2	8	goto
DESTINATION	145:7	145:7	7	failure
LEAF_NODE	145:7	145:7	8	failure
LEAF_NODE	145:14	145:14	7	;
LEAF_NODE	146:1	146:1	5	}
SELECTION	148:1	148:58	3	
KEYWORD	148:1	148:1	4	if
LEAF_NODE	148:1	148:1	5	if
LEAF_NODE	148:4	148:4	4	(
CONDITION	148:5	148:5	4	! TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , "*Custom1" )
EXPR	148:5	148:5	5	! TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , "*Custom1" )
UNARY_EXPR	148:5	148:6	6	! TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , "*Custom1" )
UNARY_OPERATOR	148:5	148:5	7	!
LEAF_NODE	148:5	148:5	8	!
FUNCTION_CALL	148:6	148:55	7	TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , "*Custom1" )
CALLEE	148:6	148:6	8	TIFFSetField
LEAF_NODE	148:6	148:6	9	TIFFSetField
LEAF_NODE	148:18	148:18	8	(
ARGUMENT	148:20	148:20	8	tif
FIELD	148:20	148:20	9	tif
LEAF_NODE	148:20	148:20	10	tif
LEAF_NODE	148:23	148:23	8	,
ARGUMENT	148:25	148:25	8	TIFFTAG_IMAGEWIDTH
FIELD	148:25	148:25	9	TIFFTAG_IMAGEWIDTH
LEAF_NODE	148:25	148:25	10	TIFFTAG_IMAGEWIDTH
LEAF_NODE	148:43	148:43	8	,
ARGUMENT	148:45	148:45	8	"*Custom1"
FIELD	148:45	148:45	9	"*Custom1"
LEAF_NODE	148:45	148:45	10	"*Custom1"
LEAF_NODE	148:55	148:55	8	)
LEAF_NODE	148:56	148:56	4	)
STATEMENTS	148:58	151:1	4	
LEAF_NODE	148:58	148:58	5	{
STATEMENTS	149:2	150:2	5	
EXPR_STATEMENT	149:2	149:55	6	fprintf ( stderr , "Can't write pseudo-IMAGEWIDTH.\n" ) ;
EXPR	149:2	149:2	7	fprintf ( stderr , "Can't write pseudo-IMAGEWIDTH.\n" )
FUNCTION_CALL	149:2	149:54	8	fprintf ( stderr , "Can't write pseudo-IMAGEWIDTH.\n" )
CALLEE	149:2	149:2	9	fprintf
LEAF_NODE	149:2	149:2	10	fprintf
LEAF_NODE	149:10	149:10	9	(
ARGUMENT	149:11	149:11	9	stderr
FIELD	149:11	149:11	10	stderr
LEAF_NODE	149:11	149:11	11	stderr
LEAF_NODE	149:17	149:17	9	,
ARGUMENT	149:19	149:19	9	"Can't write pseudo-IMAGEWIDTH.\n"
FIELD	149:19	149:19	10	"Can't write pseudo-IMAGEWIDTH.\n"
LEAF_NODE	149:19	149:19	11	"Can't write pseudo-IMAGEWIDTH.\n"
LEAF_NODE	149:54	149:54	9	)
LEAF_NODE	149:55	149:55	7	;
JUMP_STATEMENT	150:2	150:14	6	goto failure ;
KEYWORD	150:2	150:2	7	goto
LEAF_NODE	150:2	150:2	8	goto
DESTINATION	150:7	150:7	7	failure
LEAF_NODE	150:7	150:7	8	failure
LEAF_NODE	150:14	150:14	7	;
LEAF_NODE	151:1	151:1	5	}
SELECTION	153:1	153:56	3	
KEYWORD	153:1	153:1	4	if
LEAF_NODE	153:1	153:1	5	if
LEAF_NODE	153:4	153:4	4	(
CONDITION	153:5	153:5	4	! TIFFSetField ( tif , TIFFTAG_DOTRANGE , "*Custom2" )
EXPR	153:5	153:5	5	! TIFFSetField ( tif , TIFFTAG_DOTRANGE , "*Custom2" )
UNARY_EXPR	153:5	153:6	6	! TIFFSetField ( tif , TIFFTAG_DOTRANGE , "*Custom2" )
UNARY_OPERATOR	153:5	153:5	7	!
LEAF_NODE	153:5	153:5	8	!
FUNCTION_CALL	153:6	153:53	7	TIFFSetField ( tif , TIFFTAG_DOTRANGE , "*Custom2" )
CALLEE	153:6	153:6	8	TIFFSetField
LEAF_NODE	153:6	153:6	9	TIFFSetField
LEAF_NODE	153:18	153:18	8	(
ARGUMENT	153:20	153:20	8	tif
FIELD	153:20	153:20	9	tif
LEAF_NODE	153:20	153:20	10	tif
LEAF_NODE	153:23	153:23	8	,
ARGUMENT	153:25	153:25	8	TIFFTAG_DOTRANGE
FIELD	153:25	153:25	9	TIFFTAG_DOTRANGE
LEAF_NODE	153:25	153:25	10	TIFFTAG_DOTRANGE
LEAF_NODE	153:41	153:41	8	,
ARGUMENT	153:43	153:43	8	"*Custom2"
FIELD	153:43	153:43	9	"*Custom2"
LEAF_NODE	153:43	153:43	10	"*Custom2"
LEAF_NODE	153:53	153:53	8	)
LEAF_NODE	153:54	153:54	4	)
STATEMENTS	153:56	156:1	4	
LEAF_NODE	153:56	153:56	5	{
STATEMENTS	154:2	155:2	5	
EXPR_STATEMENT	154:2	154:53	6	fprintf ( stderr , "Can't write pseudo-DOTWIDTH.\n" ) ;
EXPR	154:2	154:2	7	fprintf ( stderr , "Can't write pseudo-DOTWIDTH.\n" )
FUNCTION_CALL	154:2	154:52	8	fprintf ( stderr , "Can't write pseudo-DOTWIDTH.\n" )
CALLEE	154:2	154:2	9	fprintf
LEAF_NODE	154:2	154:2	10	fprintf
LEAF_NODE	154:10	154:10	9	(
ARGUMENT	154:11	154:11	9	stderr
FIELD	154:11	154:11	10	stderr
LEAF_NODE	154:11	154:11	11	stderr
LEAF_NODE	154:17	154:17	9	,
ARGUMENT	154:19	154:19	9	"Can't write pseudo-DOTWIDTH.\n"
FIELD	154:19	154:19	10	"Can't write pseudo-DOTWIDTH.\n"
LEAF_NODE	154:19	154:19	11	"Can't write pseudo-DOTWIDTH.\n"
LEAF_NODE	154:52	154:52	9	)
LEAF_NODE	154:53	154:53	7	;
JUMP_STATEMENT	155:2	155:14	6	goto failure ;
KEYWORD	155:2	155:2	7	goto
LEAF_NODE	155:2	155:2	8	goto
DESTINATION	155:7	155:7	7	failure
LEAF_NODE	155:7	155:7	8	failure
LEAF_NODE	155:14	155:14	7	;
LEAF_NODE	156:1	156:1	5	}
SELECTION	158:8	158:60	3	
KEYWORD	158:8	158:8	4	if
LEAF_NODE	158:8	158:8	5	if
LEAF_NODE	158:11	158:11	4	(
CONDITION	158:12	158:12	4	! TIFFWriteCustomDirectory ( tif , & dir_offset2 )
EXPR	158:12	158:12	5	! TIFFWriteCustomDirectory ( tif , & dir_offset2 )
UNARY_EXPR	158:12	158:13	6	! TIFFWriteCustomDirectory ( tif , & dir_offset2 )
UNARY_OPERATOR	158:12	158:12	7	!
LEAF_NODE	158:12	158:12	8	!
FUNCTION_CALL	158:13	158:57	7	TIFFWriteCustomDirectory ( tif , & dir_offset2 )
CALLEE	158:13	158:13	8	TIFFWriteCustomDirectory
LEAF_NODE	158:13	158:13	9	TIFFWriteCustomDirectory
LEAF_NODE	158:37	158:37	8	(
ARGUMENT	158:39	158:39	8	tif
FIELD	158:39	158:39	9	tif
LEAF_NODE	158:39	158:39	10	tif
LEAF_NODE	158:42	158:42	8	,
ARGUMENT	158:44	158:44	8	& dir_offset2
UNARY_EXPR	158:44	158:45	9	& dir_offset2
UNARY_OPERATOR	158:44	158:44	10	&
LEAF_NODE	158:44	158:44	11	&
FIELD	158:45	158:45	10	dir_offset2
LEAF_NODE	158:45	158:45	11	dir_offset2
LEAF_NODE	158:57	158:57	8	)
LEAF_NODE	158:58	158:58	4	)
STATEMENTS	158:60	161:1	4	
LEAF_NODE	158:60	158:60	5	{
STATEMENTS	159:2	160:2	5	
EXPR_STATEMENT	159:2	159:68	6	fprintf ( stderr , "TIFFWriteCustomDirectory() with EXIF failed.\n" ) ;
EXPR	159:2	159:2	7	fprintf ( stderr , "TIFFWriteCustomDirectory() with EXIF failed.\n" )
FUNCTION_CALL	159:2	159:67	8	fprintf ( stderr , "TIFFWriteCustomDirectory() with EXIF failed.\n" )
CALLEE	159:2	159:2	9	fprintf
LEAF_NODE	159:2	159:2	10	fprintf
LEAF_NODE	159:10	159:10	9	(
ARGUMENT	159:11	159:11	9	stderr
FIELD	159:11	159:11	10	stderr
LEAF_NODE	159:11	159:11	11	stderr
LEAF_NODE	159:17	159:17	9	,
ARGUMENT	159:19	159:19	9	"TIFFWriteCustomDirectory() with EXIF failed.\n"
FIELD	159:19	159:19	10	"TIFFWriteCustomDirectory() with EXIF failed.\n"
LEAF_NODE	159:19	159:19	11	"TIFFWriteCustomDirectory() with EXIF failed.\n"
LEAF_NODE	159:67	159:67	9	)
LEAF_NODE	159:68	159:68	7	;
JUMP_STATEMENT	160:2	160:14	6	goto failure ;
KEYWORD	160:2	160:2	7	goto
LEAF_NODE	160:2	160:2	8	goto
DESTINATION	160:7	160:7	7	failure
LEAF_NODE	160:7	160:7	8	failure
LEAF_NODE	160:14	160:14	7	;
LEAF_NODE	161:1	161:1	5	}
EXPR_STATEMENT	166:1	166:25	3	TIFFSetDirectory ( tif , 0 ) ;
EXPR	166:1	166:1	4	TIFFSetDirectory ( tif , 0 )
FUNCTION_CALL	166:1	166:24	5	TIFFSetDirectory ( tif , 0 )
CALLEE	166:1	166:1	6	TIFFSetDirectory
LEAF_NODE	166:1	166:1	7	TIFFSetDirectory
LEAF_NODE	166:17	166:17	6	(
ARGUMENT	166:18	166:18	6	tif
FIELD	166:18	166:18	7	tif
LEAF_NODE	166:18	166:18	8	tif
LEAF_NODE	166:21	166:21	6	,
ARGUMENT	166:23	166:23	6	0
FIELD	166:23	166:23	7	0
LEAF_NODE	166:23	166:23	8	0
LEAF_NODE	166:24	166:24	6	)
LEAF_NODE	166:25	166:25	4	;
EXPR_STATEMENT	167:1	167:48	3	TIFFSetField ( tif , TIFFTAG_EXIFIFD , dir_offset ) ;
EXPR	167:1	167:1	4	TIFFSetField ( tif , TIFFTAG_EXIFIFD , dir_offset )
FUNCTION_CALL	167:1	167:47	5	TIFFSetField ( tif , TIFFTAG_EXIFIFD , dir_offset )
CALLEE	167:1	167:1	6	TIFFSetField
LEAF_NODE	167:1	167:1	7	TIFFSetField
LEAF_NODE	167:13	167:13	6	(
ARGUMENT	167:14	167:14	6	tif
FIELD	167:14	167:14	7	tif
LEAF_NODE	167:14	167:14	8	tif
LEAF_NODE	167:17	167:17	6	,
ARGUMENT	167:19	167:19	6	TIFFTAG_EXIFIFD
FIELD	167:19	167:19	7	TIFFTAG_EXIFIFD
LEAF_NODE	167:19	167:19	8	TIFFTAG_EXIFIFD
LEAF_NODE	167:34	167:34	6	,
ARGUMENT	167:36	167:36	6	dir_offset
FIELD	167:36	167:36	7	dir_offset
LEAF_NODE	167:36	167:36	8	dir_offset
LEAF_NODE	167:47	167:47	6	)
LEAF_NODE	167:48	167:48	4	;
EXPR_STATEMENT	168:1	168:52	3	TIFFSetField ( tif , TIFFTAG_SUBIFD , 1 , & dir_offset2 ) ;
EXPR	168:1	168:1	4	TIFFSetField ( tif , TIFFTAG_SUBIFD , 1 , & dir_offset2 )
FUNCTION_CALL	168:1	168:51	5	TIFFSetField ( tif , TIFFTAG_SUBIFD , 1 , & dir_offset2 )
CALLEE	168:1	168:1	6	TIFFSetField
LEAF_NODE	168:1	168:1	7	TIFFSetField
LEAF_NODE	168:13	168:13	6	(
ARGUMENT	168:14	168:14	6	tif
FIELD	168:14	168:14	7	tif
LEAF_NODE	168:14	168:14	8	tif
LEAF_NODE	168:17	168:17	6	,
ARGUMENT	168:19	168:19	6	TIFFTAG_SUBIFD
FIELD	168:19	168:19	7	TIFFTAG_SUBIFD
LEAF_NODE	168:19	168:19	8	TIFFTAG_SUBIFD
LEAF_NODE	168:33	168:33	6	,
ARGUMENT	168:35	168:35	6	1
FIELD	168:35	168:35	7	1
LEAF_NODE	168:35	168:35	8	1
LEAF_NODE	168:36	168:36	6	,
ARGUMENT	168:38	168:38	6	& dir_offset2
UNARY_EXPR	168:38	168:39	7	& dir_offset2
UNARY_OPERATOR	168:38	168:38	8	&
LEAF_NODE	168:38	168:38	9	&
FIELD	168:39	168:39	8	dir_offset2
LEAF_NODE	168:39	168:39	9	dir_offset2
LEAF_NODE	168:51	168:51	6	)
LEAF_NODE	168:52	168:52	4	;
EXPR_STATEMENT	170:1	170:15	3	TIFFClose ( tif ) ;
EXPR	170:1	170:1	4	TIFFClose ( tif )
FUNCTION_CALL	170:1	170:14	5	TIFFClose ( tif )
CALLEE	170:1	170:1	6	TIFFClose
LEAF_NODE	170:1	170:1	7	TIFFClose
LEAF_NODE	170:10	170:10	6	(
ARGUMENT	170:11	170:11	6	tif
FIELD	170:11	170:11	7	tif
LEAF_NODE	170:11	170:11	8	tif
LEAF_NODE	170:14	170:14	6	)
LEAF_NODE	170:15	170:15	4	;
EXPR_STATEMENT	173:1	173:30	3	tif = TIFFOpen ( filename , "r" ) ;
EXPR	173:1	173:1	4	tif = TIFFOpen ( filename , "r" )
ASSIGN	173:1	173:7	5	tif = TIFFOpen ( filename , "r" )
LVAL	173:1	173:1	6	tif
FIELD	173:1	173:1	7	tif
LEAF_NODE	173:1	173:1	8	tif
ASSIGN_OP	173:5	173:5	6	=
LEAF_NODE	173:5	173:5	7	=
RVAL	173:7	173:7	6	TIFFOpen ( filename , "r" )
FUNCTION_CALL	173:7	173:29	7	TIFFOpen ( filename , "r" )
CALLEE	173:7	173:7	8	TIFFOpen
LEAF_NODE	173:7	173:7	9	TIFFOpen
LEAF_NODE	173:15	173:15	8	(
ARGUMENT	173:16	173:16	8	filename
FIELD	173:16	173:16	9	filename
LEAF_NODE	173:16	173:16	10	filename
LEAF_NODE	173:24	173:24	8	,
ARGUMENT	173:26	173:26	8	"r"
FIELD	173:26	173:26	9	"r"
LEAF_NODE	173:26	173:26	10	"r"
LEAF_NODE	173:29	173:29	8	)
LEAF_NODE	173:30	173:30	4	;
EXPR_STATEMENT	175:1	175:54	3	TIFFGetField ( tif , TIFFTAG_EXIFIFD , & read_dir_offset ) ;
EXPR	175:1	175:1	4	TIFFGetField ( tif , TIFFTAG_EXIFIFD , & read_dir_offset )
FUNCTION_CALL	175:1	175:53	5	TIFFGetField ( tif , TIFFTAG_EXIFIFD , & read_dir_offset )
CALLEE	175:1	175:1	6	TIFFGetField
LEAF_NODE	175:1	175:1	7	TIFFGetField
LEAF_NODE	175:13	175:13	6	(
ARGUMENT	175:14	175:14	6	tif
FIELD	175:14	175:14	7	tif
LEAF_NODE	175:14	175:14	8	tif
LEAF_NODE	175:17	175:17	6	,
ARGUMENT	175:19	175:19	6	TIFFTAG_EXIFIFD
FIELD	175:19	175:19	7	TIFFTAG_EXIFIFD
LEAF_NODE	175:19	175:19	8	TIFFTAG_EXIFIFD
LEAF_NODE	175:34	175:34	6	,
ARGUMENT	175:36	175:36	6	& read_dir_offset
UNARY_EXPR	175:36	175:37	7	& read_dir_offset
UNARY_OPERATOR	175:36	175:36	8	&
LEAF_NODE	175:36	175:36	9	&
FIELD	175:37	175:37	8	read_dir_offset
LEAF_NODE	175:37	175:37	9	read_dir_offset
LEAF_NODE	175:53	175:53	6	)
LEAF_NODE	175:54	175:54	4	;
SELECTION	176:1	176:37	3	
KEYWORD	176:1	176:1	4	if
LEAF_NODE	176:1	176:1	5	if
LEAF_NODE	176:3	176:3	4	(
CONDITION	176:5	176:5	4	read_dir_offset != dir_offset
EXPR	176:5	176:24	5	read_dir_offset != dir_offset
FIELD	176:5	176:5	6	read_dir_offset
LEAF_NODE	176:5	176:5	7	read_dir_offset
EQ_OPERATOR	176:21	176:21	6	!=
LEAF_NODE	176:21	176:21	7	!=
FIELD	176:24	176:24	6	dir_offset
LEAF_NODE	176:24	176:24	7	dir_offset
LEAF_NODE	176:35	176:35	4	)
STATEMENTS	176:37	179:1	4	
LEAF_NODE	176:37	176:37	5	{
STATEMENTS	177:2	178:2	5	
EXPR_STATEMENT	177:2	177:54	6	fprintf ( stderr , "Did not get expected EXIFIFD.\n" ) ;
EXPR	177:2	177:2	7	fprintf ( stderr , "Did not get expected EXIFIFD.\n" )
FUNCTION_CALL	177:2	177:53	8	fprintf ( stderr , "Did not get expected EXIFIFD.\n" )
CALLEE	177:2	177:2	9	fprintf
LEAF_NODE	177:2	177:2	10	fprintf
LEAF_NODE	177:10	177:10	9	(
ARGUMENT	177:11	177:11	9	stderr
FIELD	177:11	177:11	10	stderr
LEAF_NODE	177:11	177:11	11	stderr
LEAF_NODE	177:17	177:17	9	,
ARGUMENT	177:19	177:19	9	"Did not get expected EXIFIFD.\n"
FIELD	177:19	177:19	10	"Did not get expected EXIFIFD.\n"
LEAF_NODE	177:19	177:19	11	"Did not get expected EXIFIFD.\n"
LEAF_NODE	177:53	177:53	9	)
LEAF_NODE	177:54	177:54	7	;
JUMP_STATEMENT	178:2	178:14	6	goto failure ;
KEYWORD	178:2	178:2	7	goto
LEAF_NODE	178:2	178:2	8	goto
DESTINATION	178:7	178:7	7	failure
LEAF_NODE	178:7	178:7	8	failure
LEAF_NODE	178:14	178:14	7	;
LEAF_NODE	179:1	179:1	5	}
EXPR_STATEMENT	181:1	181:63	3	TIFFGetField ( tif , TIFFTAG_SUBIFD , & count16 , & dir_offset2_ptr ) ;
EXPR	181:1	181:1	4	TIFFGetField ( tif , TIFFTAG_SUBIFD , & count16 , & dir_offset2_ptr )
FUNCTION_CALL	181:1	181:62	5	TIFFGetField ( tif , TIFFTAG_SUBIFD , & count16 , & dir_offset2_ptr )
CALLEE	181:1	181:1	6	TIFFGetField
LEAF_NODE	181:1	181:1	7	TIFFGetField
LEAF_NODE	181:13	181:13	6	(
ARGUMENT	181:14	181:14	6	tif
FIELD	181:14	181:14	7	tif
LEAF_NODE	181:14	181:14	8	tif
LEAF_NODE	181:17	181:17	6	,
ARGUMENT	181:19	181:19	6	TIFFTAG_SUBIFD
FIELD	181:19	181:19	7	TIFFTAG_SUBIFD
LEAF_NODE	181:19	181:19	8	TIFFTAG_SUBIFD
LEAF_NODE	181:33	181:33	6	,
ARGUMENT	181:35	181:35	6	& count16
UNARY_EXPR	181:35	181:36	7	& count16
UNARY_OPERATOR	181:35	181:35	8	&
LEAF_NODE	181:35	181:35	9	&
FIELD	181:36	181:36	8	count16
LEAF_NODE	181:36	181:36	9	count16
LEAF_NODE	181:43	181:43	6	,
ARGUMENT	181:45	181:45	6	& dir_offset2_ptr
UNARY_EXPR	181:45	181:46	7	& dir_offset2_ptr
UNARY_OPERATOR	181:45	181:45	8	&
LEAF_NODE	181:45	181:45	9	&
FIELD	181:46	181:46	8	dir_offset2_ptr
LEAF_NODE	181:46	181:46	9	dir_offset2_ptr
LEAF_NODE	181:62	181:62	6	)
LEAF_NODE	181:63	181:63	4	;
EXPR_STATEMENT	182:1	182:38	3	read_dir_offset2 = dir_offset2_ptr [ 0 ] ;
EXPR	182:1	182:1	4	read_dir_offset2 = dir_offset2_ptr [ 0 ]
ASSIGN	182:1	182:20	5	read_dir_offset2 = dir_offset2_ptr [ 0 ]
LVAL	182:1	182:1	6	read_dir_offset2
FIELD	182:1	182:1	7	read_dir_offset2
LEAF_NODE	182:1	182:1	8	read_dir_offset2
ASSIGN_OP	182:18	182:18	6	=
LEAF_NODE	182:18	182:18	7	=
RVAL	182:20	182:20	6	dir_offset2_ptr [ 0 ]
FIELD	182:20	182:37	7	dir_offset2_ptr [ 0 ]
LEAF_NODE	182:20	182:20	8	dir_offset2_ptr
LEAF_NODE	182:35	182:35	8	[
EXPR	182:36	182:36	8	0
FIELD	182:36	182:36	9	0
LEAF_NODE	182:36	182:36	10	0
LEAF_NODE	182:37	182:37	8	]
LEAF_NODE	182:38	182:38	4	;
SELECTION	183:1	183:54	3	
KEYWORD	183:1	183:1	4	if
LEAF_NODE	183:1	183:1	5	if
LEAF_NODE	183:3	183:3	4	(
CONDITION	183:5	183:5	4	read_dir_offset2 != dir_offset2 || count16 != 1
EXPR	183:5	183:5	5	read_dir_offset2 != dir_offset2 || count16 != 1
OR	183:5	183:40	6	read_dir_offset2 != dir_offset2 || count16 != 1
EXPR	183:5	183:25	7	read_dir_offset2 != dir_offset2
FIELD	183:5	183:5	8	read_dir_offset2
LEAF_NODE	183:5	183:5	9	read_dir_offset2
EQ_OPERATOR	183:22	183:22	8	!=
LEAF_NODE	183:22	183:22	9	!=
FIELD	183:25	183:25	8	dir_offset2
LEAF_NODE	183:25	183:25	9	dir_offset2
LEAF_NODE	183:37	183:37	7	||
EXPR	183:40	183:51	7	count16 != 1
FIELD	183:40	183:40	8	count16
LEAF_NODE	183:40	183:40	9	count16
EQ_OPERATOR	183:48	183:48	8	!=
LEAF_NODE	183:48	183:48	9	!=
FIELD	183:51	183:51	8	1
LEAF_NODE	183:51	183:51	9	1
LEAF_NODE	183:52	183:52	4	)
STATEMENTS	183:54	186:1	4	
LEAF_NODE	183:54	183:54	5	{
STATEMENTS	184:2	185:2	5	
EXPR_STATEMENT	184:2	184:53	6	fprintf ( stderr , "Did not get expected SUBIFD.\n" ) ;
EXPR	184:2	184:2	7	fprintf ( stderr , "Did not get expected SUBIFD.\n" )
FUNCTION_CALL	184:2	184:52	8	fprintf ( stderr , "Did not get expected SUBIFD.\n" )
CALLEE	184:2	184:2	9	fprintf
LEAF_NODE	184:2	184:2	10	fprintf
LEAF_NODE	184:10	184:10	9	(
ARGUMENT	184:11	184:11	9	stderr
FIELD	184:11	184:11	10	stderr
LEAF_NODE	184:11	184:11	11	stderr
LEAF_NODE	184:17	184:17	9	,
ARGUMENT	184:19	184:19	9	"Did not get expected SUBIFD.\n"
FIELD	184:19	184:19	10	"Did not get expected SUBIFD.\n"
LEAF_NODE	184:19	184:19	11	"Did not get expected SUBIFD.\n"
LEAF_NODE	184:52	184:52	9	)
LEAF_NODE	184:53	184:53	7	;
JUMP_STATEMENT	185:2	185:14	6	goto failure ;
KEYWORD	185:2	185:2	7	goto
LEAF_NODE	185:2	185:2	8	goto
DESTINATION	185:7	185:7	7	failure
LEAF_NODE	185:7	185:7	8	failure
LEAF_NODE	185:14	185:14	7	;
LEAF_NODE	186:1	186:1	5	}
SELECTION	188:1	188:52	3	
KEYWORD	188:1	188:1	4	if
LEAF_NODE	188:1	188:1	5	if
LEAF_NODE	188:3	188:3	4	(
CONDITION	188:5	188:5	4	! TIFFReadEXIFDirectory ( tif , read_dir_offset )
EXPR	188:5	188:5	5	! TIFFReadEXIFDirectory ( tif , read_dir_offset )
UNARY_EXPR	188:5	188:6	6	! TIFFReadEXIFDirectory ( tif , read_dir_offset )
UNARY_OPERATOR	188:5	188:5	7	!
LEAF_NODE	188:5	188:5	8	!
FUNCTION_CALL	188:6	188:48	7	TIFFReadEXIFDirectory ( tif , read_dir_offset )
CALLEE	188:6	188:6	8	TIFFReadEXIFDirectory
LEAF_NODE	188:6	188:6	9	TIFFReadEXIFDirectory
LEAF_NODE	188:27	188:27	8	(
ARGUMENT	188:28	188:28	8	tif
FIELD	188:28	188:28	9	tif
LEAF_NODE	188:28	188:28	10	tif
LEAF_NODE	188:31	188:31	8	,
ARGUMENT	188:33	188:33	8	read_dir_offset
FIELD	188:33	188:33	9	read_dir_offset
LEAF_NODE	188:33	188:33	10	read_dir_offset
LEAF_NODE	188:48	188:48	8	)
LEAF_NODE	188:50	188:50	4	)
STATEMENTS	188:52	191:1	4	
LEAF_NODE	188:52	188:52	5	{
STATEMENTS	189:2	190:2	5	
EXPR_STATEMENT	189:2	189:56	6	fprintf ( stderr , "TIFFReadEXIFDirectory() failed.\n" ) ;
EXPR	189:2	189:2	7	fprintf ( stderr , "TIFFReadEXIFDirectory() failed.\n" )
FUNCTION_CALL	189:2	189:55	8	fprintf ( stderr , "TIFFReadEXIFDirectory() failed.\n" )
CALLEE	189:2	189:2	9	fprintf
LEAF_NODE	189:2	189:2	10	fprintf
LEAF_NODE	189:10	189:10	9	(
ARGUMENT	189:11	189:11	9	stderr
FIELD	189:11	189:11	10	stderr
LEAF_NODE	189:11	189:11	11	stderr
LEAF_NODE	189:17	189:17	9	,
ARGUMENT	189:19	189:19	9	"TIFFReadEXIFDirectory() failed.\n"
FIELD	189:19	189:19	10	"TIFFReadEXIFDirectory() failed.\n"
LEAF_NODE	189:19	189:19	11	"TIFFReadEXIFDirectory() failed.\n"
LEAF_NODE	189:55	189:55	9	)
LEAF_NODE	189:56	189:56	7	;
JUMP_STATEMENT	190:2	190:14	6	goto failure ;
KEYWORD	190:2	190:2	7	goto
LEAF_NODE	190:2	190:2	8	goto
DESTINATION	190:7	190:7	7	failure
LEAF_NODE	190:7	190:7	8	failure
LEAF_NODE	190:14	190:14	7	;
LEAF_NODE	191:1	191:1	5	}
SELECTION	193:1	193:70	3	
KEYWORD	193:1	193:1	4	if
LEAF_NODE	193:1	193:1	5	if
LEAF_NODE	193:4	193:4	4	(
CONDITION	193:5	193:5	4	! TIFFGetField ( tif , EXIFTAG_SPECTRALSENSITIVITY , & ascii_value )
EXPR	193:5	193:5	5	! TIFFGetField ( tif , EXIFTAG_SPECTRALSENSITIVITY , & ascii_value )
UNARY_EXPR	193:5	193:6	6	! TIFFGetField ( tif , EXIFTAG_SPECTRALSENSITIVITY , & ascii_value )
UNARY_OPERATOR	193:5	193:5	7	!
LEAF_NODE	193:5	193:5	8	!
FUNCTION_CALL	193:6	193:66	7	TIFFGetField ( tif , EXIFTAG_SPECTRALSENSITIVITY , & ascii_value )
CALLEE	193:6	193:6	8	TIFFGetField
LEAF_NODE	193:6	193:6	9	TIFFGetField
LEAF_NODE	193:18	193:18	8	(
ARGUMENT	193:20	193:20	8	tif
FIELD	193:20	193:20	9	tif
LEAF_NODE	193:20	193:20	10	tif
LEAF_NODE	193:23	193:23	8	,
ARGUMENT	193:25	193:25	8	EXIFTAG_SPECTRALSENSITIVITY
FIELD	193:25	193:25	9	EXIFTAG_SPECTRALSENSITIVITY
LEAF_NODE	193:25	193:25	10	EXIFTAG_SPECTRALSENSITIVITY
LEAF_NODE	193:52	193:52	8	,
ARGUMENT	193:54	193:54	8	& ascii_value
UNARY_EXPR	193:54	193:55	9	& ascii_value
UNARY_OPERATOR	193:54	193:54	10	&
LEAF_NODE	193:54	193:54	11	&
FIELD	193:55	193:55	10	ascii_value
LEAF_NODE	193:55	193:55	11	ascii_value
LEAF_NODE	193:66	193:66	8	)
LEAF_NODE	193:68	193:68	4	)
STATEMENTS	193:70	196:1	4	
LEAF_NODE	193:70	193:70	5	{
STATEMENTS	194:2	195:2	5	
EXPR_STATEMENT	194:2	194:60	6	fprintf ( stderr , "reading SPECTRALSENSITIVITY failed.\n" ) ;
EXPR	194:2	194:2	7	fprintf ( stderr , "reading SPECTRALSENSITIVITY failed.\n" )
FUNCTION_CALL	194:2	194:59	8	fprintf ( stderr , "reading SPECTRALSENSITIVITY failed.\n" )
CALLEE	194:2	194:2	9	fprintf
LEAF_NODE	194:2	194:2	10	fprintf
LEAF_NODE	194:10	194:10	9	(
ARGUMENT	194:11	194:11	9	stderr
FIELD	194:11	194:11	10	stderr
LEAF_NODE	194:11	194:11	11	stderr
LEAF_NODE	194:17	194:17	9	,
ARGUMENT	194:19	194:19	9	"reading SPECTRALSENSITIVITY failed.\n"
FIELD	194:19	194:19	10	"reading SPECTRALSENSITIVITY failed.\n"
LEAF_NODE	194:19	194:19	11	"reading SPECTRALSENSITIVITY failed.\n"
LEAF_NODE	194:59	194:59	9	)
LEAF_NODE	194:60	194:60	7	;
JUMP_STATEMENT	195:2	195:14	6	goto failure ;
KEYWORD	195:2	195:2	7	goto
LEAF_NODE	195:2	195:2	8	goto
DESTINATION	195:7	195:7	7	failure
LEAF_NODE	195:7	195:7	8	failure
LEAF_NODE	195:14	195:14	7	;
LEAF_NODE	196:1	196:1	5	}
SELECTION	198:1	198:59	3	
KEYWORD	198:1	198:1	4	if
LEAF_NODE	198:1	198:1	5	if
LEAF_NODE	198:3	198:3	4	(
CONDITION	198:5	198:5	4	strcmp ( ascii_value , "EXIF Spectral Sensitivity" ) != 0
EXPR	198:5	198:56	5	strcmp ( ascii_value , "EXIF Spectral Sensitivity" ) != 0
FUNCTION_CALL	198:5	198:51	6	strcmp ( ascii_value , "EXIF Spectral Sensitivity" )
CALLEE	198:5	198:5	7	strcmp
LEAF_NODE	198:5	198:5	8	strcmp
LEAF_NODE	198:11	198:11	7	(
ARGUMENT	198:12	198:12	7	ascii_value
FIELD	198:12	198:12	8	ascii_value
LEAF_NODE	198:12	198:12	9	ascii_value
LEAF_NODE	198:23	198:23	7	,
ARGUMENT	198:24	198:24	7	"EXIF Spectral Sensitivity"
FIELD	198:24	198:24	8	"EXIF Spectral Sensitivity"
LEAF_NODE	198:24	198:24	9	"EXIF Spectral Sensitivity"
LEAF_NODE	198:51	198:51	7	)
EQ_OPERATOR	198:53	198:53	6	!=
LEAF_NODE	198:53	198:53	7	!=
FIELD	198:56	198:56	6	0
LEAF_NODE	198:56	198:56	7	0
LEAF_NODE	198:57	198:57	4	)
STATEMENTS	198:59	201:1	4	
LEAF_NODE	198:59	198:59	5	{
STATEMENTS	199:2	200:2	5	
EXPR_STATEMENT	199:2	199:61	6	fprintf ( stderr , "got wrong SPECTRALSENSITIVITY value.\n" ) ;
EXPR	199:2	199:2	7	fprintf ( stderr , "got wrong SPECTRALSENSITIVITY value.\n" )
FUNCTION_CALL	199:2	199:60	8	fprintf ( stderr , "got wrong SPECTRALSENSITIVITY value.\n" )
CALLEE	199:2	199:2	9	fprintf
LEAF_NODE	199:2	199:2	10	fprintf
LEAF_NODE	199:10	199:10	9	(
ARGUMENT	199:11	199:11	9	stderr
FIELD	199:11	199:11	10	stderr
LEAF_NODE	199:11	199:11	11	stderr
LEAF_NODE	199:17	199:17	9	,
ARGUMENT	199:19	199:19	9	"got wrong SPECTRALSENSITIVITY value.\n"
FIELD	199:19	199:19	10	"got wrong SPECTRALSENSITIVITY value.\n"
LEAF_NODE	199:19	199:19	11	"got wrong SPECTRALSENSITIVITY value.\n"
LEAF_NODE	199:60	199:60	9	)
LEAF_NODE	199:61	199:61	7	;
JUMP_STATEMENT	200:2	200:14	6	goto failure ;
KEYWORD	200:2	200:2	7	goto
LEAF_NODE	200:2	200:2	8	goto
DESTINATION	200:7	200:7	7	failure
LEAF_NODE	200:7	200:7	8	failure
LEAF_NODE	200:14	200:14	7	;
LEAF_NODE	201:1	201:1	5	}
SELECTION	205:1	205:74	3	
KEYWORD	205:1	205:1	4	if
LEAF_NODE	205:1	205:1	5	if
LEAF_NODE	205:3	205:3	4	(
CONDITION	205:5	205:5	4	! TIFFReadCustomDirectory ( tif , read_dir_offset2 , & customFieldArray )
EXPR	205:5	205:5	5	! TIFFReadCustomDirectory ( tif , read_dir_offset2 , & customFieldArray )
UNARY_EXPR	205:5	205:6	6	! TIFFReadCustomDirectory ( tif , read_dir_offset2 , & customFieldArray )
UNARY_OPERATOR	205:5	205:5	7	!
LEAF_NODE	205:5	205:5	8	!
FUNCTION_CALL	205:6	205:70	7	TIFFReadCustomDirectory ( tif , read_dir_offset2 , & customFieldArray )
CALLEE	205:6	205:6	8	TIFFReadCustomDirectory
LEAF_NODE	205:6	205:6	9	TIFFReadCustomDirectory
LEAF_NODE	205:29	205:29	8	(
ARGUMENT	205:30	205:30	8	tif
FIELD	205:30	205:30	9	tif
LEAF_NODE	205:30	205:30	10	tif
LEAF_NODE	205:33	205:33	8	,
ARGUMENT	205:35	205:35	8	read_dir_offset2
FIELD	205:35	205:35	9	read_dir_offset2
LEAF_NODE	205:35	205:35	10	read_dir_offset2
LEAF_NODE	205:51	205:51	8	,
ARGUMENT	205:53	205:53	8	& customFieldArray
UNARY_EXPR	205:53	205:54	9	& customFieldArray
UNARY_OPERATOR	205:53	205:53	10	&
LEAF_NODE	205:53	205:53	11	&
FIELD	205:54	205:54	10	customFieldArray
LEAF_NODE	205:54	205:54	11	customFieldArray
LEAF_NODE	205:70	205:70	8	)
LEAF_NODE	205:72	205:72	4	)
STATEMENTS	205:74	208:1	4	
LEAF_NODE	205:74	205:74	5	{
STATEMENTS	206:2	207:2	5	
EXPR_STATEMENT	206:2	206:58	6	fprintf ( stderr , "TIFFReadCustomDirectory() failed.\n" ) ;
EXPR	206:2	206:2	7	fprintf ( stderr , "TIFFReadCustomDirectory() failed.\n" )
FUNCTION_CALL	206:2	206:57	8	fprintf ( stderr , "TIFFReadCustomDirectory() failed.\n" )
CALLEE	206:2	206:2	9	fprintf
LEAF_NODE	206:2	206:2	10	fprintf
LEAF_NODE	206:10	206:10	9	(
ARGUMENT	206:11	206:11	9	stderr
FIELD	206:11	206:11	10	stderr
LEAF_NODE	206:11	206:11	11	stderr
LEAF_NODE	206:17	206:17	9	,
ARGUMENT	206:19	206:19	9	"TIFFReadCustomDirectory() failed.\n"
FIELD	206:19	206:19	10	"TIFFReadCustomDirectory() failed.\n"
LEAF_NODE	206:19	206:19	11	"TIFFReadCustomDirectory() failed.\n"
LEAF_NODE	206:57	206:57	9	)
LEAF_NODE	206:58	206:58	7	;
JUMP_STATEMENT	207:2	207:14	6	goto failure ;
KEYWORD	207:2	207:2	7	goto
LEAF_NODE	207:2	207:2	8	goto
DESTINATION	207:7	207:7	7	failure
LEAF_NODE	207:7	207:7	8	failure
LEAF_NODE	207:14	207:14	7	;
LEAF_NODE	208:1	208:1	5	}
SELECTION	210:1	210:61	3	
KEYWORD	210:1	210:1	4	if
LEAF_NODE	210:1	210:1	5	if
LEAF_NODE	210:4	210:4	4	(
CONDITION	210:5	210:5	4	! TIFFGetField ( tif , TIFFTAG_IMAGEWIDTH , & ascii_value )
EXPR	210:5	210:5	5	! TIFFGetField ( tif , TIFFTAG_IMAGEWIDTH , & ascii_value )
UNARY_EXPR	210:5	210:6	6	! TIFFGetField ( tif , TIFFTAG_IMAGEWIDTH , & ascii_value )
UNARY_OPERATOR	210:5	210:5	7	!
LEAF_NODE	210:5	210:5	8	!
FUNCTION_CALL	210:6	210:57	7	TIFFGetField ( tif , TIFFTAG_IMAGEWIDTH , & ascii_value )
CALLEE	210:6	210:6	8	TIFFGetField
LEAF_NODE	210:6	210:6	9	TIFFGetField
LEAF_NODE	210:18	210:18	8	(
ARGUMENT	210:20	210:20	8	tif
FIELD	210:20	210:20	9	tif
LEAF_NODE	210:20	210:20	10	tif
LEAF_NODE	210:23	210:23	8	,
ARGUMENT	210:25	210:25	8	TIFFTAG_IMAGEWIDTH
FIELD	210:25	210:25	9	TIFFTAG_IMAGEWIDTH
LEAF_NODE	210:25	210:25	10	TIFFTAG_IMAGEWIDTH
LEAF_NODE	210:43	210:43	8	,
ARGUMENT	210:45	210:45	8	& ascii_value
UNARY_EXPR	210:45	210:46	9	& ascii_value
UNARY_OPERATOR	210:45	210:45	10	&
LEAF_NODE	210:45	210:45	11	&
FIELD	210:46	210:46	10	ascii_value
LEAF_NODE	210:46	210:46	11	ascii_value
LEAF_NODE	210:57	210:57	8	)
LEAF_NODE	210:59	210:59	4	)
STATEMENTS	210:61	213:1	4	
LEAF_NODE	210:61	210:61	5	{
STATEMENTS	211:2	212:2	5	
EXPR_STATEMENT	211:2	211:58	6	fprintf ( stderr , "reading pseudo-IMAGEWIDTH failed.\n" ) ;
EXPR	211:2	211:2	7	fprintf ( stderr , "reading pseudo-IMAGEWIDTH failed.\n" )
FUNCTION_CALL	211:2	211:57	8	fprintf ( stderr , "reading pseudo-IMAGEWIDTH failed.\n" )
CALLEE	211:2	211:2	9	fprintf
LEAF_NODE	211:2	211:2	10	fprintf
LEAF_NODE	211:10	211:10	9	(
ARGUMENT	211:11	211:11	9	stderr
FIELD	211:11	211:11	10	stderr
LEAF_NODE	211:11	211:11	11	stderr
LEAF_NODE	211:17	211:17	9	,
ARGUMENT	211:19	211:19	9	"reading pseudo-IMAGEWIDTH failed.\n"
FIELD	211:19	211:19	10	"reading pseudo-IMAGEWIDTH failed.\n"
LEAF_NODE	211:19	211:19	11	"reading pseudo-IMAGEWIDTH failed.\n"
LEAF_NODE	211:57	211:57	9	)
LEAF_NODE	211:58	211:58	7	;
JUMP_STATEMENT	212:2	212:14	6	goto failure ;
KEYWORD	212:2	212:2	7	goto
LEAF_NODE	212:2	212:2	8	goto
DESTINATION	212:7	212:7	7	failure
LEAF_NODE	212:7	212:7	8	failure
LEAF_NODE	212:14	212:14	7	;
LEAF_NODE	213:1	213:1	5	}
SELECTION	215:1	215:42	3	
KEYWORD	215:1	215:1	4	if
LEAF_NODE	215:1	215:1	5	if
LEAF_NODE	215:3	215:3	4	(
CONDITION	215:5	215:5	4	strcmp ( ascii_value , "*Custom1" ) != 0
EXPR	215:5	215:39	5	strcmp ( ascii_value , "*Custom1" ) != 0
FUNCTION_CALL	215:5	215:34	6	strcmp ( ascii_value , "*Custom1" )
CALLEE	215:5	215:5	7	strcmp
LEAF_NODE	215:5	215:5	8	strcmp
LEAF_NODE	215:11	215:11	7	(
ARGUMENT	215:12	215:12	7	ascii_value
FIELD	215:12	215:12	8	ascii_value
LEAF_NODE	215:12	215:12	9	ascii_value
LEAF_NODE	215:23	215:23	7	,
ARGUMENT	215:24	215:24	7	"*Custom1"
FIELD	215:24	215:24	8	"*Custom1"
LEAF_NODE	215:24	215:24	9	"*Custom1"
LEAF_NODE	215:34	215:34	7	)
EQ_OPERATOR	215:36	215:36	6	!=
LEAF_NODE	215:36	215:36	7	!=
FIELD	215:39	215:39	6	0
LEAF_NODE	215:39	215:39	7	0
LEAF_NODE	215:40	215:40	4	)
STATEMENTS	215:42	218:1	4	
LEAF_NODE	215:42	215:42	5	{
STATEMENTS	216:2	217:2	5	
EXPR_STATEMENT	216:2	216:59	6	fprintf ( stderr , "got wrong pseudo-IMAGEWIDTH value.\n" ) ;
EXPR	216:2	216:2	7	fprintf ( stderr , "got wrong pseudo-IMAGEWIDTH value.\n" )
FUNCTION_CALL	216:2	216:58	8	fprintf ( stderr , "got wrong pseudo-IMAGEWIDTH value.\n" )
CALLEE	216:2	216:2	9	fprintf
LEAF_NODE	216:2	216:2	10	fprintf
LEAF_NODE	216:10	216:10	9	(
ARGUMENT	216:11	216:11	9	stderr
FIELD	216:11	216:11	10	stderr
LEAF_NODE	216:11	216:11	11	stderr
LEAF_NODE	216:17	216:17	9	,
ARGUMENT	216:19	216:19	9	"got wrong pseudo-IMAGEWIDTH value.\n"
FIELD	216:19	216:19	10	"got wrong pseudo-IMAGEWIDTH value.\n"
LEAF_NODE	216:19	216:19	11	"got wrong pseudo-IMAGEWIDTH value.\n"
LEAF_NODE	216:58	216:58	9	)
LEAF_NODE	216:59	216:59	7	;
JUMP_STATEMENT	217:2	217:14	6	goto failure ;
KEYWORD	217:2	217:2	7	goto
LEAF_NODE	217:2	217:2	8	goto
DESTINATION	217:7	217:7	7	failure
LEAF_NODE	217:7	217:7	8	failure
LEAF_NODE	217:14	217:14	7	;
LEAF_NODE	218:1	218:1	5	}
SELECTION	220:1	220:59	3	
KEYWORD	220:1	220:1	4	if
LEAF_NODE	220:1	220:1	5	if
LEAF_NODE	220:4	220:4	4	(
CONDITION	220:5	220:5	4	! TIFFGetField ( tif , TIFFTAG_DOTRANGE , & ascii_value )
EXPR	220:5	220:5	5	! TIFFGetField ( tif , TIFFTAG_DOTRANGE , & ascii_value )
UNARY_EXPR	220:5	220:6	6	! TIFFGetField ( tif , TIFFTAG_DOTRANGE , & ascii_value )
UNARY_OPERATOR	220:5	220:5	7	!
LEAF_NODE	220:5	220:5	8	!
FUNCTION_CALL	220:6	220:55	7	TIFFGetField ( tif , TIFFTAG_DOTRANGE , & ascii_value )
CALLEE	220:6	220:6	8	TIFFGetField
LEAF_NODE	220:6	220:6	9	TIFFGetField
LEAF_NODE	220:18	220:18	8	(
ARGUMENT	220:20	220:20	8	tif
FIELD	220:20	220:20	9	tif
LEAF_NODE	220:20	220:20	10	tif
LEAF_NODE	220:23	220:23	8	,
ARGUMENT	220:25	220:25	8	TIFFTAG_DOTRANGE
FIELD	220:25	220:25	9	TIFFTAG_DOTRANGE
LEAF_NODE	220:25	220:25	10	TIFFTAG_DOTRANGE
LEAF_NODE	220:41	220:41	8	,
ARGUMENT	220:43	220:43	8	& ascii_value
UNARY_EXPR	220:43	220:44	9	& ascii_value
UNARY_OPERATOR	220:43	220:43	10	&
LEAF_NODE	220:43	220:43	11	&
FIELD	220:44	220:44	10	ascii_value
LEAF_NODE	220:44	220:44	11	ascii_value
LEAF_NODE	220:55	220:55	8	)
LEAF_NODE	220:57	220:57	4	)
STATEMENTS	220:59	223:1	4	
LEAF_NODE	220:59	220:59	5	{
STATEMENTS	221:2	222:2	5	
EXPR_STATEMENT	221:2	221:56	6	fprintf ( stderr , "reading pseudo-DOTRANGE failed.\n" ) ;
EXPR	221:2	221:2	7	fprintf ( stderr , "reading pseudo-DOTRANGE failed.\n" )
FUNCTION_CALL	221:2	221:55	8	fprintf ( stderr , "reading pseudo-DOTRANGE failed.\n" )
CALLEE	221:2	221:2	9	fprintf
LEAF_NODE	221:2	221:2	10	fprintf
LEAF_NODE	221:10	221:10	9	(
ARGUMENT	221:11	221:11	9	stderr
FIELD	221:11	221:11	10	stderr
LEAF_NODE	221:11	221:11	11	stderr
LEAF_NODE	221:17	221:17	9	,
ARGUMENT	221:19	221:19	9	"reading pseudo-DOTRANGE failed.\n"
FIELD	221:19	221:19	10	"reading pseudo-DOTRANGE failed.\n"
LEAF_NODE	221:19	221:19	11	"reading pseudo-DOTRANGE failed.\n"
LEAF_NODE	221:55	221:55	9	)
LEAF_NODE	221:56	221:56	7	;
JUMP_STATEMENT	222:2	222:14	6	goto failure ;
KEYWORD	222:2	222:2	7	goto
LEAF_NODE	222:2	222:2	8	goto
DESTINATION	222:7	222:7	7	failure
LEAF_NODE	222:7	222:7	8	failure
LEAF_NODE	222:14	222:14	7	;
LEAF_NODE	223:1	223:1	5	}
SELECTION	225:1	225:42	3	
KEYWORD	225:1	225:1	4	if
LEAF_NODE	225:1	225:1	5	if
LEAF_NODE	225:3	225:3	4	(
CONDITION	225:5	225:5	4	strcmp ( ascii_value , "*Custom2" ) != 0
EXPR	225:5	225:39	5	strcmp ( ascii_value , "*Custom2" ) != 0
FUNCTION_CALL	225:5	225:34	6	strcmp ( ascii_value , "*Custom2" )
CALLEE	225:5	225:5	7	strcmp
LEAF_NODE	225:5	225:5	8	strcmp
LEAF_NODE	225:11	225:11	7	(
ARGUMENT	225:12	225:12	7	ascii_value
FIELD	225:12	225:12	8	ascii_value
LEAF_NODE	225:12	225:12	9	ascii_value
LEAF_NODE	225:23	225:23	7	,
ARGUMENT	225:24	225:24	7	"*Custom2"
FIELD	225:24	225:24	8	"*Custom2"
LEAF_NODE	225:24	225:24	9	"*Custom2"
LEAF_NODE	225:34	225:34	7	)
EQ_OPERATOR	225:36	225:36	6	!=
LEAF_NODE	225:36	225:36	7	!=
FIELD	225:39	225:39	6	0
LEAF_NODE	225:39	225:39	7	0
LEAF_NODE	225:40	225:40	4	)
STATEMENTS	225:42	228:1	4	
LEAF_NODE	225:42	225:42	5	{
STATEMENTS	226:2	227:2	5	
EXPR_STATEMENT	226:2	226:57	6	fprintf ( stderr , "got wrong pseudo-DOTRANGE value.\n" ) ;
EXPR	226:2	226:2	7	fprintf ( stderr , "got wrong pseudo-DOTRANGE value.\n" )
FUNCTION_CALL	226:2	226:56	8	fprintf ( stderr , "got wrong pseudo-DOTRANGE value.\n" )
CALLEE	226:2	226:2	9	fprintf
LEAF_NODE	226:2	226:2	10	fprintf
LEAF_NODE	226:10	226:10	9	(
ARGUMENT	226:11	226:11	9	stderr
FIELD	226:11	226:11	10	stderr
LEAF_NODE	226:11	226:11	11	stderr
LEAF_NODE	226:17	226:17	9	,
ARGUMENT	226:19	226:19	9	"got wrong pseudo-DOTRANGE value.\n"
FIELD	226:19	226:19	10	"got wrong pseudo-DOTRANGE value.\n"
LEAF_NODE	226:19	226:19	11	"got wrong pseudo-DOTRANGE value.\n"
LEAF_NODE	226:56	226:56	9	)
LEAF_NODE	226:57	226:57	7	;
JUMP_STATEMENT	227:2	227:14	6	goto failure ;
KEYWORD	227:2	227:2	7	goto
LEAF_NODE	227:2	227:2	8	goto
DESTINATION	227:7	227:7	7	failure
LEAF_NODE	227:7	227:7	8	failure
LEAF_NODE	227:14	227:14	7	;
LEAF_NODE	228:1	228:1	5	}
EXPR_STATEMENT	230:1	230:15	3	TIFFClose ( tif ) ;
EXPR	230:1	230:1	4	TIFFClose ( tif )
FUNCTION_CALL	230:1	230:14	5	TIFFClose ( tif )
CALLEE	230:1	230:1	6	TIFFClose
LEAF_NODE	230:1	230:1	7	TIFFClose
LEAF_NODE	230:10	230:10	6	(
ARGUMENT	230:11	230:11	6	tif
FIELD	230:11	230:11	7	tif
LEAF_NODE	230:11	230:11	8	tif
LEAF_NODE	230:14	230:14	6	)
LEAF_NODE	230:15	230:15	4	;
EXPR_STATEMENT	233:1	233:17	3	unlink ( filename ) ;
EXPR	233:1	233:1	4	unlink ( filename )
FUNCTION_CALL	233:1	233:16	5	unlink ( filename )
CALLEE	233:1	233:1	6	unlink
LEAF_NODE	233:1	233:1	7	unlink
LEAF_NODE	233:7	233:7	6	(
ARGUMENT	233:8	233:8	6	filename
FIELD	233:8	233:8	7	filename
LEAF_NODE	233:8	233:8	8	filename
LEAF_NODE	233:16	233:16	6	)
LEAF_NODE	233:17	233:17	4	;
JUMP_STATEMENT	234:1	234:9	3	return 0 ;
KEYWORD	234:1	234:1	4	return
LEAF_NODE	234:1	234:1	5	return
DESTINATION	234:8	234:8	4	0
EXPR	234:8	234:8	5	0
FIELD	234:8	234:8	6	0
LEAF_NODE	234:8	234:8	7	0
LEAF_NODE	234:9	234:9	4	;
LABEL	236:0	236:7	3	failure :
LEAF_NODE	236:0	236:0	4	failure
LEAF_NODE	236:7	236:7	4	:
EXPR_STATEMENT	241:1	241:15	3	TIFFClose ( tif ) ;
EXPR	241:1	241:1	4	TIFFClose ( tif )
FUNCTION_CALL	241:1	241:14	5	TIFFClose ( tif )
CALLEE	241:1	241:1	6	TIFFClose
LEAF_NODE	241:1	241:1	7	TIFFClose
LEAF_NODE	241:10	241:10	6	(
ARGUMENT	241:11	241:11	6	tif
FIELD	241:11	241:11	7	tif
LEAF_NODE	241:11	241:11	8	tif
LEAF_NODE	241:14	241:14	6	)
LEAF_NODE	241:15	241:15	4	;
JUMP_STATEMENT	242:1	242:9	3	return 1 ;
KEYWORD	242:1	242:1	4	return
LEAF_NODE	242:1	242:1	5	return
DESTINATION	242:8	242:8	4	1
EXPR	242:8	242:8	5	1
FIELD	242:8	242:8	6	1
LEAF_NODE	242:8	242:8	7	1
LEAF_NODE	242:9	242:9	4	;
LEAF_NODE	243:0	243:0	2	}
