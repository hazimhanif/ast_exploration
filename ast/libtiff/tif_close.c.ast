SOURCE_FILE	44:0	120:0	0	
FUNCTION_DEF	44:0	104:0	1	
RETURN_TYPE	44:0	44:0	2	void
TYPE_NAME	44:0	44:0	3	void
LEAF_NODE	44:0	44:0	4	void
FUNCTION_NAME	45:0	45:0	2	TIFFCleanup
LEAF_NODE	45:0	45:0	3	TIFFCleanup
PARAMETER_LIST	45:11	45:21	2	( TIFF * tif )
LEAF_NODE	45:11	45:11	3	(
PARAMETER_DECL	45:12	45:18	3	TIFF * tif
TYPE	45:12	45:16	4	TIFF *
TYPE_NAME	45:12	45:12	5	TIFF
LEAF_NODE	45:12	45:12	6	TIFF
POINTER	45:16	45:16	5	*
LEAF_NODE	45:16	45:16	6	*
NAME	45:18	45:18	4	tif
LEAF_NODE	45:18	45:18	5	tif
LEAF_NODE	45:21	45:21	3	)
LEAF_NODE	46:0	46:0	2	{
STATEMENTS	50:1	103:1	2	
SELECTION	50:1	51:2	3	
KEYWORD	50:1	50:1	4	if
LEAF_NODE	50:1	50:1	5	if
LEAF_NODE	50:4	50:4	4	(
CONDITION	50:5	50:5	4	tif -> tif_mode != O_RDONLY
EXPR	50:5	50:22	5	tif -> tif_mode != O_RDONLY
FIELD	50:5	50:10	6	tif -> tif_mode
LEAF_NODE	50:5	50:5	7	tif
LEAF_NODE	50:8	50:8	7	->
LEAF_NODE	50:10	50:10	7	tif_mode
EQ_OPERATOR	50:19	50:19	6	!=
LEAF_NODE	50:19	50:19	7	!=
FIELD	50:22	50:22	6	O_RDONLY
LEAF_NODE	50:22	50:22	7	O_RDONLY
LEAF_NODE	50:30	50:30	4	)
STATEMENTS	51:2	51:2	4	
EXPR_STATEMENT	51:2	51:16	5	TIFFFlush ( tif ) ;
EXPR	51:2	51:2	6	TIFFFlush ( tif )
FUNCTION_CALL	51:2	51:15	7	TIFFFlush ( tif )
CALLEE	51:2	51:2	8	TIFFFlush
LEAF_NODE	51:2	51:2	9	TIFFFlush
LEAF_NODE	51:11	51:11	8	(
ARGUMENT	51:12	51:12	8	tif
FIELD	51:12	51:12	9	tif
LEAF_NODE	51:12	51:12	10	tif
LEAF_NODE	51:15	51:15	8	)
LEAF_NODE	51:16	51:16	6	;
EXPR_STATEMENT	52:1	52:25	3	( * tif -> tif_cleanup ) ( tif ) ;
EXPR	52:1	52:1	4	( * tif -> tif_cleanup ) ( tif )
FUNCTION_CALL	52:1	52:24	5	( * tif -> tif_cleanup ) ( tif )
CALLEE	52:1	52:19	6	( * tif -> tif_cleanup )
LEAF_NODE	52:1	52:1	7	(
UNARY_EXPR	52:2	52:3	7	* tif -> tif_cleanup
UNARY_OPERATOR	52:2	52:2	8	*
LEAF_NODE	52:2	52:2	9	*
FIELD	52:3	52:8	8	tif -> tif_cleanup
LEAF_NODE	52:3	52:3	9	tif
LEAF_NODE	52:6	52:6	9	->
LEAF_NODE	52:8	52:8	9	tif_cleanup
LEAF_NODE	52:19	52:19	7	)
LEAF_NODE	52:20	52:20	6	(
ARGUMENT	52:21	52:21	6	tif
FIELD	52:21	52:21	7	tif
LEAF_NODE	52:21	52:21	8	tif
LEAF_NODE	52:24	52:24	6	)
LEAF_NODE	52:25	52:25	4	;
EXPR_STATEMENT	53:1	53:23	3	TIFFFreeDirectory ( tif ) ;
EXPR	53:1	53:1	4	TIFFFreeDirectory ( tif )
FUNCTION_CALL	53:1	53:22	5	TIFFFreeDirectory ( tif )
CALLEE	53:1	53:1	6	TIFFFreeDirectory
LEAF_NODE	53:1	53:1	7	TIFFFreeDirectory
LEAF_NODE	53:18	53:18	6	(
ARGUMENT	53:19	53:19	6	tif
FIELD	53:19	53:19	7	tif
LEAF_NODE	53:19	53:19	8	tif
LEAF_NODE	53:22	53:22	6	)
LEAF_NODE	53:23	53:23	4	;
SELECTION	55:1	56:2	3	
KEYWORD	55:1	55:1	4	if
LEAF_NODE	55:1	55:1	5	if
LEAF_NODE	55:4	55:4	4	(
CONDITION	55:5	55:5	4	tif -> tif_dirlist
EXPR	55:5	55:5	5	tif -> tif_dirlist
FIELD	55:5	55:10	6	tif -> tif_dirlist
LEAF_NODE	55:5	55:5	7	tif
LEAF_NODE	55:8	55:8	7	->
LEAF_NODE	55:10	55:10	7	tif_dirlist
LEAF_NODE	55:21	55:21	4	)
STATEMENTS	56:2	56:2	4	
EXPR_STATEMENT	56:2	56:29	5	_TIFFfree ( tif -> tif_dirlist ) ;
EXPR	56:2	56:2	6	_TIFFfree ( tif -> tif_dirlist )
FUNCTION_CALL	56:2	56:28	7	_TIFFfree ( tif -> tif_dirlist )
CALLEE	56:2	56:2	8	_TIFFfree
LEAF_NODE	56:2	56:2	9	_TIFFfree
LEAF_NODE	56:11	56:11	8	(
ARGUMENT	56:12	56:12	8	tif -> tif_dirlist
FIELD	56:12	56:17	9	tif -> tif_dirlist
LEAF_NODE	56:12	56:12	10	tif
LEAF_NODE	56:15	56:15	10	->
LEAF_NODE	56:17	56:17	10	tif_dirlist
LEAF_NODE	56:28	56:28	8	)
LEAF_NODE	56:29	56:29	6	;
ITERATION	61:1	62:1	3	
KEYWORD	61:1	61:1	4	while
LEAF_NODE	61:1	61:1	5	while
LEAF_NODE	61:6	61:6	4	(
CONDITION	61:8	61:8	4	tif -> tif_clientinfo
EXPR	61:8	61:8	5	tif -> tif_clientinfo
FIELD	61:8	61:13	6	tif -> tif_clientinfo
LEAF_NODE	61:8	61:8	7	tif
LEAF_NODE	61:11	61:11	7	->
LEAF_NODE	61:13	61:13	7	tif_clientinfo
LEAF_NODE	61:28	61:28	4	)
STATEMENTS	62:1	68:1	4	
LEAF_NODE	62:1	62:1	5	{
STATEMENTS	63:2	67:2	5	
SIMPLE_DECL	63:2	63:50	6	TIFFClientInfoLink * psLink ; psLink = tif -> tif_clientinfo ;
VAR_DECL	63:2	63:22	7	TIFFClientInfoLink * psLink ; psLink = tif -> tif_clientinfo
TYPE	63:2	63:21	8	TIFFClientInfoLink *
TYPE_NAME	63:2	63:2	9	TIFFClientInfoLink
LEAF_NODE	63:2	63:2	10	TIFFClientInfoLink
POINTER	63:21	63:21	9	*
LEAF_NODE	63:21	63:21	10	*
NAME	63:22	63:22	8	psLink
LEAF_NODE	63:22	63:22	9	psLink
LEAF_NODE	0:0	0:0	8	;
INIT	63:22	63:22	8	psLink = tif -> tif_clientinfo
ASSIGN	63:22	63:31	9	psLink = tif -> tif_clientinfo
LVAL	63:22	63:22	10	psLink
NAME	63:22	63:22	11	psLink
LEAF_NODE	63:22	63:22	12	psLink
ASSIGN_OP	63:29	63:29	10	=
LEAF_NODE	63:29	63:29	11	=
RVAL	63:31	63:31	10	tif -> tif_clientinfo
FIELD	63:31	63:36	11	tif -> tif_clientinfo
LEAF_NODE	63:31	63:31	12	tif
LEAF_NODE	63:34	63:34	12	->
LEAF_NODE	63:36	63:36	12	tif_clientinfo
LEAF_NODE	63:50	63:50	7	;
EXPR_STATEMENT	65:2	65:36	6	tif -> tif_clientinfo = psLink -> next ;
EXPR	65:2	65:2	7	tif -> tif_clientinfo = psLink -> next
ASSIGN	65:2	65:24	8	tif -> tif_clientinfo = psLink -> next
LVAL	65:2	65:2	9	tif -> tif_clientinfo
FIELD	65:2	65:7	10	tif -> tif_clientinfo
LEAF_NODE	65:2	65:2	11	tif
LEAF_NODE	65:5	65:5	11	->
LEAF_NODE	65:7	65:7	11	tif_clientinfo
ASSIGN_OP	65:22	65:22	9	=
LEAF_NODE	65:22	65:22	10	=
RVAL	65:24	65:24	9	psLink -> next
FIELD	65:24	65:32	10	psLink -> next
LEAF_NODE	65:24	65:24	11	psLink
LEAF_NODE	65:30	65:30	11	->
LEAF_NODE	65:32	65:32	11	next
LEAF_NODE	65:36	65:36	7	;
EXPR_STATEMENT	66:2	66:27	6	_TIFFfree ( psLink -> name ) ;
EXPR	66:2	66:2	7	_TIFFfree ( psLink -> name )
FUNCTION_CALL	66:2	66:26	8	_TIFFfree ( psLink -> name )
CALLEE	66:2	66:2	9	_TIFFfree
LEAF_NODE	66:2	66:2	10	_TIFFfree
LEAF_NODE	66:11	66:11	9	(
ARGUMENT	66:13	66:13	9	psLink -> name
FIELD	66:13	66:21	10	psLink -> name
LEAF_NODE	66:13	66:13	11	psLink
LEAF_NODE	66:19	66:19	11	->
LEAF_NODE	66:21	66:21	11	name
LEAF_NODE	66:26	66:26	9	)
LEAF_NODE	66:27	66:27	7	;
EXPR_STATEMENT	67:2	67:21	6	_TIFFfree ( psLink ) ;
EXPR	67:2	67:2	7	_TIFFfree ( psLink )
FUNCTION_CALL	67:2	67:20	8	_TIFFfree ( psLink )
CALLEE	67:2	67:2	9	_TIFFfree
LEAF_NODE	67:2	67:2	10	_TIFFfree
LEAF_NODE	67:11	67:11	9	(
ARGUMENT	67:13	67:13	9	psLink
FIELD	67:13	67:13	10	psLink
LEAF_NODE	67:13	67:13	11	psLink
LEAF_NODE	67:20	67:20	9	)
LEAF_NODE	67:21	67:21	7	;
LEAF_NODE	68:1	68:1	5	}
SELECTION	70:1	71:2	3	
KEYWORD	70:1	70:1	4	if
LEAF_NODE	70:1	70:1	5	if
LEAF_NODE	70:4	70:4	4	(
CONDITION	70:5	70:5	4	tif -> tif_rawdata && ( tif -> tif_flags & TIFF_MYBUFFER )
EXPR	70:5	70:5	5	tif -> tif_rawdata && ( tif -> tif_flags & TIFF_MYBUFFER )
AND	70:5	70:25	6	tif -> tif_rawdata && ( tif -> tif_flags & TIFF_MYBUFFER )
EXPR	70:5	70:5	7	tif -> tif_rawdata
FIELD	70:5	70:10	8	tif -> tif_rawdata
LEAF_NODE	70:5	70:5	9	tif
LEAF_NODE	70:8	70:8	9	->
LEAF_NODE	70:10	70:10	9	tif_rawdata
LEAF_NODE	70:22	70:22	7	&&
EXPR	70:25	70:54	7	( tif -> tif_flags & TIFF_MYBUFFER )
LEAF_NODE	70:25	70:25	8	(
FIELD	70:26	70:31	8	tif -> tif_flags
LEAF_NODE	70:26	70:26	9	tif
LEAF_NODE	70:29	70:29	9	->
LEAF_NODE	70:31	70:31	9	tif_flags
LEAF_NODE	70:40	70:40	8	&
FIELD	70:41	70:41	8	TIFF_MYBUFFER
LEAF_NODE	70:41	70:41	9	TIFF_MYBUFFER
LEAF_NODE	70:54	70:54	8	)
LEAF_NODE	70:55	70:55	4	)
STATEMENTS	71:2	71:2	4	
EXPR_STATEMENT	71:2	71:29	5	_TIFFfree ( tif -> tif_rawdata ) ;
EXPR	71:2	71:2	6	_TIFFfree ( tif -> tif_rawdata )
FUNCTION_CALL	71:2	71:28	7	_TIFFfree ( tif -> tif_rawdata )
CALLEE	71:2	71:2	8	_TIFFfree
LEAF_NODE	71:2	71:2	9	_TIFFfree
LEAF_NODE	71:11	71:11	8	(
ARGUMENT	71:12	71:12	8	tif -> tif_rawdata
FIELD	71:12	71:17	9	tif -> tif_rawdata
LEAF_NODE	71:12	71:12	10	tif
LEAF_NODE	71:15	71:15	10	->
LEAF_NODE	71:17	71:17	10	tif_rawdata
LEAF_NODE	71:28	71:28	8	)
LEAF_NODE	71:29	71:29	6	;
SELECTION	72:1	73:2	3	
KEYWORD	72:1	72:1	4	if
LEAF_NODE	72:1	72:1	5	if
LEAF_NODE	72:4	72:4	4	(
CONDITION	72:5	72:5	4	isMapped ( tif )
EXPR	72:5	72:5	5	isMapped ( tif )
FUNCTION_CALL	72:5	72:17	6	isMapped ( tif )
CALLEE	72:5	72:5	7	isMapped
LEAF_NODE	72:5	72:5	8	isMapped
LEAF_NODE	72:13	72:13	7	(
ARGUMENT	72:14	72:14	7	tif
FIELD	72:14	72:14	8	tif
LEAF_NODE	72:14	72:14	9	tif
LEAF_NODE	72:17	72:17	7	)
LEAF_NODE	72:18	72:18	4	)
STATEMENTS	73:2	73:2	4	
EXPR_STATEMENT	73:2	73:66	5	TIFFUnmapFileContents ( tif , tif -> tif_base , ( toff_t ) tif -> tif_size ) ;
EXPR	73:2	73:2	6	TIFFUnmapFileContents ( tif , tif -> tif_base , ( toff_t ) tif -> tif_size )
FUNCTION_CALL	73:2	73:65	7	TIFFUnmapFileContents ( tif , tif -> tif_base , ( toff_t ) tif -> tif_size )
CALLEE	73:2	73:2	8	TIFFUnmapFileContents
LEAF_NODE	73:2	73:2	9	TIFFUnmapFileContents
LEAF_NODE	73:23	73:23	8	(
ARGUMENT	73:24	73:24	8	tif
FIELD	73:24	73:24	9	tif
LEAF_NODE	73:24	73:24	10	tif
LEAF_NODE	73:27	73:27	8	,
ARGUMENT	73:29	73:29	8	tif -> tif_base
FIELD	73:29	73:34	9	tif -> tif_base
LEAF_NODE	73:29	73:29	10	tif
LEAF_NODE	73:32	73:32	10	->
LEAF_NODE	73:34	73:34	10	tif_base
LEAF_NODE	73:42	73:42	8	,
ARGUMENT	73:44	73:52	8	( toff_t ) tif -> tif_size
LEAF_NODE	73:44	73:44	9	(
TYPE_NAME	73:45	73:45	9	toff_t
LEAF_NODE	73:45	73:45	10	toff_t
LEAF_NODE	73:51	73:51	9	)
FIELD	73:52	73:57	9	tif -> tif_size
LEAF_NODE	73:52	73:52	10	tif
LEAF_NODE	73:55	73:55	10	->
LEAF_NODE	73:57	73:57	10	tif_size
LEAF_NODE	73:65	73:65	8	)
LEAF_NODE	73:66	73:66	6	;
SELECTION	78:1	78:46	3	
KEYWORD	78:1	78:1	4	if
LEAF_NODE	78:1	78:1	5	if
LEAF_NODE	78:4	78:4	4	(
CONDITION	78:5	78:5	4	tif -> tif_fields && tif -> tif_nfields > 0
EXPR	78:5	78:5	5	tif -> tif_fields && tif -> tif_nfields > 0
AND	78:5	78:24	6	tif -> tif_fields && tif -> tif_nfields > 0
EXPR	78:5	78:5	7	tif -> tif_fields
FIELD	78:5	78:10	8	tif -> tif_fields
LEAF_NODE	78:5	78:5	9	tif
LEAF_NODE	78:8	78:8	9	->
LEAF_NODE	78:10	78:10	9	tif_fields
LEAF_NODE	78:21	78:21	7	&&
EXPR	78:24	78:43	7	tif -> tif_nfields > 0
FIELD	78:24	78:29	8	tif -> tif_nfields
LEAF_NODE	78:24	78:24	9	tif
LEAF_NODE	78:27	78:27	9	->
LEAF_NODE	78:29	78:29	9	tif_nfields
REL_OPERATOR	78:41	78:41	8	>
LEAF_NODE	78:41	78:41	9	>
FIELD	78:43	78:43	8	0
LEAF_NODE	78:43	78:43	9	0
LEAF_NODE	78:44	78:44	4	)
STATEMENTS	78:46	91:1	4	
LEAF_NODE	78:46	78:46	5	{
STATEMENTS	79:2	90:2	5	
SIMPLE_DECL	79:2	79:10	6	uint32 i ;
VAR_DECL	79:2	79:9	7	uint32 i
TYPE	79:2	79:2	8	uint32
TYPE_NAME	79:2	79:2	9	uint32
LEAF_NODE	79:2	79:2	10	uint32
NAME	79:9	79:9	8	i
LEAF_NODE	79:9	79:9	9	i
LEAF_NODE	79:10	79:10	7	;
ITERATION	81:2	81:41	6	
KEYWORD	81:2	81:2	7	for
LEAF_NODE	81:2	81:2	8	for
LEAF_NODE	81:6	81:6	7	(
FOR_INIT	81:7	81:12	7	i = 0 ;
EXPR	81:7	81:7	8	i = 0
ASSIGN	81:7	81:11	9	i = 0
LVAL	81:7	81:7	10	i
FIELD	81:7	81:7	11	i
LEAF_NODE	81:7	81:7	12	i
ASSIGN_OP	81:9	81:9	10	=
LEAF_NODE	81:9	81:9	11	=
RVAL	81:11	81:11	10	0
FIELD	81:11	81:11	11	0
LEAF_NODE	81:11	81:11	12	0
LEAF_NODE	81:12	81:12	8	;
CONDITION	81:14	81:14	7	i < tif -> tif_nfields
EXPR	81:14	81:18	8	i < tif -> tif_nfields
FIELD	81:14	81:14	9	i
LEAF_NODE	81:14	81:14	10	i
REL_OPERATOR	81:16	81:16	9	<
LEAF_NODE	81:16	81:16	10	<
FIELD	81:18	81:23	9	tif -> tif_nfields
LEAF_NODE	81:18	81:18	10	tif
LEAF_NODE	81:21	81:21	10	->
LEAF_NODE	81:23	81:23	10	tif_nfields
LEAF_NODE	81:34	81:34	7	;
FOR_EXPR	81:36	81:36	7	i ++
EXPR	81:36	81:36	8	i ++
FIELD	81:36	81:37	9	i ++
LEAF_NODE	81:36	81:36	10	i
LEAF_NODE	81:37	81:37	10	++
LEAF_NODE	81:39	81:39	7	)
STATEMENTS	81:41	88:2	7	
LEAF_NODE	81:41	81:41	8	{
STATEMENTS	82:3	83:3	8	
SIMPLE_DECL	82:3	82:38	9	TIFFField * fld ; fld = tif -> tif_fields [ i ] ;
VAR_DECL	82:3	82:14	10	TIFFField * fld ; fld = tif -> tif_fields [ i ]
TYPE	82:3	82:13	11	TIFFField *
TYPE_NAME	82:3	82:3	12	TIFFField
LEAF_NODE	82:3	82:3	13	TIFFField
POINTER	82:13	82:13	12	*
LEAF_NODE	82:13	82:13	13	*
NAME	82:14	82:14	11	fld
LEAF_NODE	82:14	82:14	12	fld
LEAF_NODE	0:0	0:0	11	;
INIT	82:14	82:14	11	fld = tif -> tif_fields [ i ]
ASSIGN	82:14	82:20	12	fld = tif -> tif_fields [ i ]
LVAL	82:14	82:14	13	fld
NAME	82:14	82:14	14	fld
LEAF_NODE	82:14	82:14	15	fld
ASSIGN_OP	82:18	82:18	13	=
LEAF_NODE	82:18	82:18	14	=
RVAL	82:20	82:20	13	tif -> tif_fields [ i ]
FIELD	82:20	82:37	14	tif -> tif_fields [ i ]
LEAF_NODE	82:20	82:20	15	tif
LEAF_NODE	82:23	82:23	15	->
LEAF_NODE	82:25	82:25	15	tif_fields
LEAF_NODE	82:35	82:35	15	[
EXPR	82:36	82:36	15	i
FIELD	82:36	82:36	16	i
LEAF_NODE	82:36	82:36	17	i
LEAF_NODE	82:37	82:37	15	]
LEAF_NODE	82:38	82:38	10	;
SELECTION	83:3	84:49	9	
KEYWORD	83:3	83:3	10	if
LEAF_NODE	83:3	83:3	11	if
LEAF_NODE	83:6	83:6	10	(
CONDITION	83:7	83:7	10	fld -> field_bit == FIELD_CUSTOM && strncmp ( "Tag " , fld -> field_name , 4 ) == 0
EXPR	83:7	83:7	11	fld -> field_bit == FIELD_CUSTOM && strncmp ( "Tag " , fld -> field_name , 4 ) == 0
AND	83:7	84:7	12	fld -> field_bit == FIELD_CUSTOM && strncmp ( "Tag " , fld -> field_name , 4 ) == 0
EXPR	83:7	83:25	13	fld -> field_bit == FIELD_CUSTOM
FIELD	83:7	83:12	14	fld -> field_bit
LEAF_NODE	83:7	83:7	15	fld
LEAF_NODE	83:10	83:10	15	->
LEAF_NODE	83:12	83:12	15	field_bit
EQ_OPERATOR	83:22	83:22	14	==
LEAF_NODE	83:22	83:22	15	==
FIELD	83:25	83:25	14	FIELD_CUSTOM
LEAF_NODE	83:25	83:25	15	FIELD_CUSTOM
LEAF_NODE	83:38	83:38	13	&&
EXPR	84:7	84:46	13	strncmp ( "Tag " , fld -> field_name , 4 ) == 0
FUNCTION_CALL	84:7	84:41	14	strncmp ( "Tag " , fld -> field_name , 4 )
CALLEE	84:7	84:7	15	strncmp
LEAF_NODE	84:7	84:7	16	strncmp
LEAF_NODE	84:14	84:14	15	(
ARGUMENT	84:15	84:15	15	"Tag "
FIELD	84:15	84:15	16	"Tag "
LEAF_NODE	84:15	84:15	17	"Tag "
LEAF_NODE	84:21	84:21	15	,
ARGUMENT	84:23	84:23	15	fld -> field_name
FIELD	84:23	84:28	16	fld -> field_name
LEAF_NODE	84:23	84:23	17	fld
LEAF_NODE	84:26	84:26	17	->
LEAF_NODE	84:28	84:28	17	field_name
LEAF_NODE	84:38	84:38	15	,
ARGUMENT	84:40	84:40	15	4
FIELD	84:40	84:40	16	4
LEAF_NODE	84:40	84:40	17	4
LEAF_NODE	84:41	84:41	15	)
EQ_OPERATOR	84:43	84:43	14	==
LEAF_NODE	84:43	84:43	15	==
FIELD	84:46	84:46	14	0
LEAF_NODE	84:46	84:46	15	0
LEAF_NODE	84:47	84:47	10	)
STATEMENTS	84:49	87:3	10	
LEAF_NODE	84:49	84:49	11	{
STATEMENTS	85:4	86:4	11	
EXPR_STATEMENT	85:4	85:30	12	_TIFFfree ( fld -> field_name ) ;
EXPR	85:4	85:4	13	_TIFFfree ( fld -> field_name )
FUNCTION_CALL	85:4	85:29	14	_TIFFfree ( fld -> field_name )
CALLEE	85:4	85:4	15	_TIFFfree
LEAF_NODE	85:4	85:4	16	_TIFFfree
LEAF_NODE	85:13	85:13	15	(
ARGUMENT	85:14	85:14	15	fld -> field_name
FIELD	85:14	85:19	16	fld -> field_name
LEAF_NODE	85:14	85:14	17	fld
LEAF_NODE	85:17	85:17	17	->
LEAF_NODE	85:19	85:19	17	field_name
LEAF_NODE	85:29	85:29	15	)
LEAF_NODE	85:30	85:30	13	;
EXPR_STATEMENT	86:4	86:18	12	_TIFFfree ( fld ) ;
EXPR	86:4	86:4	13	_TIFFfree ( fld )
FUNCTION_CALL	86:4	86:17	14	_TIFFfree ( fld )
CALLEE	86:4	86:4	15	_TIFFfree
LEAF_NODE	86:4	86:4	16	_TIFFfree
LEAF_NODE	86:13	86:13	15	(
ARGUMENT	86:14	86:14	15	fld
FIELD	86:14	86:14	16	fld
LEAF_NODE	86:14	86:14	17	fld
LEAF_NODE	86:17	86:17	15	)
LEAF_NODE	86:18	86:18	13	;
LEAF_NODE	87:3	87:3	11	}
LEAF_NODE	88:2	88:2	8	}
EXPR_STATEMENT	90:2	90:28	6	_TIFFfree ( tif -> tif_fields ) ;
EXPR	90:2	90:2	7	_TIFFfree ( tif -> tif_fields )
FUNCTION_CALL	90:2	90:27	8	_TIFFfree ( tif -> tif_fields )
CALLEE	90:2	90:2	9	_TIFFfree
LEAF_NODE	90:2	90:2	10	_TIFFfree
LEAF_NODE	90:11	90:11	9	(
ARGUMENT	90:12	90:12	9	tif -> tif_fields
FIELD	90:12	90:17	10	tif -> tif_fields
LEAF_NODE	90:12	90:12	11	tif
LEAF_NODE	90:15	90:15	11	->
LEAF_NODE	90:17	90:17	11	tif_fields
LEAF_NODE	90:27	90:27	9	)
LEAF_NODE	90:28	90:28	7	;
LEAF_NODE	91:1	91:1	5	}
SELECTION	93:8	93:40	3	
KEYWORD	93:8	93:8	4	if
LEAF_NODE	93:8	93:8	5	if
LEAF_NODE	93:11	93:11	4	(
CONDITION	93:12	93:12	4	tif -> tif_nfieldscompat > 0
EXPR	93:12	93:37	5	tif -> tif_nfieldscompat > 0
FIELD	93:12	93:17	6	tif -> tif_nfieldscompat
LEAF_NODE	93:12	93:12	7	tif
LEAF_NODE	93:15	93:15	7	->
LEAF_NODE	93:17	93:17	7	tif_nfieldscompat
REL_OPERATOR	93:35	93:35	6	>
LEAF_NODE	93:35	93:35	7	>
FIELD	93:37	93:37	6	0
LEAF_NODE	93:37	93:37	7	0
LEAF_NODE	93:38	93:38	4	)
STATEMENTS	93:40	101:8	4	
LEAF_NODE	93:40	93:40	5	{
STATEMENTS	94:16	100:16	5	
SIMPLE_DECL	94:16	94:24	6	uint32 i ;
VAR_DECL	94:16	94:23	7	uint32 i
TYPE	94:16	94:16	8	uint32
TYPE_NAME	94:16	94:16	9	uint32
LEAF_NODE	94:16	94:16	10	uint32
NAME	94:23	94:23	8	i
LEAF_NODE	94:23	94:23	9	i
LEAF_NODE	94:24	94:24	7	;
ITERATION	96:16	96:61	6	
KEYWORD	96:16	96:16	7	for
LEAF_NODE	96:16	96:16	8	for
LEAF_NODE	96:20	96:20	7	(
FOR_INIT	96:21	96:26	7	i = 0 ;
EXPR	96:21	96:21	8	i = 0
ASSIGN	96:21	96:25	9	i = 0
LVAL	96:21	96:21	10	i
FIELD	96:21	96:21	11	i
LEAF_NODE	96:21	96:21	12	i
ASSIGN_OP	96:23	96:23	10	=
LEAF_NODE	96:23	96:23	11	=
RVAL	96:25	96:25	10	0
FIELD	96:25	96:25	11	0
LEAF_NODE	96:25	96:25	12	0
LEAF_NODE	96:26	96:26	8	;
CONDITION	96:28	96:28	7	i < tif -> tif_nfieldscompat
EXPR	96:28	96:32	8	i < tif -> tif_nfieldscompat
FIELD	96:28	96:28	9	i
LEAF_NODE	96:28	96:28	10	i
REL_OPERATOR	96:30	96:30	9	<
LEAF_NODE	96:30	96:30	10	<
FIELD	96:32	96:37	9	tif -> tif_nfieldscompat
LEAF_NODE	96:32	96:32	10	tif
LEAF_NODE	96:35	96:35	10	->
LEAF_NODE	96:37	96:37	10	tif_nfieldscompat
LEAF_NODE	96:54	96:54	7	;
FOR_EXPR	96:56	96:56	7	i ++
EXPR	96:56	96:56	8	i ++
FIELD	96:56	96:57	9	i ++
LEAF_NODE	96:56	96:56	10	i
LEAF_NODE	96:57	96:57	10	++
LEAF_NODE	96:59	96:59	7	)
STATEMENTS	96:61	99:16	7	
LEAF_NODE	96:61	96:61	8	{
STATEMENTS	97:24	97:24	8	
SELECTION	97:24	98:32	9	
KEYWORD	97:24	97:24	10	if
LEAF_NODE	97:24	97:24	11	if
LEAF_NODE	97:27	97:27	10	(
CONDITION	97:28	97:28	10	tif -> tif_fieldscompat [ i ] . allocated_size
EXPR	97:28	97:28	11	tif -> tif_fieldscompat [ i ] . allocated_size
FIELD	97:28	97:53	12	tif -> tif_fieldscompat [ i ] . allocated_size
LEAF_NODE	97:28	97:28	13	tif
LEAF_NODE	97:31	97:31	13	->
LEAF_NODE	97:33	97:33	13	tif_fieldscompat
LEAF_NODE	97:49	97:49	13	[
EXPR	97:50	97:50	13	i
FIELD	97:50	97:50	14	i
LEAF_NODE	97:50	97:50	15	i
LEAF_NODE	97:51	97:51	13	]
LEAF_NODE	97:52	97:52	13	.
LEAF_NODE	97:53	97:53	13	allocated_size
LEAF_NODE	97:67	97:67	10	)
STATEMENTS	98:32	98:32	10	
EXPR_STATEMENT	98:32	98:74	11	_TIFFfree ( tif -> tif_fieldscompat [ i ] . fields ) ;
EXPR	98:32	98:32	12	_TIFFfree ( tif -> tif_fieldscompat [ i ] . fields )
FUNCTION_CALL	98:32	98:73	13	_TIFFfree ( tif -> tif_fieldscompat [ i ] . fields )
CALLEE	98:32	98:32	14	_TIFFfree
LEAF_NODE	98:32	98:32	15	_TIFFfree
LEAF_NODE	98:41	98:41	14	(
ARGUMENT	98:42	98:42	14	tif -> tif_fieldscompat [ i ] . fields
FIELD	98:42	98:67	15	tif -> tif_fieldscompat [ i ] . fields
LEAF_NODE	98:42	98:42	16	tif
LEAF_NODE	98:45	98:45	16	->
LEAF_NODE	98:47	98:47	16	tif_fieldscompat
LEAF_NODE	98:63	98:63	16	[
EXPR	98:64	98:64	16	i
FIELD	98:64	98:64	17	i
LEAF_NODE	98:64	98:64	18	i
LEAF_NODE	98:65	98:65	16	]
LEAF_NODE	98:66	98:66	16	.
LEAF_NODE	98:67	98:67	16	fields
LEAF_NODE	98:73	98:73	14	)
LEAF_NODE	98:74	98:74	12	;
LEAF_NODE	99:16	99:16	8	}
EXPR_STATEMENT	100:16	100:48	6	_TIFFfree ( tif -> tif_fieldscompat ) ;
EXPR	100:16	100:16	7	_TIFFfree ( tif -> tif_fieldscompat )
FUNCTION_CALL	100:16	100:47	8	_TIFFfree ( tif -> tif_fieldscompat )
CALLEE	100:16	100:16	9	_TIFFfree
LEAF_NODE	100:16	100:16	10	_TIFFfree
LEAF_NODE	100:25	100:25	9	(
ARGUMENT	100:26	100:26	9	tif -> tif_fieldscompat
FIELD	100:26	100:31	10	tif -> tif_fieldscompat
LEAF_NODE	100:26	100:26	11	tif
LEAF_NODE	100:29	100:29	11	->
LEAF_NODE	100:31	100:31	11	tif_fieldscompat
LEAF_NODE	100:47	100:47	9	)
LEAF_NODE	100:48	100:48	7	;
LEAF_NODE	101:8	101:8	5	}
EXPR_STATEMENT	103:1	103:15	3	_TIFFfree ( tif ) ;
EXPR	103:1	103:1	4	_TIFFfree ( tif )
FUNCTION_CALL	103:1	103:14	5	_TIFFfree ( tif )
CALLEE	103:1	103:1	6	_TIFFfree
LEAF_NODE	103:1	103:1	7	_TIFFfree
LEAF_NODE	103:10	103:10	6	(
ARGUMENT	103:11	103:11	6	tif
FIELD	103:11	103:11	7	tif
LEAF_NODE	103:11	103:11	8	tif
LEAF_NODE	103:14	103:14	6	)
LEAF_NODE	103:15	103:15	4	;
LEAF_NODE	104:0	104:0	2	}
FUNCTION_DEF	120:0	128:0	1	
RETURN_TYPE	120:0	120:0	2	void
TYPE_NAME	120:0	120:0	3	void
LEAF_NODE	120:0	120:0	4	void
FUNCTION_NAME	121:0	121:0	2	TIFFClose
LEAF_NODE	121:0	121:0	3	TIFFClose
PARAMETER_LIST	121:9	121:19	2	( TIFF * tif )
LEAF_NODE	121:9	121:9	3	(
PARAMETER_DECL	121:10	121:16	3	TIFF * tif
TYPE	121:10	121:14	4	TIFF *
TYPE_NAME	121:10	121:10	5	TIFF
LEAF_NODE	121:10	121:10	6	TIFF
POINTER	121:14	121:14	5	*
LEAF_NODE	121:14	121:14	6	*
NAME	121:16	121:16	4	tif
LEAF_NODE	121:16	121:16	5	tif
LEAF_NODE	121:19	121:19	3	)
LEAF_NODE	122:0	122:0	2	{
STATEMENTS	123:1	127:1	2	
SIMPLE_DECL	123:1	123:45	3	TIFFCloseProc closeproc ; closeproc = tif -> tif_closeproc ;
VAR_DECL	123:1	123:15	4	TIFFCloseProc closeproc ; closeproc = tif -> tif_closeproc
TYPE	123:1	123:1	5	TIFFCloseProc
TYPE_NAME	123:1	123:1	6	TIFFCloseProc
LEAF_NODE	123:1	123:1	7	TIFFCloseProc
NAME	123:15	123:15	5	closeproc
LEAF_NODE	123:15	123:15	6	closeproc
LEAF_NODE	0:0	0:0	5	;
INIT	123:15	123:15	5	closeproc = tif -> tif_closeproc
ASSIGN	123:15	123:27	6	closeproc = tif -> tif_closeproc
LVAL	123:15	123:15	7	closeproc
NAME	123:15	123:15	8	closeproc
LEAF_NODE	123:15	123:15	9	closeproc
ASSIGN_OP	123:25	123:25	7	=
LEAF_NODE	123:25	123:25	8	=
RVAL	123:27	123:27	7	tif -> tif_closeproc
FIELD	123:27	123:32	8	tif -> tif_closeproc
LEAF_NODE	123:27	123:27	9	tif
LEAF_NODE	123:30	123:30	9	->
LEAF_NODE	123:32	123:32	9	tif_closeproc
LEAF_NODE	123:45	123:45	4	;
SIMPLE_DECL	124:1	124:35	3	thandle_t fd ; fd = tif -> tif_clientdata ;
VAR_DECL	124:1	124:11	4	thandle_t fd ; fd = tif -> tif_clientdata
TYPE	124:1	124:1	5	thandle_t
TYPE_NAME	124:1	124:1	6	thandle_t
LEAF_NODE	124:1	124:1	7	thandle_t
NAME	124:11	124:11	5	fd
LEAF_NODE	124:11	124:11	6	fd
LEAF_NODE	0:0	0:0	5	;
INIT	124:11	124:11	5	fd = tif -> tif_clientdata
ASSIGN	124:11	124:16	6	fd = tif -> tif_clientdata
LVAL	124:11	124:11	7	fd
NAME	124:11	124:11	8	fd
LEAF_NODE	124:11	124:11	9	fd
ASSIGN_OP	124:14	124:14	7	=
LEAF_NODE	124:14	124:14	8	=
RVAL	124:16	124:16	7	tif -> tif_clientdata
FIELD	124:16	124:21	8	tif -> tif_clientdata
LEAF_NODE	124:16	124:16	9	tif
LEAF_NODE	124:19	124:19	9	->
LEAF_NODE	124:21	124:21	9	tif_clientdata
LEAF_NODE	124:35	124:35	4	;
EXPR_STATEMENT	126:1	126:17	3	TIFFCleanup ( tif ) ;
EXPR	126:1	126:1	4	TIFFCleanup ( tif )
FUNCTION_CALL	126:1	126:16	5	TIFFCleanup ( tif )
CALLEE	126:1	126:1	6	TIFFCleanup
LEAF_NODE	126:1	126:1	7	TIFFCleanup
LEAF_NODE	126:12	126:12	6	(
ARGUMENT	126:13	126:13	6	tif
FIELD	126:13	126:13	7	tif
LEAF_NODE	126:13	126:13	8	tif
LEAF_NODE	126:16	126:16	6	)
LEAF_NODE	126:17	126:17	4	;
EXPR_STATEMENT	127:1	127:24	3	( void ) ( * closeproc ) ( fd ) ;
EXPR	127:1	127:8	4	( void ) ( * closeproc ) ( fd )
LEAF_NODE	127:1	127:1	5	(
TYPE_NAME	127:2	127:2	5	void
LEAF_NODE	127:2	127:2	6	void
LEAF_NODE	127:6	127:6	5	)
FUNCTION_CALL	127:8	127:23	5	( * closeproc ) ( fd )
CALLEE	127:8	127:19	6	( * closeproc )
LEAF_NODE	127:8	127:8	7	(
UNARY_EXPR	127:9	127:10	7	* closeproc
UNARY_OPERATOR	127:9	127:9	8	*
LEAF_NODE	127:9	127:9	9	*
FIELD	127:10	127:10	8	closeproc
LEAF_NODE	127:10	127:10	9	closeproc
LEAF_NODE	127:19	127:19	7	)
LEAF_NODE	127:20	127:20	6	(
ARGUMENT	127:21	127:21	6	fd
FIELD	127:21	127:21	7	fd
LEAF_NODE	127:21	127:21	8	fd
LEAF_NODE	127:23	127:23	6	)
LEAF_NODE	127:24	127:24	4	;
LEAF_NODE	128:0	128:0	2	}
