SOURCE_FILE	30:0	154:0	0	
FUNCTION_DEF	30:0	57:0	1	
RETURN_TYPE	30:0	30:0	2	int
TYPE_NAME	30:0	30:0	3	int
LEAF_NODE	30:0	30:0	4	int
FUNCTION_NAME	31:0	31:0	2	TIFFFlush
LEAF_NODE	31:0	31:0	3	TIFFFlush
PARAMETER_LIST	31:9	31:19	2	( TIFF * tif )
LEAF_NODE	31:9	31:9	3	(
PARAMETER_DECL	31:10	31:16	3	TIFF * tif
TYPE	31:10	31:14	4	TIFF *
TYPE_NAME	31:10	31:10	5	TIFF
LEAF_NODE	31:10	31:10	6	TIFF
POINTER	31:14	31:14	5	*
LEAF_NODE	31:14	31:14	6	*
NAME	31:16	31:16	4	tif
LEAF_NODE	31:16	31:16	5	tif
LEAF_NODE	31:19	31:19	3	)
LEAF_NODE	32:0	32:0	2	{
STATEMENTS	33:4	56:4	2	
SELECTION	33:4	34:8	3	
KEYWORD	33:4	33:4	4	if
LEAF_NODE	33:4	33:4	5	if
LEAF_NODE	33:6	33:6	4	(
CONDITION	33:8	33:8	4	tif -> tif_mode == O_RDONLY
EXPR	33:8	33:25	5	tif -> tif_mode == O_RDONLY
FIELD	33:8	33:13	6	tif -> tif_mode
LEAF_NODE	33:8	33:8	7	tif
LEAF_NODE	33:11	33:11	7	->
LEAF_NODE	33:13	33:13	7	tif_mode
EQ_OPERATOR	33:22	33:22	6	==
LEAF_NODE	33:22	33:22	7	==
FIELD	33:25	33:25	6	O_RDONLY
LEAF_NODE	33:25	33:25	7	O_RDONLY
LEAF_NODE	33:34	33:34	4	)
STATEMENTS	34:8	34:8	4	
JUMP_STATEMENT	34:8	34:16	5	return 1 ;
KEYWORD	34:8	34:8	6	return
LEAF_NODE	34:8	34:8	7	return
DESTINATION	34:15	34:15	6	1
EXPR	34:15	34:15	7	1
FIELD	34:15	34:15	8	1
LEAF_NODE	34:15	34:15	9	1
LEAF_NODE	34:16	34:16	6	;
SELECTION	36:4	37:8	3	
KEYWORD	36:4	36:4	4	if
LEAF_NODE	36:4	36:4	5	if
LEAF_NODE	36:7	36:7	4	(
CONDITION	36:8	36:8	4	! TIFFFlushData ( tif )
EXPR	36:8	36:8	5	! TIFFFlushData ( tif )
UNARY_EXPR	36:8	36:9	6	! TIFFFlushData ( tif )
UNARY_OPERATOR	36:8	36:8	7	!
LEAF_NODE	36:8	36:8	8	!
FUNCTION_CALL	36:9	36:26	7	TIFFFlushData ( tif )
CALLEE	36:9	36:9	8	TIFFFlushData
LEAF_NODE	36:9	36:9	9	TIFFFlushData
LEAF_NODE	36:22	36:22	8	(
ARGUMENT	36:23	36:23	8	tif
FIELD	36:23	36:23	9	tif
LEAF_NODE	36:23	36:23	10	tif
LEAF_NODE	36:26	36:26	8	)
LEAF_NODE	36:27	36:27	4	)
STATEMENTS	37:8	37:8	4	
JUMP_STATEMENT	37:8	37:18	5	return ( 0 ) ;
KEYWORD	37:8	37:8	6	return
LEAF_NODE	37:8	37:8	7	return
DESTINATION	37:15	37:15	6	( 0 )
EXPR	37:15	37:17	7	( 0 )
LEAF_NODE	37:15	37:15	8	(
FIELD	37:16	37:16	8	0
LEAF_NODE	37:16	37:16	9	0
LEAF_NODE	37:17	37:17	8	)
LEAF_NODE	37:18	37:18	6	;
SELECTION	44:4	47:4	3	
KEYWORD	44:4	44:4	4	if
LEAF_NODE	44:4	44:4	5	if
LEAF_NODE	44:6	44:6	4	(
CONDITION	44:8	44:8	4	( tif -> tif_flags & TIFF_DIRTYSTRIP ) && ! ( tif -> tif_flags & TIFF_DIRTYDIRECT ) && tif -> tif_mode == O_RDWR
EXPR	44:8	44:8	5	( tif -> tif_flags & TIFF_DIRTYSTRIP ) && ! ( tif -> tif_flags & TIFF_DIRTYDIRECT ) && tif -> tif_mode == O_RDWR
AND	44:8	45:11	6	( tif -> tif_flags & TIFF_DIRTYSTRIP ) && ! ( tif -> tif_flags & TIFF_DIRTYDIRECT ) && tif -> tif_mode == O_RDWR
EXPR	44:8	44:41	7	( tif -> tif_flags & TIFF_DIRTYSTRIP )
LEAF_NODE	44:8	44:8	8	(
FIELD	44:9	44:14	8	tif -> tif_flags
LEAF_NODE	44:9	44:9	9	tif
LEAF_NODE	44:12	44:12	9	->
LEAF_NODE	44:14	44:14	9	tif_flags
LEAF_NODE	44:24	44:24	8	&
FIELD	44:26	44:26	8	TIFF_DIRTYSTRIP
LEAF_NODE	44:26	44:26	9	TIFF_DIRTYSTRIP
LEAF_NODE	44:41	44:41	8	)
LEAF_NODE	45:8	45:8	7	&&
EXPR	45:11	45:11	7	! ( tif -> tif_flags & TIFF_DIRTYDIRECT ) && tif -> tif_mode == O_RDWR
AND	45:11	46:11	8	! ( tif -> tif_flags & TIFF_DIRTYDIRECT ) && tif -> tif_mode == O_RDWR
EXPR	45:11	45:11	9	! ( tif -> tif_flags & TIFF_DIRTYDIRECT )
UNARY_EXPR	45:11	45:46	10	! ( tif -> tif_flags & TIFF_DIRTYDIRECT )
UNARY_OPERATOR	45:11	45:11	11	!
LEAF_NODE	45:11	45:11	12	!
LEAF_NODE	45:12	45:12	11	(
FIELD	45:13	45:18	11	tif -> tif_flags
LEAF_NODE	45:13	45:13	12	tif
LEAF_NODE	45:16	45:16	12	->
LEAF_NODE	45:18	45:18	12	tif_flags
LEAF_NODE	45:28	45:28	11	&
FIELD	45:30	45:30	11	TIFF_DIRTYDIRECT
LEAF_NODE	45:30	45:30	12	TIFF_DIRTYDIRECT
LEAF_NODE	45:46	45:46	11	)
LEAF_NODE	46:8	46:8	9	&&
EXPR	46:11	46:28	9	tif -> tif_mode == O_RDWR
FIELD	46:11	46:16	10	tif -> tif_mode
LEAF_NODE	46:11	46:11	11	tif
LEAF_NODE	46:14	46:14	11	->
LEAF_NODE	46:16	46:16	11	tif_mode
EQ_OPERATOR	46:25	46:25	10	==
LEAF_NODE	46:25	46:25	11	==
FIELD	46:28	46:28	10	O_RDWR
LEAF_NODE	46:28	46:28	11	O_RDWR
LEAF_NODE	46:35	46:35	4	)
STATEMENTS	47:4	50:4	4	
LEAF_NODE	47:4	47:4	5	{
STATEMENTS	48:8	48:8	5	
SELECTION	48:8	49:12	6	
KEYWORD	48:8	48:8	7	if
LEAF_NODE	48:8	48:8	8	if
LEAF_NODE	48:10	48:10	7	(
CONDITION	48:12	48:12	7	TIFFForceStrileArrayWriting ( tif )
EXPR	48:12	48:12	8	TIFFForceStrileArrayWriting ( tif )
FUNCTION_CALL	48:12	48:43	9	TIFFForceStrileArrayWriting ( tif )
CALLEE	48:12	48:12	10	TIFFForceStrileArrayWriting
LEAF_NODE	48:12	48:12	11	TIFFForceStrileArrayWriting
LEAF_NODE	48:39	48:39	10	(
ARGUMENT	48:40	48:40	10	tif
FIELD	48:40	48:40	11	tif
LEAF_NODE	48:40	48:40	12	tif
LEAF_NODE	48:43	48:43	10	)
LEAF_NODE	48:45	48:45	7	)
STATEMENTS	49:12	49:12	7	
JUMP_STATEMENT	49:12	49:20	8	return 1 ;
KEYWORD	49:12	49:12	9	return
LEAF_NODE	49:12	49:12	10	return
DESTINATION	49:19	49:19	9	1
EXPR	49:19	49:19	10	1
FIELD	49:19	49:19	11	1
LEAF_NODE	49:19	49:19	12	1
LEAF_NODE	49:20	49:20	9	;
LEAF_NODE	50:4	50:4	5	}
SELECTION	52:4	54:8	3	
KEYWORD	52:4	52:4	4	if
LEAF_NODE	52:4	52:4	5	if
LEAF_NODE	52:7	52:7	4	(
CONDITION	52:8	52:8	4	( tif -> tif_flags & ( TIFF_DIRTYDIRECT | TIFF_DIRTYSTRIP ) ) && ! TIFFRewriteDirectory ( tif )
EXPR	52:8	52:8	5	( tif -> tif_flags & ( TIFF_DIRTYDIRECT | TIFF_DIRTYSTRIP ) ) && ! TIFFRewriteDirectory ( tif )
AND	52:8	53:11	6	( tif -> tif_flags & ( TIFF_DIRTYDIRECT | TIFF_DIRTYSTRIP ) ) && ! TIFFRewriteDirectory ( tif )
EXPR	52:8	52:60	7	( tif -> tif_flags & ( TIFF_DIRTYDIRECT | TIFF_DIRTYSTRIP ) )
LEAF_NODE	52:8	52:8	8	(
FIELD	52:9	52:14	8	tif -> tif_flags
LEAF_NODE	52:9	52:9	9	tif
LEAF_NODE	52:12	52:12	9	->
LEAF_NODE	52:14	52:14	9	tif_flags
LEAF_NODE	52:24	52:24	8	&
LEAF_NODE	52:26	52:26	8	(
BIT_OR	52:27	52:44	8	TIFF_DIRTYDIRECT | TIFF_DIRTYSTRIP
BIT_OR_ELEM	52:27	52:27	9	TIFF_DIRTYDIRECT
FIELD	52:27	52:27	10	TIFF_DIRTYDIRECT
LEAF_NODE	52:27	52:27	11	TIFF_DIRTYDIRECT
LEAF_NODE	52:43	52:43	9	|
BIT_OR_ELEM	52:44	52:44	9	TIFF_DIRTYSTRIP
FIELD	52:44	52:44	10	TIFF_DIRTYSTRIP
LEAF_NODE	52:44	52:44	11	TIFF_DIRTYSTRIP
LEAF_NODE	52:59	52:59	8	)
LEAF_NODE	52:60	52:60	8	)
LEAF_NODE	53:8	53:8	7	&&
EXPR	53:11	53:11	7	! TIFFRewriteDirectory ( tif )
UNARY_EXPR	53:11	53:12	8	! TIFFRewriteDirectory ( tif )
UNARY_OPERATOR	53:11	53:11	9	!
LEAF_NODE	53:11	53:11	10	!
FUNCTION_CALL	53:12	53:36	9	TIFFRewriteDirectory ( tif )
CALLEE	53:12	53:12	10	TIFFRewriteDirectory
LEAF_NODE	53:12	53:12	11	TIFFRewriteDirectory
LEAF_NODE	53:32	53:32	10	(
ARGUMENT	53:33	53:33	10	tif
FIELD	53:33	53:33	11	tif
LEAF_NODE	53:33	53:33	12	tif
LEAF_NODE	53:36	53:36	10	)
LEAF_NODE	53:37	53:37	4	)
STATEMENTS	54:8	54:8	4	
JUMP_STATEMENT	54:8	54:18	5	return ( 0 ) ;
KEYWORD	54:8	54:8	6	return
LEAF_NODE	54:8	54:8	7	return
DESTINATION	54:15	54:15	6	( 0 )
EXPR	54:15	54:17	7	( 0 )
LEAF_NODE	54:15	54:15	8	(
FIELD	54:16	54:16	8	0
LEAF_NODE	54:16	54:16	9	0
LEAF_NODE	54:17	54:17	8	)
LEAF_NODE	54:18	54:18	6	;
JUMP_STATEMENT	56:4	56:14	3	return ( 1 ) ;
KEYWORD	56:4	56:4	4	return
LEAF_NODE	56:4	56:4	5	return
DESTINATION	56:11	56:11	4	( 1 )
EXPR	56:11	56:13	5	( 1 )
LEAF_NODE	56:11	56:11	6	(
FIELD	56:12	56:12	6	1
LEAF_NODE	56:12	56:12	7	1
LEAF_NODE	56:13	56:13	6	)
LEAF_NODE	56:14	56:14	4	;
LEAF_NODE	57:0	57:0	2	}
FUNCTION_DEF	78:0	143:0	1	
RETURN_TYPE	78:0	78:0	2	int
TYPE_NAME	78:0	78:0	3	int
LEAF_NODE	78:0	78:0	4	int
FUNCTION_NAME	78:4	78:4	2	TIFFForceStrileArrayWriting
LEAF_NODE	78:4	78:4	3	TIFFForceStrileArrayWriting
PARAMETER_LIST	78:31	78:41	2	( TIFF * tif )
LEAF_NODE	78:31	78:31	3	(
PARAMETER_DECL	78:32	78:38	3	TIFF * tif
TYPE	78:32	78:36	4	TIFF *
TYPE_NAME	78:32	78:32	5	TIFF
LEAF_NODE	78:32	78:32	6	TIFF
POINTER	78:36	78:36	5	*
LEAF_NODE	78:36	78:36	6	*
NAME	78:38	78:38	4	tif
LEAF_NODE	78:38	78:38	5	tif
LEAF_NODE	78:41	78:41	3	)
LEAF_NODE	79:0	79:0	2	{
STATEMENTS	80:4	142:4	2	
LEAF_NODE	80:4	80:4	3	static
SIMPLE_DECL	80:11	80:62	3	const char [ ] module ; module = "TIFFForceStrileArrayWriting" ;
VAR_DECL	80:11	80:22	4	const char [ ] module ; module = "TIFFForceStrileArrayWriting"
TYPE	80:11	80:28	5	const char [ ]
TYPE_NAME	80:11	80:17	6	const char
LEAF_NODE	80:11	80:11	7	const
LEAF_NODE	80:17	80:17	7	char
TYPE_SUFFIX	80:28	80:29	6	[ ]
LEAF_NODE	80:28	80:28	7	[
LEAF_NODE	80:29	80:29	7	]
NAME	80:22	80:22	5	module
LEAF_NODE	80:22	80:22	6	module
LEAF_NODE	0:0	0:0	5	;
INIT	80:22	80:22	5	module = "TIFFForceStrileArrayWriting"
ASSIGN	80:22	80:33	6	module = "TIFFForceStrileArrayWriting"
LVAL	80:22	80:22	7	module
NAME	80:22	80:22	8	module
LEAF_NODE	80:22	80:22	9	module
ASSIGN_OP	80:31	80:31	7	=
LEAF_NODE	80:31	80:31	8	=
RVAL	80:33	80:33	7	"TIFFForceStrileArrayWriting"
FIELD	80:33	80:33	8	"TIFFForceStrileArrayWriting"
LEAF_NODE	80:33	80:33	9	"TIFFForceStrileArrayWriting"
LEAF_NODE	80:62	80:62	4	;
SIMPLE_DECL	81:4	81:40	3	const int isTiled ; isTiled = TIFFIsTiled ( tif ) ;
VAR_DECL	81:4	81:14	4	const int isTiled ; isTiled = TIFFIsTiled ( tif )
TYPE	81:4	81:4	5	const int
TYPE_NAME	81:4	81:10	6	const int
LEAF_NODE	81:4	81:4	7	const
LEAF_NODE	81:10	81:10	7	int
NAME	81:14	81:14	5	isTiled
LEAF_NODE	81:14	81:14	6	isTiled
LEAF_NODE	0:0	0:0	5	;
INIT	81:14	81:14	5	isTiled = TIFFIsTiled ( tif )
ASSIGN	81:14	81:24	6	isTiled = TIFFIsTiled ( tif )
LVAL	81:14	81:14	7	isTiled
NAME	81:14	81:14	8	isTiled
LEAF_NODE	81:14	81:14	9	isTiled
ASSIGN_OP	81:22	81:22	7	=
LEAF_NODE	81:22	81:22	8	=
RVAL	81:24	81:24	7	TIFFIsTiled ( tif )
FUNCTION_CALL	81:24	81:39	8	TIFFIsTiled ( tif )
CALLEE	81:24	81:24	9	TIFFIsTiled
LEAF_NODE	81:24	81:24	10	TIFFIsTiled
LEAF_NODE	81:35	81:35	9	(
ARGUMENT	81:36	81:36	9	tif
FIELD	81:36	81:36	10	tif
LEAF_NODE	81:36	81:36	11	tif
LEAF_NODE	81:39	81:39	9	)
LEAF_NODE	81:40	81:40	4	;
SELECTION	83:4	84:4	3	
KEYWORD	83:4	83:4	4	if
LEAF_NODE	83:4	83:4	5	if
LEAF_NODE	83:7	83:7	4	(
CONDITION	83:8	83:8	4	tif -> tif_mode == O_RDONLY
EXPR	83:8	83:25	5	tif -> tif_mode == O_RDONLY
FIELD	83:8	83:13	6	tif -> tif_mode
LEAF_NODE	83:8	83:8	7	tif
LEAF_NODE	83:11	83:11	7	->
LEAF_NODE	83:13	83:13	7	tif_mode
EQ_OPERATOR	83:22	83:22	6	==
LEAF_NODE	83:22	83:22	7	==
FIELD	83:25	83:25	6	O_RDONLY
LEAF_NODE	83:25	83:25	7	O_RDONLY
LEAF_NODE	83:33	83:33	4	)
STATEMENTS	84:4	88:4	4	
LEAF_NODE	84:4	84:4	5	{
STATEMENTS	85:8	87:8	5	
EXPR_STATEMENT	85:8	86:53	6	TIFFErrorExt ( tif -> tif_clientdata , tif -> tif_name , "File opened in read-only mode" ) ;
EXPR	85:8	85:8	7	TIFFErrorExt ( tif -> tif_clientdata , tif -> tif_name , "File opened in read-only mode" )
FUNCTION_CALL	85:8	86:52	8	TIFFErrorExt ( tif -> tif_clientdata , tif -> tif_name , "File opened in read-only mode" )
CALLEE	85:8	85:8	9	TIFFErrorExt
LEAF_NODE	85:8	85:8	10	TIFFErrorExt
LEAF_NODE	85:20	85:20	9	(
ARGUMENT	85:21	85:21	9	tif -> tif_clientdata
FIELD	85:21	85:26	10	tif -> tif_clientdata
LEAF_NODE	85:21	85:21	11	tif
LEAF_NODE	85:24	85:24	11	->
LEAF_NODE	85:26	85:26	11	tif_clientdata
LEAF_NODE	85:40	85:40	9	,
ARGUMENT	85:42	85:42	9	tif -> tif_name
FIELD	85:42	85:47	10	tif -> tif_name
LEAF_NODE	85:42	85:42	11	tif
LEAF_NODE	85:45	85:45	11	->
LEAF_NODE	85:47	85:47	11	tif_name
LEAF_NODE	85:55	85:55	9	,
ARGUMENT	86:21	86:21	9	"File opened in read-only mode"
FIELD	86:21	86:21	10	"File opened in read-only mode"
LEAF_NODE	86:21	86:21	11	"File opened in read-only mode"
LEAF_NODE	86:52	86:52	9	)
LEAF_NODE	86:53	86:53	7	;
JUMP_STATEMENT	87:8	87:16	6	return 0 ;
KEYWORD	87:8	87:8	7	return
LEAF_NODE	87:8	87:8	8	return
DESTINATION	87:15	87:15	7	0
EXPR	87:15	87:15	8	0
FIELD	87:15	87:15	9	0
LEAF_NODE	87:15	87:15	10	0
LEAF_NODE	87:16	87:16	7	;
LEAF_NODE	88:4	88:4	5	}
SELECTION	89:4	90:4	3	
KEYWORD	89:4	89:4	4	if
LEAF_NODE	89:4	89:4	5	if
LEAF_NODE	89:6	89:6	4	(
CONDITION	89:8	89:8	4	tif -> tif_diroff == 0
EXPR	89:8	89:27	5	tif -> tif_diroff == 0
FIELD	89:8	89:13	6	tif -> tif_diroff
LEAF_NODE	89:8	89:8	7	tif
LEAF_NODE	89:11	89:11	7	->
LEAF_NODE	89:13	89:13	7	tif_diroff
EQ_OPERATOR	89:24	89:24	6	==
LEAF_NODE	89:24	89:24	7	==
FIELD	89:27	89:27	6	0
LEAF_NODE	89:27	89:27	7	0
LEAF_NODE	89:29	89:29	4	)
STATEMENTS	90:4	94:4	4	
LEAF_NODE	90:4	90:4	5	{
STATEMENTS	91:8	93:8	5	
EXPR_STATEMENT	91:8	92:58	6	TIFFErrorExt ( tif -> tif_clientdata , module , "Directory has not yet been written" ) ;
EXPR	91:8	91:8	7	TIFFErrorExt ( tif -> tif_clientdata , module , "Directory has not yet been written" )
FUNCTION_CALL	91:8	92:57	8	TIFFErrorExt ( tif -> tif_clientdata , module , "Directory has not yet been written" )
CALLEE	91:8	91:8	9	TIFFErrorExt
LEAF_NODE	91:8	91:8	10	TIFFErrorExt
LEAF_NODE	91:20	91:20	9	(
ARGUMENT	91:21	91:21	9	tif -> tif_clientdata
FIELD	91:21	91:26	10	tif -> tif_clientdata
LEAF_NODE	91:21	91:21	11	tif
LEAF_NODE	91:24	91:24	11	->
LEAF_NODE	91:26	91:26	11	tif_clientdata
LEAF_NODE	91:40	91:40	9	,
ARGUMENT	91:42	91:42	9	module
FIELD	91:42	91:42	10	module
LEAF_NODE	91:42	91:42	11	module
LEAF_NODE	91:48	91:48	9	,
ARGUMENT	92:21	92:21	9	"Directory has not yet been written"
FIELD	92:21	92:21	10	"Directory has not yet been written"
LEAF_NODE	92:21	92:21	11	"Directory has not yet been written"
LEAF_NODE	92:57	92:57	9	)
LEAF_NODE	92:58	92:58	7	;
JUMP_STATEMENT	93:8	93:16	6	return 0 ;
KEYWORD	93:8	93:8	7	return
LEAF_NODE	93:8	93:8	8	return
DESTINATION	93:15	93:15	7	0
EXPR	93:15	93:15	8	0
FIELD	93:15	93:15	9	0
LEAF_NODE	93:15	93:15	10	0
LEAF_NODE	93:16	93:16	7	;
LEAF_NODE	94:4	94:4	5	}
SELECTION	95:4	96:4	3	
KEYWORD	95:4	95:4	4	if
LEAF_NODE	95:4	95:4	5	if
LEAF_NODE	95:6	95:6	4	(
CONDITION	95:8	95:8	4	( tif -> tif_flags & TIFF_DIRTYDIRECT ) != 0
EXPR	95:8	95:47	5	( tif -> tif_flags & TIFF_DIRTYDIRECT ) != 0
LEAF_NODE	95:8	95:8	6	(
FIELD	95:9	95:14	6	tif -> tif_flags
LEAF_NODE	95:9	95:9	7	tif
LEAF_NODE	95:12	95:12	7	->
LEAF_NODE	95:14	95:14	7	tif_flags
LEAF_NODE	95:24	95:24	6	&
FIELD	95:26	95:26	6	TIFF_DIRTYDIRECT
LEAF_NODE	95:26	95:26	7	TIFF_DIRTYDIRECT
LEAF_NODE	95:42	95:42	6	)
EQ_OPERATOR	95:44	95:44	6	!=
LEAF_NODE	95:44	95:44	7	!=
FIELD	95:47	95:47	6	0
LEAF_NODE	95:47	95:47	7	0
LEAF_NODE	95:49	95:49	4	)
STATEMENTS	96:4	101:4	4	
LEAF_NODE	96:4	96:4	5	{
STATEMENTS	97:8	100:8	5	
LEAF_NODE	97:8	97:8	6	TIFFErrorExt
LEAF_NODE	97:20	97:20	6	(
LEAF_NODE	97:21	97:21	6	tif
LEAF_NODE	97:24	97:24	6	->
LEAF_NODE	97:26	97:26	6	tif_clientdata
LEAF_NODE	97:40	97:40	6	,
LEAF_NODE	97:42	97:42	6	module
LEAF_NODE	97:48	97:48	6	,
LEAF_NODE	98:21	98:21	6	"Directory has changes other than the strile arrays. "
LEAF_NODE	99:21	99:21	6	"TIFFRewriteDirectory() should be called instead"
LEAF_NODE	99:70	99:70	6	)
LEAF_NODE	99:71	99:71	6	;
JUMP_STATEMENT	100:8	100:16	6	return 0 ;
KEYWORD	100:8	100:8	7	return
LEAF_NODE	100:8	100:8	8	return
DESTINATION	100:15	100:15	7	0
EXPR	100:15	100:15	8	0
FIELD	100:15	100:15	9	0
LEAF_NODE	100:15	100:15	10	0
LEAF_NODE	100:16	100:16	7	;
LEAF_NODE	101:4	101:4	5	}
SELECTION	103:4	104:4	3	
KEYWORD	103:4	103:4	4	if
LEAF_NODE	103:4	103:4	5	if
LEAF_NODE	103:6	103:6	4	(
CONDITION	103:8	103:8	4	! ( tif -> tif_flags & TIFF_DIRTYSTRIP )
EXPR	103:8	103:8	5	! ( tif -> tif_flags & TIFF_DIRTYSTRIP )
UNARY_EXPR	103:8	103:42	6	! ( tif -> tif_flags & TIFF_DIRTYSTRIP )
UNARY_OPERATOR	103:8	103:8	7	!
LEAF_NODE	103:8	103:8	8	!
LEAF_NODE	103:9	103:9	7	(
FIELD	103:10	103:15	7	tif -> tif_flags
LEAF_NODE	103:10	103:10	8	tif
LEAF_NODE	103:13	103:13	8	->
LEAF_NODE	103:15	103:15	8	tif_flags
LEAF_NODE	103:25	103:25	7	&
FIELD	103:27	103:27	7	TIFF_DIRTYSTRIP
LEAF_NODE	103:27	103:27	8	TIFF_DIRTYSTRIP
LEAF_NODE	103:42	103:42	7	)
LEAF_NODE	103:44	103:44	4	)
STATEMENTS	104:4	122:4	4	
LEAF_NODE	104:4	104:4	5	{
STATEMENTS	105:8	120:8	5	
SELECTION	105:8	113:8	6	
KEYWORD	105:8	105:8	7	if
LEAF_NODE	105:8	105:8	8	if
LEAF_NODE	105:10	105:10	7	(
CONDITION	105:12	105:12	7	! ( tif -> tif_dir . td_stripoffset_entry . tdir_tag != 0 && tif -> tif_dir . td_stripoffset_entry . tdir_count == 0 && tif -> tif_dir . td_stripoffset_entry . tdir_type == 0 && tif -> tif_dir . td_stripoffset_entry . tdir_offset . toff_long8 == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_tag != 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0 )
EXPR	105:12	105:12	8	! ( tif -> tif_dir . td_stripoffset_entry . tdir_tag != 0 && tif -> tif_dir . td_stripoffset_entry . tdir_count == 0 && tif -> tif_dir . td_stripoffset_entry . tdir_type == 0 && tif -> tif_dir . td_stripoffset_entry . tdir_offset . toff_long8 == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_tag != 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0 )
UNARY_EXPR	105:12	112:77	9	! ( tif -> tif_dir . td_stripoffset_entry . tdir_tag != 0 && tif -> tif_dir . td_stripoffset_entry . tdir_count == 0 && tif -> tif_dir . td_stripoffset_entry . tdir_type == 0 && tif -> tif_dir . td_stripoffset_entry . tdir_offset . toff_long8 == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_tag != 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0 )
UNARY_OPERATOR	105:12	105:12	10	!
LEAF_NODE	105:12	105:12	11	!
LEAF_NODE	105:13	105:13	10	(
AND	105:14	106:13	10	tif -> tif_dir . td_stripoffset_entry . tdir_tag != 0 && tif -> tif_dir . td_stripoffset_entry . tdir_count == 0 && tif -> tif_dir . td_stripoffset_entry . tdir_type == 0 && tif -> tif_dir . td_stripoffset_entry . tdir_offset . toff_long8 == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_tag != 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0
EXPR	105:14	105:60	11	tif -> tif_dir . td_stripoffset_entry . tdir_tag != 0
FIELD	105:14	105:48	12	tif -> tif_dir . td_stripoffset_entry . tdir_tag
LEAF_NODE	105:14	105:14	13	tif
LEAF_NODE	105:17	105:17	13	->
LEAF_NODE	105:19	105:19	13	tif_dir
LEAF_NODE	105:26	105:26	13	.
LEAF_NODE	105:27	105:27	13	td_stripoffset_entry
LEAF_NODE	105:47	105:47	13	.
LEAF_NODE	105:48	105:48	13	tdir_tag
EQ_OPERATOR	105:57	105:57	12	!=
LEAF_NODE	105:57	105:57	13	!=
FIELD	105:60	105:60	12	0
LEAF_NODE	105:60	105:60	13	0
LEAF_NODE	105:62	105:62	11	&&
EXPR	106:13	106:13	11	tif -> tif_dir . td_stripoffset_entry . tdir_count == 0 && tif -> tif_dir . td_stripoffset_entry . tdir_type == 0 && tif -> tif_dir . td_stripoffset_entry . tdir_offset . toff_long8 == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_tag != 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0
AND	106:13	107:13	12	tif -> tif_dir . td_stripoffset_entry . tdir_count == 0 && tif -> tif_dir . td_stripoffset_entry . tdir_type == 0 && tif -> tif_dir . td_stripoffset_entry . tdir_offset . toff_long8 == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_tag != 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0
EXPR	106:13	106:61	13	tif -> tif_dir . td_stripoffset_entry . tdir_count == 0
FIELD	106:13	106:47	14	tif -> tif_dir . td_stripoffset_entry . tdir_count
LEAF_NODE	106:13	106:13	15	tif
LEAF_NODE	106:16	106:16	15	->
LEAF_NODE	106:18	106:18	15	tif_dir
LEAF_NODE	106:25	106:25	15	.
LEAF_NODE	106:26	106:26	15	td_stripoffset_entry
LEAF_NODE	106:46	106:46	15	.
LEAF_NODE	106:47	106:47	15	tdir_count
EQ_OPERATOR	106:58	106:58	14	==
LEAF_NODE	106:58	106:58	15	==
FIELD	106:61	106:61	14	0
LEAF_NODE	106:61	106:61	15	0
LEAF_NODE	106:63	106:63	13	&&
EXPR	107:13	107:13	13	tif -> tif_dir . td_stripoffset_entry . tdir_type == 0 && tif -> tif_dir . td_stripoffset_entry . tdir_offset . toff_long8 == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_tag != 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0
AND	107:13	108:13	14	tif -> tif_dir . td_stripoffset_entry . tdir_type == 0 && tif -> tif_dir . td_stripoffset_entry . tdir_offset . toff_long8 == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_tag != 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0
EXPR	107:13	107:60	15	tif -> tif_dir . td_stripoffset_entry . tdir_type == 0
FIELD	107:13	107:47	16	tif -> tif_dir . td_stripoffset_entry . tdir_type
LEAF_NODE	107:13	107:13	17	tif
LEAF_NODE	107:16	107:16	17	->
LEAF_NODE	107:18	107:18	17	tif_dir
LEAF_NODE	107:25	107:25	17	.
LEAF_NODE	107:26	107:26	17	td_stripoffset_entry
LEAF_NODE	107:46	107:46	17	.
LEAF_NODE	107:47	107:47	17	tdir_type
EQ_OPERATOR	107:57	107:57	16	==
LEAF_NODE	107:57	107:57	17	==
FIELD	107:60	107:60	16	0
LEAF_NODE	107:60	107:60	17	0
LEAF_NODE	107:62	107:62	15	&&
EXPR	108:13	108:13	15	tif -> tif_dir . td_stripoffset_entry . tdir_offset . toff_long8 == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_tag != 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0
AND	108:13	109:13	16	tif -> tif_dir . td_stripoffset_entry . tdir_offset . toff_long8 == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_tag != 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0
EXPR	108:13	108:73	17	tif -> tif_dir . td_stripoffset_entry . tdir_offset . toff_long8 == 0
FIELD	108:13	108:59	18	tif -> tif_dir . td_stripoffset_entry . tdir_offset . toff_long8
LEAF_NODE	108:13	108:13	19	tif
LEAF_NODE	108:16	108:16	19	->
LEAF_NODE	108:18	108:18	19	tif_dir
LEAF_NODE	108:25	108:25	19	.
LEAF_NODE	108:26	108:26	19	td_stripoffset_entry
LEAF_NODE	108:46	108:46	19	.
LEAF_NODE	108:47	108:47	19	tdir_offset
LEAF_NODE	108:58	108:58	19	.
LEAF_NODE	108:59	108:59	19	toff_long8
EQ_OPERATOR	108:70	108:70	18	==
LEAF_NODE	108:70	108:70	19	==
FIELD	108:73	108:73	18	0
LEAF_NODE	108:73	108:73	19	0
LEAF_NODE	108:75	108:75	17	&&
EXPR	109:13	109:13	17	tif -> tif_dir . td_stripbytecount_entry . tdir_tag != 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0
AND	109:13	110:13	18	tif -> tif_dir . td_stripbytecount_entry . tdir_tag != 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0
EXPR	109:13	109:62	19	tif -> tif_dir . td_stripbytecount_entry . tdir_tag != 0
FIELD	109:13	109:50	20	tif -> tif_dir . td_stripbytecount_entry . tdir_tag
LEAF_NODE	109:13	109:13	21	tif
LEAF_NODE	109:16	109:16	21	->
LEAF_NODE	109:18	109:18	21	tif_dir
LEAF_NODE	109:25	109:25	21	.
LEAF_NODE	109:26	109:26	21	td_stripbytecount_entry
LEAF_NODE	109:49	109:49	21	.
LEAF_NODE	109:50	109:50	21	tdir_tag
EQ_OPERATOR	109:59	109:59	20	!=
LEAF_NODE	109:59	109:59	21	!=
FIELD	109:62	109:62	20	0
LEAF_NODE	109:62	109:62	21	0
LEAF_NODE	109:64	109:64	19	&&
EXPR	110:13	110:13	19	tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0
AND	110:13	111:13	20	tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0
EXPR	110:13	110:64	21	tif -> tif_dir . td_stripbytecount_entry . tdir_count == 0
FIELD	110:13	110:50	22	tif -> tif_dir . td_stripbytecount_entry . tdir_count
LEAF_NODE	110:13	110:13	23	tif
LEAF_NODE	110:16	110:16	23	->
LEAF_NODE	110:18	110:18	23	tif_dir
LEAF_NODE	110:25	110:25	23	.
LEAF_NODE	110:26	110:26	23	td_stripbytecount_entry
LEAF_NODE	110:49	110:49	23	.
LEAF_NODE	110:50	110:50	23	tdir_count
EQ_OPERATOR	110:61	110:61	22	==
LEAF_NODE	110:61	110:61	23	==
FIELD	110:64	110:64	22	0
LEAF_NODE	110:64	110:64	23	0
LEAF_NODE	110:66	110:66	21	&&
EXPR	111:13	111:13	21	tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0
AND	111:13	112:13	22	tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0 && tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0
EXPR	111:13	111:63	23	tif -> tif_dir . td_stripbytecount_entry . tdir_type == 0
FIELD	111:13	111:50	24	tif -> tif_dir . td_stripbytecount_entry . tdir_type
LEAF_NODE	111:13	111:13	25	tif
LEAF_NODE	111:16	111:16	25	->
LEAF_NODE	111:18	111:18	25	tif_dir
LEAF_NODE	111:25	111:25	25	.
LEAF_NODE	111:26	111:26	25	td_stripbytecount_entry
LEAF_NODE	111:49	111:49	25	.
LEAF_NODE	111:50	111:50	25	tdir_type
EQ_OPERATOR	111:60	111:60	24	==
LEAF_NODE	111:60	111:60	25	==
FIELD	111:63	111:63	24	0
LEAF_NODE	111:63	111:63	25	0
LEAF_NODE	111:65	111:65	23	&&
EXPR	112:13	112:76	23	tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8 == 0
FIELD	112:13	112:62	24	tif -> tif_dir . td_stripbytecount_entry . tdir_offset . toff_long8
LEAF_NODE	112:13	112:13	25	tif
LEAF_NODE	112:16	112:16	25	->
LEAF_NODE	112:18	112:18	25	tif_dir
LEAF_NODE	112:25	112:25	25	.
LEAF_NODE	112:26	112:26	25	td_stripbytecount_entry
LEAF_NODE	112:49	112:49	25	.
LEAF_NODE	112:50	112:50	25	tdir_offset
LEAF_NODE	112:61	112:61	25	.
LEAF_NODE	112:62	112:62	25	toff_long8
EQ_OPERATOR	112:73	112:73	24	==
LEAF_NODE	112:73	112:73	25	==
FIELD	112:76	112:76	24	0
LEAF_NODE	112:76	112:76	25	0
LEAF_NODE	112:77	112:77	10	)
LEAF_NODE	112:79	112:79	7	)
STATEMENTS	113:8	118:8	7	
LEAF_NODE	113:8	113:8	8	{
STATEMENTS	114:12	117:12	8	
LEAF_NODE	114:12	114:12	9	TIFFErrorExt
LEAF_NODE	114:24	114:24	9	(
LEAF_NODE	114:25	114:25	9	tif
LEAF_NODE	114:28	114:28	9	->
LEAF_NODE	114:30	114:30	9	tif_clientdata
LEAF_NODE	114:44	114:44	9	,
LEAF_NODE	114:46	114:46	9	module
LEAF_NODE	114:52	114:52	9	,
LEAF_NODE	115:24	115:24	9	"Function not called together with "
LEAF_NODE	116:24	116:24	9	"TIFFDeferStrileArrayWriting()"
LEAF_NODE	116:55	116:55	9	)
LEAF_NODE	116:56	116:56	9	;
JUMP_STATEMENT	117:12	117:20	9	return 0 ;
KEYWORD	117:12	117:12	10	return
LEAF_NODE	117:12	117:12	11	return
DESTINATION	117:19	117:19	10	0
EXPR	117:19	117:19	11	0
FIELD	117:19	117:19	12	0
LEAF_NODE	117:19	117:19	13	0
LEAF_NODE	117:20	117:20	10	;
LEAF_NODE	118:8	118:8	8	}
SELECTION	120:8	121:12	6	
KEYWORD	120:8	120:8	7	if
LEAF_NODE	120:8	120:8	8	if
LEAF_NODE	120:11	120:11	7	(
CONDITION	120:12	120:12	7	tif -> tif_dir . td_stripoffset_p == NULL && ! TIFFSetupStrips ( tif )
EXPR	120:12	120:12	8	tif -> tif_dir . td_stripoffset_p == NULL && ! TIFFSetupStrips ( tif )
AND	120:12	120:53	9	tif -> tif_dir . td_stripoffset_p == NULL && ! TIFFSetupStrips ( tif )
EXPR	120:12	120:45	10	tif -> tif_dir . td_stripoffset_p == NULL
FIELD	120:12	120:25	11	tif -> tif_dir . td_stripoffset_p
LEAF_NODE	120:12	120:12	12	tif
LEAF_NODE	120:15	120:15	12	->
LEAF_NODE	120:17	120:17	12	tif_dir
LEAF_NODE	120:24	120:24	12	.
LEAF_NODE	120:25	120:25	12	td_stripoffset_p
EQ_OPERATOR	120:42	120:42	11	==
LEAF_NODE	120:42	120:42	12	==
FIELD	120:45	120:45	11	NULL
LEAF_NODE	120:45	120:45	12	NULL
LEAF_NODE	120:50	120:50	10	&&
EXPR	120:53	120:53	10	! TIFFSetupStrips ( tif )
UNARY_EXPR	120:53	120:54	11	! TIFFSetupStrips ( tif )
UNARY_OPERATOR	120:53	120:53	12	!
LEAF_NODE	120:53	120:53	13	!
FUNCTION_CALL	120:54	120:73	12	TIFFSetupStrips ( tif )
CALLEE	120:54	120:54	13	TIFFSetupStrips
LEAF_NODE	120:54	120:54	14	TIFFSetupStrips
LEAF_NODE	120:69	120:69	13	(
ARGUMENT	120:70	120:70	13	tif
FIELD	120:70	120:70	14	tif
LEAF_NODE	120:70	120:70	15	tif
LEAF_NODE	120:73	120:73	13	)
LEAF_NODE	120:74	120:74	7	)
STATEMENTS	121:12	121:12	7	
JUMP_STATEMENT	121:12	121:20	8	return 0 ;
KEYWORD	121:12	121:12	9	return
LEAF_NODE	121:12	121:12	10	return
DESTINATION	121:19	121:19	9	0
EXPR	121:19	121:19	10	0
FIELD	121:19	121:19	11	0
LEAF_NODE	121:19	121:19	12	0
LEAF_NODE	121:20	121:20	9	;
LEAF_NODE	122:4	122:4	5	}
SELECTION	124:4	136:4	3	
KEYWORD	124:4	124:4	4	if
LEAF_NODE	124:4	124:4	5	if
LEAF_NODE	124:6	124:6	4	(
CONDITION	124:8	124:8	4	_TIFFRewriteField ( tif , isTiled ? TIFFTAG_TILEOFFSETS : TIFFTAG_STRIPOFFSETS , TIFF_LONG8 , tif -> tif_dir . td_nstrips , tif -> tif_dir . td_stripoffset_p ) && _TIFFRewriteField ( tif , isTiled ? TIFFTAG_TILEBYTECOUNTS : TIFFTAG_STRIPBYTECOUNTS , TIFF_LONG8 , tif -> tif_dir . td_nstrips , tif -> tif_dir . td_stripbytecount_p )
EXPR	124:8	124:8	5	_TIFFRewriteField ( tif , isTiled ? TIFFTAG_TILEOFFSETS : TIFFTAG_STRIPOFFSETS , TIFF_LONG8 , tif -> tif_dir . td_nstrips , tif -> tif_dir . td_stripoffset_p ) && _TIFFRewriteField ( tif , isTiled ? TIFFTAG_TILEBYTECOUNTS : TIFFTAG_STRIPBYTECOUNTS , TIFF_LONG8 , tif -> tif_dir . td_nstrips , tif -> tif_dir . td_stripbytecount_p )
AND	124:8	130:11	6	_TIFFRewriteField ( tif , isTiled ? TIFFTAG_TILEOFFSETS : TIFFTAG_STRIPOFFSETS , TIFF_LONG8 , tif -> tif_dir . td_nstrips , tif -> tif_dir . td_stripoffset_p ) && _TIFFRewriteField ( tif , isTiled ? TIFFTAG_TILEBYTECOUNTS : TIFFTAG_STRIPBYTECOUNTS , TIFF_LONG8 , tif -> tif_dir . td_nstrips , tif -> tif_dir . td_stripbytecount_p )
EXPR	124:8	124:8	7	_TIFFRewriteField ( tif , isTiled ? TIFFTAG_TILEOFFSETS : TIFFTAG_STRIPOFFSETS , TIFF_LONG8 , tif -> tif_dir . td_nstrips , tif -> tif_dir . td_stripoffset_p )
FUNCTION_CALL	124:8	129:57	8	_TIFFRewriteField ( tif , isTiled ? TIFFTAG_TILEOFFSETS : TIFFTAG_STRIPOFFSETS , TIFF_LONG8 , tif -> tif_dir . td_nstrips , tif -> tif_dir . td_stripoffset_p )
CALLEE	124:8	124:8	9	_TIFFRewriteField
LEAF_NODE	124:8	124:8	10	_TIFFRewriteField
LEAF_NODE	124:25	124:25	9	(
ARGUMENT	124:27	124:27	9	tif
FIELD	124:27	124:27	10	tif
LEAF_NODE	124:27	124:27	11	tif
LEAF_NODE	124:30	124:30	9	,
ARGUMENT	125:27	125:27	9	isTiled ? TIFFTAG_TILEOFFSETS : TIFFTAG_STRIPOFFSETS
COND_EXPR	125:27	126:37	10	isTiled ? TIFFTAG_TILEOFFSETS : TIFFTAG_STRIPOFFSETS
CONDITION	125:27	125:27	11	isTiled
FIELD	125:27	125:27	12	isTiled
LEAF_NODE	125:27	125:27	13	isTiled
LEAF_NODE	125:35	125:35	11	?
EXPR	125:37	125:37	11	TIFFTAG_TILEOFFSETS
FIELD	125:37	125:37	12	TIFFTAG_TILEOFFSETS
LEAF_NODE	125:37	125:37	13	TIFFTAG_TILEOFFSETS
LEAF_NODE	125:57	125:57	11	:
FIELD	126:37	126:37	11	TIFFTAG_STRIPOFFSETS
LEAF_NODE	126:37	126:37	12	TIFFTAG_STRIPOFFSETS
LEAF_NODE	126:57	126:57	9	,
ARGUMENT	127:27	127:27	9	TIFF_LONG8
FIELD	127:27	127:27	10	TIFF_LONG8
LEAF_NODE	127:27	127:27	11	TIFF_LONG8
LEAF_NODE	127:37	127:37	9	,
ARGUMENT	128:27	128:27	9	tif -> tif_dir . td_nstrips
FIELD	128:27	128:40	10	tif -> tif_dir . td_nstrips
LEAF_NODE	128:27	128:27	11	tif
LEAF_NODE	128:30	128:30	11	->
LEAF_NODE	128:32	128:32	11	tif_dir
LEAF_NODE	128:39	128:39	11	.
LEAF_NODE	128:40	128:40	11	td_nstrips
LEAF_NODE	128:50	128:50	9	,
ARGUMENT	129:27	129:27	9	tif -> tif_dir . td_stripoffset_p
FIELD	129:27	129:40	10	tif -> tif_dir . td_stripoffset_p
LEAF_NODE	129:27	129:27	11	tif
LEAF_NODE	129:30	129:30	11	->
LEAF_NODE	129:32	129:32	11	tif_dir
LEAF_NODE	129:39	129:39	11	.
LEAF_NODE	129:40	129:40	11	td_stripoffset_p
LEAF_NODE	129:57	129:57	9	)
LEAF_NODE	130:8	130:8	7	&&
EXPR	130:11	130:11	7	_TIFFRewriteField ( tif , isTiled ? TIFFTAG_TILEBYTECOUNTS : TIFFTAG_STRIPBYTECOUNTS , TIFF_LONG8 , tif -> tif_dir . td_nstrips , tif -> tif_dir . td_stripbytecount_p )
FUNCTION_CALL	130:11	135:63	8	_TIFFRewriteField ( tif , isTiled ? TIFFTAG_TILEBYTECOUNTS : TIFFTAG_STRIPBYTECOUNTS , TIFF_LONG8 , tif -> tif_dir . td_nstrips , tif -> tif_dir . td_stripbytecount_p )
CALLEE	130:11	130:11	9	_TIFFRewriteField
LEAF_NODE	130:11	130:11	10	_TIFFRewriteField
LEAF_NODE	130:28	130:28	9	(
ARGUMENT	130:30	130:30	9	tif
FIELD	130:30	130:30	10	tif
LEAF_NODE	130:30	130:30	11	tif
LEAF_NODE	130:33	130:33	9	,
ARGUMENT	131:30	131:30	9	isTiled ? TIFFTAG_TILEBYTECOUNTS : TIFFTAG_STRIPBYTECOUNTS
COND_EXPR	131:30	132:40	10	isTiled ? TIFFTAG_TILEBYTECOUNTS : TIFFTAG_STRIPBYTECOUNTS
CONDITION	131:30	131:30	11	isTiled
FIELD	131:30	131:30	12	isTiled
LEAF_NODE	131:30	131:30	13	isTiled
LEAF_NODE	131:38	131:38	11	?
EXPR	131:40	131:40	11	TIFFTAG_TILEBYTECOUNTS
FIELD	131:40	131:40	12	TIFFTAG_TILEBYTECOUNTS
LEAF_NODE	131:40	131:40	13	TIFFTAG_TILEBYTECOUNTS
LEAF_NODE	131:63	131:63	11	:
FIELD	132:40	132:40	11	TIFFTAG_STRIPBYTECOUNTS
LEAF_NODE	132:40	132:40	12	TIFFTAG_STRIPBYTECOUNTS
LEAF_NODE	132:63	132:63	9	,
ARGUMENT	133:30	133:30	9	TIFF_LONG8
FIELD	133:30	133:30	10	TIFF_LONG8
LEAF_NODE	133:30	133:30	11	TIFF_LONG8
LEAF_NODE	133:40	133:40	9	,
ARGUMENT	134:30	134:30	9	tif -> tif_dir . td_nstrips
FIELD	134:30	134:43	10	tif -> tif_dir . td_nstrips
LEAF_NODE	134:30	134:30	11	tif
LEAF_NODE	134:33	134:33	11	->
LEAF_NODE	134:35	134:35	11	tif_dir
LEAF_NODE	134:42	134:42	11	.
LEAF_NODE	134:43	134:43	11	td_nstrips
LEAF_NODE	134:53	134:53	9	,
ARGUMENT	135:30	135:30	9	tif -> tif_dir . td_stripbytecount_p
FIELD	135:30	135:43	10	tif -> tif_dir . td_stripbytecount_p
LEAF_NODE	135:30	135:30	11	tif
LEAF_NODE	135:33	135:33	11	->
LEAF_NODE	135:35	135:35	11	tif_dir
LEAF_NODE	135:42	135:42	11	.
LEAF_NODE	135:43	135:43	11	td_stripbytecount_p
LEAF_NODE	135:63	135:63	9	)
LEAF_NODE	135:65	135:65	4	)
STATEMENTS	136:4	140:4	4	
LEAF_NODE	136:4	136:4	5	{
STATEMENTS	137:8	139:8	5	
EXPR_STATEMENT	137:8	137:42	6	tif -> tif_flags &= ~TIFF_DIRTYSTRIP ;
EXPR	137:8	137:8	7	tif -> tif_flags &= ~TIFF_DIRTYSTRIP
ASSIGN	137:8	137:26	8	tif -> tif_flags &= ~TIFF_DIRTYSTRIP
LVAL	137:8	137:8	9	tif -> tif_flags
FIELD	137:8	137:13	10	tif -> tif_flags
LEAF_NODE	137:8	137:8	11	tif
LEAF_NODE	137:11	137:11	11	->
LEAF_NODE	137:13	137:13	11	tif_flags
ASSIGN_OP	137:23	137:23	9	&=
LEAF_NODE	137:23	137:23	10	&=
RVAL	137:26	137:26	9	~TIFF_DIRTYSTRIP
FIELD	137:26	137:26	10	~TIFF_DIRTYSTRIP
LEAF_NODE	137:26	137:26	11	~TIFF_DIRTYSTRIP
LEAF_NODE	137:42	137:42	7	;
EXPR_STATEMENT	138:8	138:43	6	tif -> tif_flags &= ~TIFF_BEENWRITING ;
EXPR	138:8	138:8	7	tif -> tif_flags &= ~TIFF_BEENWRITING
ASSIGN	138:8	138:26	8	tif -> tif_flags &= ~TIFF_BEENWRITING
LVAL	138:8	138:8	9	tif -> tif_flags
FIELD	138:8	138:13	10	tif -> tif_flags
LEAF_NODE	138:8	138:8	11	tif
LEAF_NODE	138:11	138:11	11	->
LEAF_NODE	138:13	138:13	11	tif_flags
ASSIGN_OP	138:23	138:23	9	&=
LEAF_NODE	138:23	138:23	10	&=
RVAL	138:26	138:26	9	~TIFF_BEENWRITING
FIELD	138:26	138:26	10	~TIFF_BEENWRITING
LEAF_NODE	138:26	138:26	11	~TIFF_BEENWRITING
LEAF_NODE	138:43	138:43	7	;
JUMP_STATEMENT	139:8	139:16	6	return 1 ;
KEYWORD	139:8	139:8	7	return
LEAF_NODE	139:8	139:8	8	return
DESTINATION	139:15	139:15	7	1
EXPR	139:15	139:15	8	1
FIELD	139:15	139:15	9	1
LEAF_NODE	139:15	139:15	10	1
LEAF_NODE	139:16	139:16	7	;
LEAF_NODE	140:4	140:4	5	}
JUMP_STATEMENT	142:4	142:12	3	return 0 ;
KEYWORD	142:4	142:4	4	return
LEAF_NODE	142:4	142:4	5	return
DESTINATION	142:11	142:11	4	0
EXPR	142:11	142:11	5	0
FIELD	142:11	142:11	6	0
LEAF_NODE	142:11	142:11	7	0
LEAF_NODE	142:12	142:12	4	;
LEAF_NODE	143:0	143:0	2	}
FUNCTION_DEF	154:0	165:0	1	
RETURN_TYPE	154:0	154:0	2	int
TYPE_NAME	154:0	154:0	3	int
LEAF_NODE	154:0	154:0	4	int
FUNCTION_NAME	155:0	155:0	2	TIFFFlushData
LEAF_NODE	155:0	155:0	3	TIFFFlushData
PARAMETER_LIST	155:13	155:23	2	( TIFF * tif )
LEAF_NODE	155:13	155:13	3	(
PARAMETER_DECL	155:14	155:20	3	TIFF * tif
TYPE	155:14	155:18	4	TIFF *
TYPE_NAME	155:14	155:14	5	TIFF
LEAF_NODE	155:14	155:14	6	TIFF
POINTER	155:18	155:18	5	*
LEAF_NODE	155:18	155:18	6	*
NAME	155:20	155:20	4	tif
LEAF_NODE	155:20	155:20	5	tif
LEAF_NODE	155:23	155:23	3	)
LEAF_NODE	156:0	156:0	2	{
STATEMENTS	157:1	164:1	2	
SELECTION	157:1	158:2	3	
KEYWORD	157:1	157:1	4	if
LEAF_NODE	157:1	157:1	5	if
LEAF_NODE	157:4	157:4	4	(
CONDITION	157:5	157:5	4	( tif -> tif_flags & TIFF_BEENWRITING ) == 0
EXPR	157:5	157:44	5	( tif -> tif_flags & TIFF_BEENWRITING ) == 0
LEAF_NODE	157:5	157:5	6	(
FIELD	157:6	157:11	6	tif -> tif_flags
LEAF_NODE	157:6	157:6	7	tif
LEAF_NODE	157:9	157:9	7	->
LEAF_NODE	157:11	157:11	7	tif_flags
LEAF_NODE	157:21	157:21	6	&
FIELD	157:23	157:23	6	TIFF_BEENWRITING
LEAF_NODE	157:23	157:23	7	TIFF_BEENWRITING
LEAF_NODE	157:39	157:39	6	)
EQ_OPERATOR	157:41	157:41	6	==
LEAF_NODE	157:41	157:41	7	==
FIELD	157:44	157:44	6	0
LEAF_NODE	157:44	157:44	7	0
LEAF_NODE	157:45	157:45	4	)
STATEMENTS	158:2	158:2	4	
JUMP_STATEMENT	158:2	158:12	5	return ( 1 ) ;
KEYWORD	158:2	158:2	6	return
LEAF_NODE	158:2	158:2	7	return
DESTINATION	158:9	158:9	6	( 1 )
EXPR	158:9	158:11	7	( 1 )
LEAF_NODE	158:9	158:9	8	(
FIELD	158:10	158:10	8	1
LEAF_NODE	158:10	158:10	9	1
LEAF_NODE	158:11	158:11	8	)
LEAF_NODE	158:12	158:12	6	;
SELECTION	159:1	159:39	3	
KEYWORD	159:1	159:1	4	if
LEAF_NODE	159:1	159:1	5	if
LEAF_NODE	159:4	159:4	4	(
CONDITION	159:5	159:5	4	tif -> tif_flags & TIFF_POSTENCODE
EXPR	159:5	159:22	5	tif -> tif_flags & TIFF_POSTENCODE
FIELD	159:5	159:10	6	tif -> tif_flags
LEAF_NODE	159:5	159:5	7	tif
LEAF_NODE	159:8	159:8	7	->
LEAF_NODE	159:10	159:10	7	tif_flags
LEAF_NODE	159:20	159:20	6	&
FIELD	159:22	159:22	6	TIFF_POSTENCODE
LEAF_NODE	159:22	159:22	7	TIFF_POSTENCODE
LEAF_NODE	159:37	159:37	4	)
STATEMENTS	159:39	163:1	4	
LEAF_NODE	159:39	159:39	5	{
STATEMENTS	160:2	161:2	5	
EXPR_STATEMENT	160:2	160:36	6	tif -> tif_flags &= ~TIFF_POSTENCODE ;
EXPR	160:2	160:2	7	tif -> tif_flags &= ~TIFF_POSTENCODE
ASSIGN	160:2	160:20	8	tif -> tif_flags &= ~TIFF_POSTENCODE
LVAL	160:2	160:2	9	tif -> tif_flags
FIELD	160:2	160:7	10	tif -> tif_flags
LEAF_NODE	160:2	160:2	11	tif
LEAF_NODE	160:5	160:5	11	->
LEAF_NODE	160:7	160:7	11	tif_flags
ASSIGN_OP	160:17	160:17	9	&=
LEAF_NODE	160:17	160:17	10	&=
RVAL	160:20	160:20	9	~TIFF_POSTENCODE
FIELD	160:20	160:20	10	~TIFF_POSTENCODE
LEAF_NODE	160:20	160:20	11	~TIFF_POSTENCODE
LEAF_NODE	160:36	160:36	7	;
SELECTION	161:2	162:3	6	
KEYWORD	161:2	161:2	7	if
LEAF_NODE	161:2	161:2	8	if
LEAF_NODE	161:5	161:5	7	(
CONDITION	161:6	161:6	7	! ( * tif -> tif_postencode ) ( tif )
EXPR	161:6	161:6	8	! ( * tif -> tif_postencode ) ( tif )
UNARY_EXPR	161:6	161:7	9	! ( * tif -> tif_postencode ) ( tif )
UNARY_OPERATOR	161:6	161:6	10	!
LEAF_NODE	161:6	161:6	11	!
FUNCTION_CALL	161:7	161:33	10	( * tif -> tif_postencode ) ( tif )
CALLEE	161:7	161:28	11	( * tif -> tif_postencode )
LEAF_NODE	161:7	161:7	12	(
UNARY_EXPR	161:8	161:9	12	* tif -> tif_postencode
UNARY_OPERATOR	161:8	161:8	13	*
LEAF_NODE	161:8	161:8	14	*
FIELD	161:9	161:14	13	tif -> tif_postencode
LEAF_NODE	161:9	161:9	14	tif
LEAF_NODE	161:12	161:12	14	->
LEAF_NODE	161:14	161:14	14	tif_postencode
LEAF_NODE	161:28	161:28	12	)
LEAF_NODE	161:29	161:29	11	(
ARGUMENT	161:30	161:30	11	tif
FIELD	161:30	161:30	12	tif
LEAF_NODE	161:30	161:30	13	tif
LEAF_NODE	161:33	161:33	11	)
LEAF_NODE	161:34	161:34	7	)
STATEMENTS	162:3	162:3	7	
JUMP_STATEMENT	162:3	162:13	8	return ( 0 ) ;
KEYWORD	162:3	162:3	9	return
LEAF_NODE	162:3	162:3	10	return
DESTINATION	162:10	162:10	9	( 0 )
EXPR	162:10	162:12	10	( 0 )
LEAF_NODE	162:10	162:10	11	(
FIELD	162:11	162:11	11	0
LEAF_NODE	162:11	162:11	12	0
LEAF_NODE	162:12	162:12	11	)
LEAF_NODE	162:13	162:13	9	;
LEAF_NODE	163:1	163:1	5	}
JUMP_STATEMENT	164:1	164:29	3	return ( TIFFFlushData1 ( tif ) ) ;
KEYWORD	164:1	164:1	4	return
LEAF_NODE	164:1	164:1	5	return
DESTINATION	164:8	164:8	4	( TIFFFlushData1 ( tif ) )
EXPR	164:8	164:28	5	( TIFFFlushData1 ( tif ) )
LEAF_NODE	164:8	164:8	6	(
FUNCTION_CALL	164:9	164:27	6	TIFFFlushData1 ( tif )
CALLEE	164:9	164:9	7	TIFFFlushData1
LEAF_NODE	164:9	164:9	8	TIFFFlushData1
LEAF_NODE	164:23	164:23	7	(
ARGUMENT	164:24	164:24	7	tif
FIELD	164:24	164:24	8	tif
LEAF_NODE	164:24	164:24	9	tif
LEAF_NODE	164:27	164:27	7	)
LEAF_NODE	164:28	164:28	6	)
LEAF_NODE	164:29	164:29	4	;
LEAF_NODE	165:0	165:0	2	}
