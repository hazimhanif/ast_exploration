SOURCE_FILE	14:0	33:2	0	
FUNCTION_DEF	14:0	28:0	1	
RETURN_TYPE	14:0	14:0	2	int
TYPE_NAME	14:0	14:0	3	int
LEAF_NODE	14:0	14:0	4	int
FUNCTION_NAME	14:4	14:4	2	_TIFF_vsnprintf_f
LEAF_NODE	14:4	14:4	3	_TIFF_vsnprintf_f
PARAMETER_LIST	14:21	14:76	2	( char * str , size_t size , const char * format , va_list ap )
LEAF_NODE	14:21	14:21	3	(
PARAMETER_DECL	14:22	14:28	3	char * str
TYPE	14:22	14:26	4	char *
TYPE_NAME	14:22	14:22	5	char
LEAF_NODE	14:22	14:22	6	char
POINTER	14:26	14:26	5	*
LEAF_NODE	14:26	14:26	6	*
NAME	14:28	14:28	4	str
LEAF_NODE	14:28	14:28	5	str
LEAF_NODE	14:31	14:31	3	,
PARAMETER_DECL	14:33	14:40	3	size_t size
TYPE	14:33	14:33	4	size_t
TYPE_NAME	14:33	14:33	5	size_t
LEAF_NODE	14:33	14:33	6	size_t
NAME	14:40	14:40	4	size
LEAF_NODE	14:40	14:40	5	size
LEAF_NODE	14:44	14:44	3	,
PARAMETER_DECL	14:46	14:58	3	const char * format
TYPE	14:46	14:56	4	const char *
TYPE_NAME	14:46	14:52	5	const char
LEAF_NODE	14:46	14:46	6	const
LEAF_NODE	14:52	14:52	6	char
POINTER	14:56	14:56	5	*
LEAF_NODE	14:56	14:56	6	*
NAME	14:58	14:58	4	format
LEAF_NODE	14:58	14:58	5	format
LEAF_NODE	14:64	14:64	3	,
PARAMETER_DECL	14:66	14:74	3	va_list ap
TYPE	14:66	14:66	4	va_list
TYPE_NAME	14:66	14:66	5	va_list
LEAF_NODE	14:66	14:66	6	va_list
NAME	14:74	14:74	4	ap
LEAF_NODE	14:74	14:74	5	ap
LEAF_NODE	14:76	14:76	3	)
LEAF_NODE	15:0	15:0	2	{
STATEMENTS	16:2	27:2	2	
SIMPLE_DECL	16:2	16:16	3	int count ; count = - 1 ;
VAR_DECL	16:2	16:6	4	int count ; count = - 1
TYPE	16:2	16:2	5	int
TYPE_NAME	16:2	16:2	6	int
LEAF_NODE	16:2	16:2	7	int
NAME	16:6	16:6	5	count
LEAF_NODE	16:6	16:6	6	count
LEAF_NODE	0:0	0:0	5	;
INIT	16:6	16:6	5	count = - 1
ASSIGN	16:6	16:14	6	count = - 1
LVAL	16:6	16:6	7	count
NAME	16:6	16:6	8	count
LEAF_NODE	16:6	16:6	9	count
ASSIGN_OP	16:12	16:12	7	=
LEAF_NODE	16:12	16:12	8	=
RVAL	16:14	16:14	7	- 1
UNARY_EXPR	16:14	16:15	8	- 1
UNARY_OPERATOR	16:14	16:14	9	-
LEAF_NODE	16:14	16:14	10	-
FIELD	16:15	16:15	9	1
LEAF_NODE	16:15	16:15	10	1
LEAF_NODE	16:16	16:16	4	;
SELECTION	18:2	20:4	3	
KEYWORD	18:2	18:2	4	if
LEAF_NODE	18:2	18:2	5	if
LEAF_NODE	18:5	18:5	4	(
CONDITION	18:6	18:6	4	size != 0
EXPR	18:6	18:14	5	size != 0
FIELD	18:6	18:6	6	size
LEAF_NODE	18:6	18:6	7	size
EQ_OPERATOR	18:11	18:11	6	!=
LEAF_NODE	18:11	18:11	7	!=
FIELD	18:14	18:14	6	0
LEAF_NODE	18:14	18:14	7	0
LEAF_NODE	18:15	18:15	4	)
STATEMENTS	20:4	20:4	4	
EXPR_STATEMENT	20:4	20:45	5	count = _vsnprintf ( str , size , format , ap ) ;
EXPR	20:4	20:4	6	count = _vsnprintf ( str , size , format , ap )
ASSIGN	20:4	20:12	7	count = _vsnprintf ( str , size , format , ap )
LVAL	20:4	20:4	8	count
FIELD	20:4	20:4	9	count
LEAF_NODE	20:4	20:4	10	count
ASSIGN_OP	20:10	20:10	8	=
LEAF_NODE	20:10	20:10	9	=
RVAL	20:12	20:12	8	_vsnprintf ( str , size , format , ap )
FUNCTION_CALL	20:12	20:44	9	_vsnprintf ( str , size , format , ap )
CALLEE	20:12	20:12	10	_vsnprintf
LEAF_NODE	20:12	20:12	11	_vsnprintf
LEAF_NODE	20:22	20:22	10	(
ARGUMENT	20:23	20:23	10	str
FIELD	20:23	20:23	11	str
LEAF_NODE	20:23	20:23	12	str
LEAF_NODE	20:26	20:26	10	,
ARGUMENT	20:28	20:28	10	size
FIELD	20:28	20:28	11	size
LEAF_NODE	20:28	20:28	12	size
LEAF_NODE	20:32	20:32	10	,
ARGUMENT	20:34	20:34	10	format
FIELD	20:34	20:34	11	format
LEAF_NODE	20:34	20:34	12	format
LEAF_NODE	20:40	20:40	10	,
ARGUMENT	20:42	20:42	10	ap
FIELD	20:42	20:42	11	ap
LEAF_NODE	20:42	20:42	12	ap
LEAF_NODE	20:44	20:44	10	)
LEAF_NODE	20:45	20:45	6	;
EXPR_STATEMENT	22:4	22:58	3	count = _vsnprintf_s ( str , size , _TRUNCATE , format , ap ) ;
EXPR	22:4	22:4	4	count = _vsnprintf_s ( str , size , _TRUNCATE , format , ap )
ASSIGN	22:4	22:12	5	count = _vsnprintf_s ( str , size , _TRUNCATE , format , ap )
LVAL	22:4	22:4	6	count
FIELD	22:4	22:4	7	count
LEAF_NODE	22:4	22:4	8	count
ASSIGN_OP	22:10	22:10	6	=
LEAF_NODE	22:10	22:10	7	=
RVAL	22:12	22:12	6	_vsnprintf_s ( str , size , _TRUNCATE , format , ap )
FUNCTION_CALL	22:12	22:57	7	_vsnprintf_s ( str , size , _TRUNCATE , format , ap )
CALLEE	22:12	22:12	8	_vsnprintf_s
LEAF_NODE	22:12	22:12	9	_vsnprintf_s
LEAF_NODE	22:24	22:24	8	(
ARGUMENT	22:25	22:25	8	str
FIELD	22:25	22:25	9	str
LEAF_NODE	22:25	22:25	10	str
LEAF_NODE	22:28	22:28	8	,
ARGUMENT	22:30	22:30	8	size
FIELD	22:30	22:30	9	size
LEAF_NODE	22:30	22:30	10	size
LEAF_NODE	22:34	22:34	8	,
ARGUMENT	22:36	22:36	8	_TRUNCATE
FIELD	22:36	22:36	9	_TRUNCATE
LEAF_NODE	22:36	22:36	10	_TRUNCATE
LEAF_NODE	22:45	22:45	8	,
ARGUMENT	22:47	22:47	8	format
FIELD	22:47	22:47	9	format
LEAF_NODE	22:47	22:47	10	format
LEAF_NODE	22:53	22:53	8	,
ARGUMENT	22:55	22:55	8	ap
FIELD	22:55	22:55	9	ap
LEAF_NODE	22:55	22:55	10	ap
LEAF_NODE	22:57	22:57	8	)
LEAF_NODE	22:58	22:58	4	;
SELECTION	24:2	25:4	3	
KEYWORD	24:2	24:2	4	if
LEAF_NODE	24:2	24:2	5	if
LEAF_NODE	24:5	24:5	4	(
CONDITION	24:6	24:6	4	count == - 1
EXPR	24:6	24:15	5	count == - 1
FIELD	24:6	24:6	6	count
LEAF_NODE	24:6	24:6	7	count
EQ_OPERATOR	24:12	24:12	6	==
LEAF_NODE	24:12	24:12	7	==
UNARY_EXPR	24:15	24:16	6	- 1
UNARY_OPERATOR	24:15	24:15	7	-
LEAF_NODE	24:15	24:15	8	-
FIELD	24:16	24:16	7	1
LEAF_NODE	24:16	24:16	8	1
LEAF_NODE	24:17	24:17	4	)
STATEMENTS	25:4	25:4	4	
EXPR_STATEMENT	25:4	25:34	5	count = _vscprintf ( format , ap ) ;
EXPR	25:4	25:4	6	count = _vscprintf ( format , ap )
ASSIGN	25:4	25:12	7	count = _vscprintf ( format , ap )
LVAL	25:4	25:4	8	count
FIELD	25:4	25:4	9	count
LEAF_NODE	25:4	25:4	10	count
ASSIGN_OP	25:10	25:10	8	=
LEAF_NODE	25:10	25:10	9	=
RVAL	25:12	25:12	8	_vscprintf ( format , ap )
FUNCTION_CALL	25:12	25:33	9	_vscprintf ( format , ap )
CALLEE	25:12	25:12	10	_vscprintf
LEAF_NODE	25:12	25:12	11	_vscprintf
LEAF_NODE	25:22	25:22	10	(
ARGUMENT	25:23	25:23	10	format
FIELD	25:23	25:23	11	format
LEAF_NODE	25:23	25:23	12	format
LEAF_NODE	25:29	25:29	10	,
ARGUMENT	25:31	25:31	10	ap
FIELD	25:31	25:31	11	ap
LEAF_NODE	25:31	25:31	12	ap
LEAF_NODE	25:33	25:33	10	)
LEAF_NODE	25:34	25:34	6	;
JUMP_STATEMENT	27:2	27:14	3	return count ;
KEYWORD	27:2	27:2	4	return
LEAF_NODE	27:2	27:2	5	return
DESTINATION	27:9	27:9	4	count
EXPR	27:9	27:9	5	count
FIELD	27:9	27:9	6	count
LEAF_NODE	27:9	27:9	7	count
LEAF_NODE	27:14	27:14	4	;
LEAF_NODE	28:0	28:0	2	}
SIMPLE_DECL	32:2	32:11	1	int count ;
VAR_DECL	32:2	32:6	2	int count
TYPE	32:2	32:2	3	int
TYPE_NAME	32:2	32:2	4	int
LEAF_NODE	32:2	32:2	5	int
NAME	32:6	32:6	3	count
LEAF_NODE	32:6	32:6	4	count
LEAF_NODE	32:11	32:11	2	;
SIMPLE_DECL	33:2	33:12	1	va_list ap ;
VAR_DECL	33:2	33:10	2	va_list ap
TYPE	33:2	33:2	3	va_list
TYPE_NAME	33:2	33:2	4	va_list
LEAF_NODE	33:2	33:2	5	va_list
NAME	33:10	33:10	3	ap
LEAF_NODE	33:10	33:10	4	ap
LEAF_NODE	33:12	33:12	2	;
