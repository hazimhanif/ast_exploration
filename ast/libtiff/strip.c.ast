SOURCE_FILE	35:0	259:0	0	
FUNCTION_DEF	35:0	67:0	1	
RETURN_TYPE	35:0	35:0	2	int
TYPE_NAME	35:0	35:0	3	int
LEAF_NODE	35:0	35:0	4	int
FUNCTION_NAME	36:0	36:0	2	write_strips
LEAF_NODE	36:0	36:0	3	write_strips
PARAMETER_LIST	36:12	36:63	2	( TIFF * tif , const tdata_t array , const tsize_t size )
LEAF_NODE	36:12	36:12	3	(
PARAMETER_DECL	36:13	36:19	3	TIFF * tif
TYPE	36:13	36:18	4	TIFF *
TYPE_NAME	36:13	36:13	5	TIFF
LEAF_NODE	36:13	36:13	6	TIFF
POINTER	36:18	36:18	5	*
LEAF_NODE	36:18	36:18	6	*
NAME	36:19	36:19	4	tif
LEAF_NODE	36:19	36:19	5	tif
LEAF_NODE	36:22	36:22	3	,
PARAMETER_DECL	36:24	36:38	3	const tdata_t array
TYPE	36:24	36:24	4	const tdata_t
TYPE_NAME	36:24	36:30	5	const tdata_t
LEAF_NODE	36:24	36:24	6	const
LEAF_NODE	36:30	36:30	6	tdata_t
NAME	36:38	36:38	4	array
LEAF_NODE	36:38	36:38	5	array
LEAF_NODE	36:43	36:43	3	,
PARAMETER_DECL	36:45	36:59	3	const tsize_t size
TYPE	36:45	36:45	4	const tsize_t
TYPE_NAME	36:45	36:51	5	const tsize_t
LEAF_NODE	36:45	36:45	6	const
LEAF_NODE	36:51	36:51	6	tsize_t
NAME	36:59	36:59	4	size
LEAF_NODE	36:59	36:59	5	size
LEAF_NODE	36:63	36:63	3	)
LEAF_NODE	37:0	37:0	2	{
STATEMENTS	38:1	66:1	2	
SIMPLE_DECL	38:1	38:24	3	tstrip_t strip , tstrip_t nstrips ;
INIT_DECL_LIST	38:1	38:1	4	tstrip_t strip , tstrip_t nstrips
VAR_DECL	38:1	38:10	5	tstrip_t strip
TYPE	38:1	38:1	6	tstrip_t
TYPE_NAME	38:1	38:1	7	tstrip_t
LEAF_NODE	38:1	38:1	8	tstrip_t
NAME	38:10	38:10	6	strip
LEAF_NODE	38:10	38:10	7	strip
LEAF_NODE	38:15	38:15	5	,
VAR_DECL	38:1	38:17	5	tstrip_t nstrips
TYPE	38:1	38:1	6	tstrip_t
TYPE_NAME	38:1	38:1	7	tstrip_t
LEAF_NODE	38:1	38:1	8	tstrip_t
NAME	38:17	38:17	6	nstrips
LEAF_NODE	38:17	38:17	7	nstrips
LEAF_NODE	38:24	38:24	4	;
SIMPLE_DECL	39:1	39:27	3	tsize_t stripsize , tsize_t offset ;
INIT_DECL_LIST	39:1	39:1	4	tsize_t stripsize , tsize_t offset
VAR_DECL	39:1	39:10	5	tsize_t stripsize
TYPE	39:1	39:1	6	tsize_t
TYPE_NAME	39:1	39:1	7	tsize_t
LEAF_NODE	39:1	39:1	8	tsize_t
NAME	39:10	39:10	6	stripsize
LEAF_NODE	39:10	39:10	7	stripsize
LEAF_NODE	39:19	39:19	5	,
VAR_DECL	39:1	39:21	5	tsize_t offset
TYPE	39:1	39:1	6	tsize_t
TYPE_NAME	39:1	39:1	7	tsize_t
LEAF_NODE	39:1	39:1	8	tsize_t
NAME	39:21	39:21	6	offset
LEAF_NODE	39:21	39:21	7	offset
LEAF_NODE	39:27	39:27	4	;
EXPR_STATEMENT	41:1	41:31	3	stripsize = TIFFStripSize ( tif ) ;
EXPR	41:1	41:1	4	stripsize = TIFFStripSize ( tif )
ASSIGN	41:1	41:13	5	stripsize = TIFFStripSize ( tif )
LVAL	41:1	41:1	6	stripsize
FIELD	41:1	41:1	7	stripsize
LEAF_NODE	41:1	41:1	8	stripsize
ASSIGN_OP	41:11	41:11	6	=
LEAF_NODE	41:11	41:11	7	=
RVAL	41:13	41:13	6	TIFFStripSize ( tif )
FUNCTION_CALL	41:13	41:30	7	TIFFStripSize ( tif )
CALLEE	41:13	41:13	8	TIFFStripSize
LEAF_NODE	41:13	41:13	9	TIFFStripSize
LEAF_NODE	41:26	41:26	8	(
ARGUMENT	41:27	41:27	8	tif
FIELD	41:27	41:27	9	tif
LEAF_NODE	41:27	41:27	10	tif
LEAF_NODE	41:30	41:30	8	)
LEAF_NODE	41:31	41:31	4	;
SELECTION	42:1	42:17	3	
KEYWORD	42:1	42:1	4	if
LEAF_NODE	42:1	42:1	5	if
LEAF_NODE	42:4	42:4	4	(
CONDITION	42:5	42:5	4	! stripsize
EXPR	42:5	42:5	5	! stripsize
UNARY_EXPR	42:5	42:6	6	! stripsize
UNARY_OPERATOR	42:5	42:5	7	!
LEAF_NODE	42:5	42:5	8	!
FIELD	42:6	42:6	7	stripsize
LEAF_NODE	42:6	42:6	8	stripsize
LEAF_NODE	42:15	42:15	4	)
STATEMENTS	42:17	45:1	4	
LEAF_NODE	42:17	42:17	5	{
STATEMENTS	43:2	44:2	5	
EXPR_STATEMENT	43:2	43:44	6	fprintf ( stderr , "Wrong size of strip.\n" ) ;
EXPR	43:2	43:2	7	fprintf ( stderr , "Wrong size of strip.\n" )
FUNCTION_CALL	43:2	43:43	8	fprintf ( stderr , "Wrong size of strip.\n" )
CALLEE	43:2	43:2	9	fprintf
LEAF_NODE	43:2	43:2	10	fprintf
LEAF_NODE	43:10	43:10	9	(
ARGUMENT	43:11	43:11	9	stderr
FIELD	43:11	43:11	10	stderr
LEAF_NODE	43:11	43:11	11	stderr
LEAF_NODE	43:17	43:17	9	,
ARGUMENT	43:19	43:19	9	"Wrong size of strip.\n"
FIELD	43:19	43:19	10	"Wrong size of strip.\n"
LEAF_NODE	43:19	43:19	11	"Wrong size of strip.\n"
LEAF_NODE	43:43	43:43	9	)
LEAF_NODE	43:44	43:44	7	;
JUMP_STATEMENT	44:2	44:11	6	return - 1 ;
KEYWORD	44:2	44:2	7	return
LEAF_NODE	44:2	44:2	8	return
DESTINATION	44:9	44:9	7	- 1
EXPR	44:9	44:9	8	- 1
UNARY_EXPR	44:9	44:10	9	- 1
UNARY_OPERATOR	44:9	44:9	10	-
LEAF_NODE	44:9	44:9	11	-
FIELD	44:10	44:10	10	1
LEAF_NODE	44:10	44:10	11	1
LEAF_NODE	44:11	44:11	7	;
LEAF_NODE	45:1	45:1	5	}
EXPR_STATEMENT	47:1	47:34	3	nstrips = TIFFNumberOfStrips ( tif ) ;
EXPR	47:1	47:1	4	nstrips = TIFFNumberOfStrips ( tif )
ASSIGN	47:1	47:11	5	nstrips = TIFFNumberOfStrips ( tif )
LVAL	47:1	47:1	6	nstrips
FIELD	47:1	47:1	7	nstrips
LEAF_NODE	47:1	47:1	8	nstrips
ASSIGN_OP	47:9	47:9	6	=
LEAF_NODE	47:9	47:9	7	=
RVAL	47:11	47:11	6	TIFFNumberOfStrips ( tif )
FUNCTION_CALL	47:11	47:33	7	TIFFNumberOfStrips ( tif )
CALLEE	47:11	47:11	8	TIFFNumberOfStrips
LEAF_NODE	47:11	47:11	9	TIFFNumberOfStrips
LEAF_NODE	47:29	47:29	8	(
ARGUMENT	47:30	47:30	8	tif
FIELD	47:30	47:30	9	tif
LEAF_NODE	47:30	47:30	10	tif
LEAF_NODE	47:33	47:33	8	)
LEAF_NODE	47:34	47:34	4	;
ITERATION	48:1	50:34	3	
KEYWORD	48:1	48:1	4	for
LEAF_NODE	48:1	48:1	5	for
LEAF_NODE	48:5	48:5	4	(
FOR_INIT	48:6	48:27	4	offset = 0 , strip = 0 ;
EXPR	48:6	48:18	5	offset = 0 , strip = 0
ASSIGN	48:6	48:15	6	offset = 0
LVAL	48:6	48:6	7	offset
FIELD	48:6	48:6	8	offset
LEAF_NODE	48:6	48:6	9	offset
ASSIGN_OP	48:13	48:13	7	=
LEAF_NODE	48:13	48:13	8	=
RVAL	48:15	48:15	7	0
FIELD	48:15	48:15	8	0
LEAF_NODE	48:15	48:15	9	0
LEAF_NODE	48:16	48:16	6	,
ASSIGN	48:18	48:26	6	strip = 0
LVAL	48:18	48:18	7	strip
FIELD	48:18	48:18	8	strip
LEAF_NODE	48:18	48:18	9	strip
ASSIGN_OP	48:24	48:24	7	=
LEAF_NODE	48:24	48:24	8	=
RVAL	48:26	48:26	7	0
FIELD	48:26	48:26	8	0
LEAF_NODE	48:26	48:26	9	0
LEAF_NODE	48:27	48:27	5	;
CONDITION	49:6	49:6	4	offset < size && strip < nstrips
EXPR	49:6	49:6	5	offset < size && strip < nstrips
AND	49:6	49:23	6	offset < size && strip < nstrips
EXPR	49:6	49:15	7	offset < size
FIELD	49:6	49:6	8	offset
LEAF_NODE	49:6	49:6	9	offset
REL_OPERATOR	49:13	49:13	8	<
LEAF_NODE	49:13	49:13	9	<
FIELD	49:15	49:15	8	size
LEAF_NODE	49:15	49:15	9	size
LEAF_NODE	49:20	49:20	7	&&
EXPR	49:23	49:31	7	strip < nstrips
FIELD	49:23	49:23	8	strip
LEAF_NODE	49:23	49:23	9	strip
REL_OPERATOR	49:29	49:29	8	<
LEAF_NODE	49:29	49:29	9	<
FIELD	49:31	49:31	8	nstrips
LEAF_NODE	49:31	49:31	9	nstrips
LEAF_NODE	49:38	49:38	4	;
FOR_EXPR	50:6	50:6	4	offset += stripsize , strip ++
EXPR	50:6	50:25	5	offset += stripsize , strip ++
ASSIGN	50:6	50:14	6	offset += stripsize
LVAL	50:6	50:6	7	offset
FIELD	50:6	50:6	8	offset
LEAF_NODE	50:6	50:6	9	offset
ASSIGN_OP	50:12	50:12	7	+=
LEAF_NODE	50:12	50:12	8	+=
RVAL	50:14	50:14	7	stripsize
FIELD	50:14	50:14	8	stripsize
LEAF_NODE	50:14	50:14	9	stripsize
LEAF_NODE	50:23	50:23	6	,
FIELD	50:25	50:30	6	strip ++
LEAF_NODE	50:25	50:25	7	strip
LEAF_NODE	50:30	50:30	7	++
LEAF_NODE	50:32	50:32	4	)
STATEMENTS	50:34	64:8	4	
LEAF_NODE	50:34	50:34	5	{
STATEMENTS	54:2	58:2	5	
SIMPLE_DECL	54:2	54:33	6	tsize_t bufsize ; bufsize = size - offset ;
VAR_DECL	54:2	54:10	7	tsize_t bufsize ; bufsize = size - offset
TYPE	54:2	54:2	8	tsize_t
TYPE_NAME	54:2	54:2	9	tsize_t
LEAF_NODE	54:2	54:2	10	tsize_t
NAME	54:10	54:10	8	bufsize
LEAF_NODE	54:10	54:10	9	bufsize
LEAF_NODE	0:0	0:0	8	;
INIT	54:10	54:10	8	bufsize = size - offset
ASSIGN	54:10	54:20	9	bufsize = size - offset
LVAL	54:10	54:10	10	bufsize
NAME	54:10	54:10	11	bufsize
LEAF_NODE	54:10	54:10	12	bufsize
ASSIGN_OP	54:18	54:18	10	=
LEAF_NODE	54:18	54:18	11	=
RVAL	54:20	54:27	10	size - offset
FIELD	54:20	54:20	11	size
LEAF_NODE	54:20	54:20	12	size
LEAF_NODE	54:25	54:25	11	-
FIELD	54:27	54:27	11	offset
LEAF_NODE	54:27	54:27	12	offset
LEAF_NODE	54:33	54:33	7	;
SELECTION	55:2	56:3	6	
KEYWORD	55:2	55:2	7	if
LEAF_NODE	55:2	55:2	8	if
LEAF_NODE	55:5	55:5	7	(
CONDITION	55:6	55:6	7	bufsize > stripsize
EXPR	55:6	55:16	8	bufsize > stripsize
FIELD	55:6	55:6	9	bufsize
LEAF_NODE	55:6	55:6	10	bufsize
REL_OPERATOR	55:14	55:14	9	>
LEAF_NODE	55:14	55:14	10	>
FIELD	55:16	55:16	9	stripsize
LEAF_NODE	55:16	55:16	10	stripsize
LEAF_NODE	55:25	55:25	7	)
STATEMENTS	56:3	56:3	7	
EXPR_STATEMENT	56:3	56:22	8	bufsize = stripsize ;
EXPR	56:3	56:3	9	bufsize = stripsize
ASSIGN	56:3	56:13	10	bufsize = stripsize
LVAL	56:3	56:3	11	bufsize
FIELD	56:3	56:3	12	bufsize
LEAF_NODE	56:3	56:3	13	bufsize
ASSIGN_OP	56:11	56:11	11	=
LEAF_NODE	56:11	56:11	12	=
RVAL	56:13	56:13	11	stripsize
FIELD	56:13	56:13	12	stripsize
LEAF_NODE	56:13	56:13	13	stripsize
LEAF_NODE	56:22	56:22	9	;
SELECTION	58:2	59:28	6	
KEYWORD	58:2	58:2	7	if
LEAF_NODE	58:2	58:2	8	if
LEAF_NODE	58:5	58:5	7	(
CONDITION	58:6	58:6	7	TIFFWriteEncodedStrip ( tif , strip , ( char * ) array + offset , bufsize ) != bufsize
EXPR	58:6	59:19	8	TIFFWriteEncodedStrip ( tif , strip , ( char * ) array + offset , bufsize ) != bufsize
FUNCTION_CALL	58:6	59:14	9	TIFFWriteEncodedStrip ( tif , strip , ( char * ) array + offset , bufsize )
CALLEE	58:6	58:6	10	TIFFWriteEncodedStrip
LEAF_NODE	58:6	58:6	11	TIFFWriteEncodedStrip
LEAF_NODE	58:27	58:27	10	(
ARGUMENT	58:28	58:28	10	tif
FIELD	58:28	58:28	11	tif
LEAF_NODE	58:28	58:28	12	tif
LEAF_NODE	58:31	58:31	10	,
ARGUMENT	58:33	58:33	10	strip
FIELD	58:33	58:33	11	strip
LEAF_NODE	58:33	58:33	12	strip
LEAF_NODE	58:38	58:38	10	,
ARGUMENT	58:40	58:56	10	( char * ) array + offset
LEAF_NODE	58:40	58:40	11	(
TYPE_NAME	58:41	58:41	11	char
LEAF_NODE	58:41	58:41	12	char
LEAF_NODE	58:46	58:46	11	*
LEAF_NODE	58:47	58:47	11	)
FIELD	58:48	58:48	11	array
LEAF_NODE	58:48	58:48	12	array
LEAF_NODE	58:54	58:54	11	+
FIELD	58:56	58:56	11	offset
LEAF_NODE	58:56	58:56	12	offset
LEAF_NODE	58:62	58:62	10	,
ARGUMENT	59:7	59:7	10	bufsize
FIELD	59:7	59:7	11	bufsize
LEAF_NODE	59:7	59:7	12	bufsize
LEAF_NODE	59:14	59:14	10	)
EQ_OPERATOR	59:16	59:16	9	!=
LEAF_NODE	59:16	59:16	10	!=
FIELD	59:19	59:19	9	bufsize
LEAF_NODE	59:19	59:19	10	bufsize
LEAF_NODE	59:26	59:26	7	)
STATEMENTS	59:28	63:2	7	
LEAF_NODE	59:28	59:28	8	{
STATEMENTS	60:3	62:3	8	
EXPR_STATEMENT	60:3	61:26	9	fprintf ( stderr , "Can't write strip %lu.\n" , ( unsigned long ) strip ) ;
EXPR	60:3	60:3	10	fprintf ( stderr , "Can't write strip %lu.\n" , ( unsigned long ) strip )
FUNCTION_CALL	60:3	61:25	11	fprintf ( stderr , "Can't write strip %lu.\n" , ( unsigned long ) strip )
CALLEE	60:3	60:3	12	fprintf
LEAF_NODE	60:3	60:3	13	fprintf
LEAF_NODE	60:11	60:11	12	(
ARGUMENT	60:12	60:12	12	stderr
FIELD	60:12	60:12	13	stderr
LEAF_NODE	60:12	60:12	14	stderr
LEAF_NODE	60:18	60:18	12	,
ARGUMENT	60:20	60:20	12	"Can't write strip %lu.\n"
FIELD	60:20	60:20	13	"Can't write strip %lu.\n"
LEAF_NODE	60:20	60:20	14	"Can't write strip %lu.\n"
LEAF_NODE	60:46	60:46	12	,
ARGUMENT	61:5	61:20	12	( unsigned long ) strip
LEAF_NODE	61:5	61:5	13	(
TYPE_NAME	61:6	61:15	13	unsigned long
LEAF_NODE	61:6	61:6	14	unsigned
LEAF_NODE	61:15	61:15	14	long
LEAF_NODE	61:19	61:19	13	)
FIELD	61:20	61:20	13	strip
LEAF_NODE	61:20	61:20	14	strip
LEAF_NODE	61:25	61:25	12	)
LEAF_NODE	61:26	61:26	10	;
JUMP_STATEMENT	62:3	62:12	9	return - 1 ;
KEYWORD	62:3	62:3	10	return
LEAF_NODE	62:3	62:3	11	return
DESTINATION	62:10	62:10	10	- 1
EXPR	62:10	62:10	11	- 1
UNARY_EXPR	62:10	62:11	12	- 1
UNARY_OPERATOR	62:10	62:10	13	-
LEAF_NODE	62:10	62:10	14	-
FIELD	62:11	62:11	13	1
LEAF_NODE	62:11	62:11	14	1
LEAF_NODE	62:12	62:12	10	;
LEAF_NODE	63:2	63:2	8	}
LEAF_NODE	64:8	64:8	5	}
JUMP_STATEMENT	66:1	66:9	3	return 0 ;
KEYWORD	66:1	66:1	4	return
LEAF_NODE	66:1	66:1	5	return
DESTINATION	66:8	66:8	4	0
EXPR	66:8	66:8	5	0
FIELD	66:8	66:8	6	0
LEAF_NODE	66:8	66:8	7	0
LEAF_NODE	66:9	66:9	4	;
LEAF_NODE	67:0	67:0	2	}
FUNCTION_DEF	69:0	115:0	1	
RETURN_TYPE	69:0	69:0	2	int
TYPE_NAME	69:0	69:0	3	int
LEAF_NODE	69:0	69:0	4	int
FUNCTION_NAME	70:0	70:0	2	read_strips
LEAF_NODE	70:0	70:0	3	read_strips
PARAMETER_LIST	70:11	70:62	2	( TIFF * tif , const tdata_t array , const tsize_t size )
LEAF_NODE	70:11	70:11	3	(
PARAMETER_DECL	70:12	70:18	3	TIFF * tif
TYPE	70:12	70:17	4	TIFF *
TYPE_NAME	70:12	70:12	5	TIFF
LEAF_NODE	70:12	70:12	6	TIFF
POINTER	70:17	70:17	5	*
LEAF_NODE	70:17	70:17	6	*
NAME	70:18	70:18	4	tif
LEAF_NODE	70:18	70:18	5	tif
LEAF_NODE	70:21	70:21	3	,
PARAMETER_DECL	70:23	70:37	3	const tdata_t array
TYPE	70:23	70:23	4	const tdata_t
TYPE_NAME	70:23	70:29	5	const tdata_t
LEAF_NODE	70:23	70:23	6	const
LEAF_NODE	70:29	70:29	6	tdata_t
NAME	70:37	70:37	4	array
LEAF_NODE	70:37	70:37	5	array
LEAF_NODE	70:42	70:42	3	,
PARAMETER_DECL	70:44	70:58	3	const tsize_t size
TYPE	70:44	70:44	4	const tsize_t
TYPE_NAME	70:44	70:50	5	const tsize_t
LEAF_NODE	70:44	70:44	6	const
LEAF_NODE	70:50	70:50	6	tsize_t
NAME	70:58	70:58	4	size
LEAF_NODE	70:58	70:58	5	size
LEAF_NODE	70:62	70:62	3	)
LEAF_NODE	71:0	71:0	2	{
STATEMENTS	72:1	114:1	2	
SIMPLE_DECL	72:1	72:24	3	tstrip_t strip , tstrip_t nstrips ;
INIT_DECL_LIST	72:1	72:1	4	tstrip_t strip , tstrip_t nstrips
VAR_DECL	72:1	72:10	5	tstrip_t strip
TYPE	72:1	72:1	6	tstrip_t
TYPE_NAME	72:1	72:1	7	tstrip_t
LEAF_NODE	72:1	72:1	8	tstrip_t
NAME	72:10	72:10	6	strip
LEAF_NODE	72:10	72:10	7	strip
LEAF_NODE	72:15	72:15	5	,
VAR_DECL	72:1	72:17	5	tstrip_t nstrips
TYPE	72:1	72:1	6	tstrip_t
TYPE_NAME	72:1	72:1	7	tstrip_t
LEAF_NODE	72:1	72:1	8	tstrip_t
NAME	72:17	72:17	6	nstrips
LEAF_NODE	72:17	72:17	7	nstrips
LEAF_NODE	72:24	72:24	4	;
SIMPLE_DECL	73:1	73:27	3	tsize_t stripsize , tsize_t offset ;
INIT_DECL_LIST	73:1	73:1	4	tsize_t stripsize , tsize_t offset
VAR_DECL	73:1	73:10	5	tsize_t stripsize
TYPE	73:1	73:1	6	tsize_t
TYPE_NAME	73:1	73:1	7	tsize_t
LEAF_NODE	73:1	73:1	8	tsize_t
NAME	73:10	73:10	6	stripsize
LEAF_NODE	73:10	73:10	7	stripsize
LEAF_NODE	73:19	73:19	5	,
VAR_DECL	73:1	73:21	5	tsize_t offset
TYPE	73:1	73:1	6	tsize_t
TYPE_NAME	73:1	73:1	7	tsize_t
LEAF_NODE	73:1	73:1	8	tsize_t
NAME	73:21	73:21	6	offset
LEAF_NODE	73:21	73:21	7	offset
LEAF_NODE	73:27	73:27	4	;
SIMPLE_DECL	74:1	74:20	3	tdata_t buf ; buf = NULL ;
VAR_DECL	74:1	74:10	4	tdata_t buf ; buf = NULL
TYPE	74:1	74:1	5	tdata_t
TYPE_NAME	74:1	74:1	6	tdata_t
LEAF_NODE	74:1	74:1	7	tdata_t
NAME	74:10	74:10	5	buf
LEAF_NODE	74:10	74:10	6	buf
LEAF_NODE	0:0	0:0	5	;
INIT	74:10	74:10	5	buf = NULL
ASSIGN	74:10	74:16	6	buf = NULL
LVAL	74:10	74:10	7	buf
NAME	74:10	74:10	8	buf
LEAF_NODE	74:10	74:10	9	buf
ASSIGN_OP	74:14	74:14	7	=
LEAF_NODE	74:14	74:14	8	=
RVAL	74:16	74:16	7	NULL
FIELD	74:16	74:16	8	NULL
LEAF_NODE	74:16	74:16	9	NULL
LEAF_NODE	74:20	74:20	4	;
EXPR_STATEMENT	76:1	76:31	3	stripsize = TIFFStripSize ( tif ) ;
EXPR	76:1	76:1	4	stripsize = TIFFStripSize ( tif )
ASSIGN	76:1	76:13	5	stripsize = TIFFStripSize ( tif )
LVAL	76:1	76:1	6	stripsize
FIELD	76:1	76:1	7	stripsize
LEAF_NODE	76:1	76:1	8	stripsize
ASSIGN_OP	76:11	76:11	6	=
LEAF_NODE	76:11	76:11	7	=
RVAL	76:13	76:13	6	TIFFStripSize ( tif )
FUNCTION_CALL	76:13	76:30	7	TIFFStripSize ( tif )
CALLEE	76:13	76:13	8	TIFFStripSize
LEAF_NODE	76:13	76:13	9	TIFFStripSize
LEAF_NODE	76:26	76:26	8	(
ARGUMENT	76:27	76:27	8	tif
FIELD	76:27	76:27	9	tif
LEAF_NODE	76:27	76:27	10	tif
LEAF_NODE	76:30	76:30	8	)
LEAF_NODE	76:31	76:31	4	;
SELECTION	77:1	77:17	3	
KEYWORD	77:1	77:1	4	if
LEAF_NODE	77:1	77:1	5	if
LEAF_NODE	77:4	77:4	4	(
CONDITION	77:5	77:5	4	! stripsize
EXPR	77:5	77:5	5	! stripsize
UNARY_EXPR	77:5	77:6	6	! stripsize
UNARY_OPERATOR	77:5	77:5	7	!
LEAF_NODE	77:5	77:5	8	!
FIELD	77:6	77:6	7	stripsize
LEAF_NODE	77:6	77:6	8	stripsize
LEAF_NODE	77:15	77:15	4	)
STATEMENTS	77:17	80:1	4	
LEAF_NODE	77:17	77:17	5	{
STATEMENTS	78:2	79:2	5	
EXPR_STATEMENT	78:2	78:44	6	fprintf ( stderr , "Wrong size of strip.\n" ) ;
EXPR	78:2	78:2	7	fprintf ( stderr , "Wrong size of strip.\n" )
FUNCTION_CALL	78:2	78:43	8	fprintf ( stderr , "Wrong size of strip.\n" )
CALLEE	78:2	78:2	9	fprintf
LEAF_NODE	78:2	78:2	10	fprintf
LEAF_NODE	78:10	78:10	9	(
ARGUMENT	78:11	78:11	9	stderr
FIELD	78:11	78:11	10	stderr
LEAF_NODE	78:11	78:11	11	stderr
LEAF_NODE	78:17	78:17	9	,
ARGUMENT	78:19	78:19	9	"Wrong size of strip.\n"
FIELD	78:19	78:19	10	"Wrong size of strip.\n"
LEAF_NODE	78:19	78:19	11	"Wrong size of strip.\n"
LEAF_NODE	78:43	78:43	9	)
LEAF_NODE	78:44	78:44	7	;
JUMP_STATEMENT	79:2	79:11	6	return - 1 ;
KEYWORD	79:2	79:2	7	return
LEAF_NODE	79:2	79:2	8	return
DESTINATION	79:9	79:9	7	- 1
EXPR	79:9	79:9	8	- 1
UNARY_EXPR	79:9	79:10	9	- 1
UNARY_OPERATOR	79:9	79:9	10	-
LEAF_NODE	79:9	79:9	11	-
FIELD	79:10	79:10	10	1
LEAF_NODE	79:10	79:10	11	1
LEAF_NODE	79:11	79:11	7	;
LEAF_NODE	80:1	80:1	5	}
EXPR_STATEMENT	82:1	82:29	3	buf = _TIFFmalloc ( stripsize ) ;
EXPR	82:1	82:1	4	buf = _TIFFmalloc ( stripsize )
ASSIGN	82:1	82:7	5	buf = _TIFFmalloc ( stripsize )
LVAL	82:1	82:1	6	buf
FIELD	82:1	82:1	7	buf
LEAF_NODE	82:1	82:1	8	buf
ASSIGN_OP	82:5	82:5	6	=
LEAF_NODE	82:5	82:5	7	=
RVAL	82:7	82:7	6	_TIFFmalloc ( stripsize )
FUNCTION_CALL	82:7	82:28	7	_TIFFmalloc ( stripsize )
CALLEE	82:7	82:7	8	_TIFFmalloc
LEAF_NODE	82:7	82:7	9	_TIFFmalloc
LEAF_NODE	82:18	82:18	8	(
ARGUMENT	82:19	82:19	8	stripsize
FIELD	82:19	82:19	9	stripsize
LEAF_NODE	82:19	82:19	10	stripsize
LEAF_NODE	82:28	82:28	8	)
LEAF_NODE	82:29	82:29	4	;
SELECTION	83:1	83:11	3	
KEYWORD	83:1	83:1	4	if
LEAF_NODE	83:1	83:1	5	if
LEAF_NODE	83:4	83:4	4	(
CONDITION	83:5	83:5	4	! buf
EXPR	83:5	83:5	5	! buf
UNARY_EXPR	83:5	83:6	6	! buf
UNARY_OPERATOR	83:5	83:5	7	!
LEAF_NODE	83:5	83:5	8	!
FIELD	83:6	83:6	7	buf
LEAF_NODE	83:6	83:6	8	buf
LEAF_NODE	83:9	83:9	4	)
STATEMENTS	83:11	86:1	4	
LEAF_NODE	83:11	83:11	5	{
STATEMENTS	84:2	85:2	5	
EXPR_STATEMENT	84:2	84:62	6	fprintf ( stderr , "Can't allocate space for strip buffer.\n" ) ;
EXPR	84:2	84:2	7	fprintf ( stderr , "Can't allocate space for strip buffer.\n" )
FUNCTION_CALL	84:2	84:61	8	fprintf ( stderr , "Can't allocate space for strip buffer.\n" )
CALLEE	84:2	84:2	9	fprintf
LEAF_NODE	84:2	84:2	10	fprintf
LEAF_NODE	84:10	84:10	9	(
ARGUMENT	84:11	84:11	9	stderr
FIELD	84:11	84:11	10	stderr
LEAF_NODE	84:11	84:11	11	stderr
LEAF_NODE	84:17	84:17	9	,
ARGUMENT	84:19	84:19	9	"Can't allocate space for strip buffer.\n"
FIELD	84:19	84:19	10	"Can't allocate space for strip buffer.\n"
LEAF_NODE	84:19	84:19	11	"Can't allocate space for strip buffer.\n"
LEAF_NODE	84:61	84:61	9	)
LEAF_NODE	84:62	84:62	7	;
JUMP_STATEMENT	85:2	85:11	6	return - 1 ;
KEYWORD	85:2	85:2	7	return
LEAF_NODE	85:2	85:2	8	return
DESTINATION	85:9	85:9	7	- 1
EXPR	85:9	85:9	8	- 1
UNARY_EXPR	85:9	85:10	9	- 1
UNARY_OPERATOR	85:9	85:9	10	-
LEAF_NODE	85:9	85:9	11	-
FIELD	85:10	85:10	10	1
LEAF_NODE	85:10	85:10	11	1
LEAF_NODE	85:11	85:11	7	;
LEAF_NODE	86:1	86:1	5	}
EXPR_STATEMENT	88:1	88:34	3	nstrips = TIFFNumberOfStrips ( tif ) ;
EXPR	88:1	88:1	4	nstrips = TIFFNumberOfStrips ( tif )
ASSIGN	88:1	88:11	5	nstrips = TIFFNumberOfStrips ( tif )
LVAL	88:1	88:1	6	nstrips
FIELD	88:1	88:1	7	nstrips
LEAF_NODE	88:1	88:1	8	nstrips
ASSIGN_OP	88:9	88:9	6	=
LEAF_NODE	88:9	88:9	7	=
RVAL	88:11	88:11	6	TIFFNumberOfStrips ( tif )
FUNCTION_CALL	88:11	88:33	7	TIFFNumberOfStrips ( tif )
CALLEE	88:11	88:11	8	TIFFNumberOfStrips
LEAF_NODE	88:11	88:11	9	TIFFNumberOfStrips
LEAF_NODE	88:29	88:29	8	(
ARGUMENT	88:30	88:30	8	tif
FIELD	88:30	88:30	9	tif
LEAF_NODE	88:30	88:30	10	tif
LEAF_NODE	88:33	88:33	8	)
LEAF_NODE	88:34	88:34	4	;
ITERATION	89:1	91:34	3	
KEYWORD	89:1	89:1	4	for
LEAF_NODE	89:1	89:1	5	for
LEAF_NODE	89:5	89:5	4	(
FOR_INIT	89:6	89:27	4	offset = 0 , strip = 0 ;
EXPR	89:6	89:18	5	offset = 0 , strip = 0
ASSIGN	89:6	89:15	6	offset = 0
LVAL	89:6	89:6	7	offset
FIELD	89:6	89:6	8	offset
LEAF_NODE	89:6	89:6	9	offset
ASSIGN_OP	89:13	89:13	7	=
LEAF_NODE	89:13	89:13	8	=
RVAL	89:15	89:15	7	0
FIELD	89:15	89:15	8	0
LEAF_NODE	89:15	89:15	9	0
LEAF_NODE	89:16	89:16	6	,
ASSIGN	89:18	89:26	6	strip = 0
LVAL	89:18	89:18	7	strip
FIELD	89:18	89:18	8	strip
LEAF_NODE	89:18	89:18	9	strip
ASSIGN_OP	89:24	89:24	7	=
LEAF_NODE	89:24	89:24	8	=
RVAL	89:26	89:26	7	0
FIELD	89:26	89:26	8	0
LEAF_NODE	89:26	89:26	9	0
LEAF_NODE	89:27	89:27	5	;
CONDITION	90:6	90:6	4	offset < size && strip < nstrips
EXPR	90:6	90:6	5	offset < size && strip < nstrips
AND	90:6	90:23	6	offset < size && strip < nstrips
EXPR	90:6	90:15	7	offset < size
FIELD	90:6	90:6	8	offset
LEAF_NODE	90:6	90:6	9	offset
REL_OPERATOR	90:13	90:13	8	<
LEAF_NODE	90:13	90:13	9	<
FIELD	90:15	90:15	8	size
LEAF_NODE	90:15	90:15	9	size
LEAF_NODE	90:20	90:20	7	&&
EXPR	90:23	90:31	7	strip < nstrips
FIELD	90:23	90:23	8	strip
LEAF_NODE	90:23	90:23	9	strip
REL_OPERATOR	90:29	90:29	8	<
LEAF_NODE	90:29	90:29	9	<
FIELD	90:31	90:31	8	nstrips
LEAF_NODE	90:31	90:31	9	nstrips
LEAF_NODE	90:38	90:38	4	;
FOR_EXPR	91:6	91:6	4	offset += stripsize , strip ++
EXPR	91:6	91:25	5	offset += stripsize , strip ++
ASSIGN	91:6	91:14	6	offset += stripsize
LVAL	91:6	91:6	7	offset
FIELD	91:6	91:6	8	offset
LEAF_NODE	91:6	91:6	9	offset
ASSIGN_OP	91:12	91:12	7	+=
LEAF_NODE	91:12	91:12	8	+=
RVAL	91:14	91:14	7	stripsize
FIELD	91:14	91:14	8	stripsize
LEAF_NODE	91:14	91:14	9	stripsize
LEAF_NODE	91:23	91:23	6	,
FIELD	91:25	91:30	6	strip ++
LEAF_NODE	91:25	91:25	7	strip
LEAF_NODE	91:30	91:30	7	++
LEAF_NODE	91:32	91:32	4	)
STATEMENTS	91:34	110:8	4	
LEAF_NODE	91:34	91:34	5	{
STATEMENTS	95:2	104:2	5	
SIMPLE_DECL	95:2	95:33	6	tsize_t bufsize ; bufsize = size - offset ;
VAR_DECL	95:2	95:10	7	tsize_t bufsize ; bufsize = size - offset
TYPE	95:2	95:2	8	tsize_t
TYPE_NAME	95:2	95:2	9	tsize_t
LEAF_NODE	95:2	95:2	10	tsize_t
NAME	95:10	95:10	8	bufsize
LEAF_NODE	95:10	95:10	9	bufsize
LEAF_NODE	0:0	0:0	8	;
INIT	95:10	95:10	8	bufsize = size - offset
ASSIGN	95:10	95:20	9	bufsize = size - offset
LVAL	95:10	95:10	10	bufsize
NAME	95:10	95:10	11	bufsize
LEAF_NODE	95:10	95:10	12	bufsize
ASSIGN_OP	95:18	95:18	10	=
LEAF_NODE	95:18	95:18	11	=
RVAL	95:20	95:27	10	size - offset
FIELD	95:20	95:20	11	size
LEAF_NODE	95:20	95:20	12	size
LEAF_NODE	95:25	95:25	11	-
FIELD	95:27	95:27	11	offset
LEAF_NODE	95:27	95:27	12	offset
LEAF_NODE	95:33	95:33	7	;
SELECTION	96:2	97:3	6	
KEYWORD	96:2	96:2	7	if
LEAF_NODE	96:2	96:2	8	if
LEAF_NODE	96:5	96:5	7	(
CONDITION	96:6	96:6	7	bufsize > stripsize
EXPR	96:6	96:16	8	bufsize > stripsize
FIELD	96:6	96:6	9	bufsize
LEAF_NODE	96:6	96:6	10	bufsize
REL_OPERATOR	96:14	96:14	9	>
LEAF_NODE	96:14	96:14	10	>
FIELD	96:16	96:16	9	stripsize
LEAF_NODE	96:16	96:16	10	stripsize
LEAF_NODE	96:25	96:25	7	)
STATEMENTS	97:3	97:3	7	
EXPR_STATEMENT	97:3	97:22	8	bufsize = stripsize ;
EXPR	97:3	97:3	9	bufsize = stripsize
ASSIGN	97:3	97:13	10	bufsize = stripsize
LVAL	97:3	97:3	11	bufsize
FIELD	97:3	97:3	12	bufsize
LEAF_NODE	97:3	97:3	13	bufsize
ASSIGN_OP	97:11	97:11	11	=
LEAF_NODE	97:11	97:11	12	=
RVAL	97:13	97:13	11	stripsize
FIELD	97:13	97:13	12	stripsize
LEAF_NODE	97:13	97:13	13	stripsize
LEAF_NODE	97:22	97:22	9	;
SELECTION	99:2	99:60	6	
KEYWORD	99:2	99:2	7	if
LEAF_NODE	99:2	99:2	8	if
LEAF_NODE	99:5	99:5	7	(
CONDITION	99:6	99:6	7	TIFFReadEncodedStrip ( tif , strip , buf , - 1 ) != bufsize
EXPR	99:6	99:51	8	TIFFReadEncodedStrip ( tif , strip , buf , - 1 ) != bufsize
FUNCTION_CALL	99:6	99:46	9	TIFFReadEncodedStrip ( tif , strip , buf , - 1 )
CALLEE	99:6	99:6	10	TIFFReadEncodedStrip
LEAF_NODE	99:6	99:6	11	TIFFReadEncodedStrip
LEAF_NODE	99:26	99:26	10	(
ARGUMENT	99:27	99:27	10	tif
FIELD	99:27	99:27	11	tif
LEAF_NODE	99:27	99:27	12	tif
LEAF_NODE	99:30	99:30	10	,
ARGUMENT	99:32	99:32	10	strip
FIELD	99:32	99:32	11	strip
LEAF_NODE	99:32	99:32	12	strip
LEAF_NODE	99:37	99:37	10	,
ARGUMENT	99:39	99:39	10	buf
FIELD	99:39	99:39	11	buf
LEAF_NODE	99:39	99:39	12	buf
LEAF_NODE	99:42	99:42	10	,
ARGUMENT	99:44	99:44	10	- 1
UNARY_EXPR	99:44	99:45	11	- 1
UNARY_OPERATOR	99:44	99:44	12	-
LEAF_NODE	99:44	99:44	13	-
FIELD	99:45	99:45	12	1
LEAF_NODE	99:45	99:45	13	1
LEAF_NODE	99:46	99:46	10	)
EQ_OPERATOR	99:48	99:48	9	!=
LEAF_NODE	99:48	99:48	10	!=
FIELD	99:51	99:51	9	bufsize
LEAF_NODE	99:51	99:51	10	bufsize
LEAF_NODE	99:58	99:58	7	)
STATEMENTS	99:60	103:2	7	
LEAF_NODE	99:60	99:60	8	{
STATEMENTS	100:3	102:3	8	
EXPR_STATEMENT	100:3	101:26	9	fprintf ( stderr , "Can't read strip %lu.\n" , ( unsigned long ) strip ) ;
EXPR	100:3	100:3	10	fprintf ( stderr , "Can't read strip %lu.\n" , ( unsigned long ) strip )
FUNCTION_CALL	100:3	101:25	11	fprintf ( stderr , "Can't read strip %lu.\n" , ( unsigned long ) strip )
CALLEE	100:3	100:3	12	fprintf
LEAF_NODE	100:3	100:3	13	fprintf
LEAF_NODE	100:11	100:11	12	(
ARGUMENT	100:12	100:12	12	stderr
FIELD	100:12	100:12	13	stderr
LEAF_NODE	100:12	100:12	14	stderr
LEAF_NODE	100:18	100:18	12	,
ARGUMENT	100:20	100:20	12	"Can't read strip %lu.\n"
FIELD	100:20	100:20	13	"Can't read strip %lu.\n"
LEAF_NODE	100:20	100:20	14	"Can't read strip %lu.\n"
LEAF_NODE	100:45	100:45	12	,
ARGUMENT	101:5	101:20	12	( unsigned long ) strip
LEAF_NODE	101:5	101:5	13	(
TYPE_NAME	101:6	101:15	13	unsigned long
LEAF_NODE	101:6	101:6	14	unsigned
LEAF_NODE	101:15	101:15	14	long
LEAF_NODE	101:19	101:19	13	)
FIELD	101:20	101:20	13	strip
LEAF_NODE	101:20	101:20	14	strip
LEAF_NODE	101:25	101:25	12	)
LEAF_NODE	101:26	101:26	10	;
JUMP_STATEMENT	102:3	102:12	9	return - 1 ;
KEYWORD	102:3	102:3	10	return
LEAF_NODE	102:3	102:3	11	return
DESTINATION	102:10	102:10	10	- 1
EXPR	102:10	102:10	11	- 1
UNARY_EXPR	102:10	102:11	12	- 1
UNARY_OPERATOR	102:10	102:10	13	-
LEAF_NODE	102:10	102:10	14	-
FIELD	102:11	102:11	13	1
LEAF_NODE	102:11	102:11	14	1
LEAF_NODE	102:12	102:12	10	;
LEAF_NODE	103:2	103:2	8	}
SELECTION	104:2	104:57	6	
KEYWORD	104:2	104:2	7	if
LEAF_NODE	104:2	104:2	8	if
LEAF_NODE	104:5	104:5	7	(
CONDITION	104:6	104:6	7	memcmp ( buf , ( char * ) array + offset , bufsize ) != 0
EXPR	104:6	104:54	8	memcmp ( buf , ( char * ) array + offset , bufsize ) != 0
FUNCTION_CALL	104:6	104:49	9	memcmp ( buf , ( char * ) array + offset , bufsize )
CALLEE	104:6	104:6	10	memcmp
LEAF_NODE	104:6	104:6	11	memcmp
LEAF_NODE	104:12	104:12	10	(
ARGUMENT	104:13	104:13	10	buf
FIELD	104:13	104:13	11	buf
LEAF_NODE	104:13	104:13	12	buf
LEAF_NODE	104:16	104:16	10	,
ARGUMENT	104:18	104:34	10	( char * ) array + offset
LEAF_NODE	104:18	104:18	11	(
TYPE_NAME	104:19	104:19	11	char
LEAF_NODE	104:19	104:19	12	char
LEAF_NODE	104:24	104:24	11	*
LEAF_NODE	104:25	104:25	11	)
FIELD	104:26	104:26	11	array
LEAF_NODE	104:26	104:26	12	array
LEAF_NODE	104:32	104:32	11	+
FIELD	104:34	104:34	11	offset
LEAF_NODE	104:34	104:34	12	offset
LEAF_NODE	104:40	104:40	10	,
ARGUMENT	104:42	104:42	10	bufsize
FIELD	104:42	104:42	11	bufsize
LEAF_NODE	104:42	104:42	12	bufsize
LEAF_NODE	104:49	104:49	10	)
EQ_OPERATOR	104:51	104:51	9	!=
LEAF_NODE	104:51	104:51	10	!=
FIELD	104:54	104:54	9	0
LEAF_NODE	104:54	104:54	10	0
LEAF_NODE	104:55	104:55	7	)
STATEMENTS	104:57	109:2	7	
LEAF_NODE	104:57	104:57	8	{
STATEMENTS	105:3	108:3	8	
EXPR_STATEMENT	105:3	106:26	9	fprintf ( stderr , "Wrong data read for strip %lu.\n" , ( unsigned long ) strip ) ;
EXPR	105:3	105:3	10	fprintf ( stderr , "Wrong data read for strip %lu.\n" , ( unsigned long ) strip )
FUNCTION_CALL	105:3	106:25	11	fprintf ( stderr , "Wrong data read for strip %lu.\n" , ( unsigned long ) strip )
CALLEE	105:3	105:3	12	fprintf
LEAF_NODE	105:3	105:3	13	fprintf
LEAF_NODE	105:11	105:11	12	(
ARGUMENT	105:12	105:12	12	stderr
FIELD	105:12	105:12	13	stderr
LEAF_NODE	105:12	105:12	14	stderr
LEAF_NODE	105:18	105:18	12	,
ARGUMENT	105:20	105:20	12	"Wrong data read for strip %lu.\n"
FIELD	105:20	105:20	13	"Wrong data read for strip %lu.\n"
LEAF_NODE	105:20	105:20	14	"Wrong data read for strip %lu.\n"
LEAF_NODE	105:54	105:54	12	,
ARGUMENT	106:5	106:20	12	( unsigned long ) strip
LEAF_NODE	106:5	106:5	13	(
TYPE_NAME	106:6	106:15	13	unsigned long
LEAF_NODE	106:6	106:6	14	unsigned
LEAF_NODE	106:15	106:15	14	long
LEAF_NODE	106:19	106:19	13	)
FIELD	106:20	106:20	13	strip
LEAF_NODE	106:20	106:20	14	strip
LEAF_NODE	106:25	106:25	12	)
LEAF_NODE	106:26	106:26	10	;
EXPR_STATEMENT	107:3	107:17	9	_TIFFfree ( buf ) ;
EXPR	107:3	107:3	10	_TIFFfree ( buf )
FUNCTION_CALL	107:3	107:16	11	_TIFFfree ( buf )
CALLEE	107:3	107:3	12	_TIFFfree
LEAF_NODE	107:3	107:3	13	_TIFFfree
LEAF_NODE	107:12	107:12	12	(
ARGUMENT	107:13	107:13	12	buf
FIELD	107:13	107:13	13	buf
LEAF_NODE	107:13	107:13	14	buf
LEAF_NODE	107:16	107:16	12	)
LEAF_NODE	107:17	107:17	10	;
JUMP_STATEMENT	108:3	108:12	9	return - 1 ;
KEYWORD	108:3	108:3	10	return
LEAF_NODE	108:3	108:3	11	return
DESTINATION	108:10	108:10	10	- 1
EXPR	108:10	108:10	11	- 1
UNARY_EXPR	108:10	108:11	12	- 1
UNARY_OPERATOR	108:10	108:10	13	-
LEAF_NODE	108:10	108:10	14	-
FIELD	108:11	108:11	13	1
LEAF_NODE	108:11	108:11	14	1
LEAF_NODE	108:12	108:12	10	;
LEAF_NODE	109:2	109:2	8	}
LEAF_NODE	110:8	110:8	5	}
EXPR_STATEMENT	112:1	112:15	3	_TIFFfree ( buf ) ;
EXPR	112:1	112:1	4	_TIFFfree ( buf )
FUNCTION_CALL	112:1	112:14	5	_TIFFfree ( buf )
CALLEE	112:1	112:1	6	_TIFFfree
LEAF_NODE	112:1	112:1	7	_TIFFfree
LEAF_NODE	112:10	112:10	6	(
ARGUMENT	112:11	112:11	6	buf
FIELD	112:11	112:11	7	buf
LEAF_NODE	112:11	112:11	8	buf
LEAF_NODE	112:14	112:14	6	)
LEAF_NODE	112:15	112:15	4	;
JUMP_STATEMENT	114:1	114:9	3	return 0 ;
KEYWORD	114:1	114:1	4	return
LEAF_NODE	114:1	114:1	5	return
DESTINATION	114:8	114:8	4	0
EXPR	114:8	114:8	5	0
FIELD	114:8	114:8	6	0
LEAF_NODE	114:8	114:8	7	0
LEAF_NODE	114:9	114:9	4	;
LEAF_NODE	115:0	115:0	2	}
FUNCTION_DEF	117:0	179:0	1	
RETURN_TYPE	117:0	117:0	2	int
TYPE_NAME	117:0	117:0	3	int
LEAF_NODE	117:0	117:0	4	int
FUNCTION_NAME	118:0	118:0	2	create_image_striped
LEAF_NODE	118:0	118:0	3	create_image_striped
PARAMETER_LIST	118:20	122:47	2	( const char * name , uint32 width , uint32 length , uint32 rowsperstrip , uint16 compression , uint16 spp , uint16 bps , uint16 photometric , uint16 sampleformat , uint16 planarconfig , const tdata_t array , const tsize_t size )
LEAF_NODE	118:20	118:20	3	(
PARAMETER_DECL	118:21	118:33	3	const char * name
TYPE	118:21	118:32	4	const char *
TYPE_NAME	118:21	118:27	5	const char
LEAF_NODE	118:21	118:21	6	const
LEAF_NODE	118:27	118:27	6	char
POINTER	118:32	118:32	5	*
LEAF_NODE	118:32	118:32	6	*
NAME	118:33	118:33	4	name
LEAF_NODE	118:33	118:33	5	name
LEAF_NODE	118:37	118:37	3	,
PARAMETER_DECL	118:39	118:46	3	uint32 width
TYPE	118:39	118:39	4	uint32
TYPE_NAME	118:39	118:39	5	uint32
LEAF_NODE	118:39	118:39	6	uint32
NAME	118:46	118:46	4	width
LEAF_NODE	118:46	118:46	5	width
LEAF_NODE	118:51	118:51	3	,
PARAMETER_DECL	118:53	118:60	3	uint32 length
TYPE	118:53	118:53	4	uint32
TYPE_NAME	118:53	118:53	5	uint32
LEAF_NODE	118:53	118:53	6	uint32
NAME	118:60	118:60	4	length
LEAF_NODE	118:60	118:60	5	length
LEAF_NODE	118:66	118:66	3	,
PARAMETER_DECL	119:8	119:15	3	uint32 rowsperstrip
TYPE	119:8	119:8	4	uint32
TYPE_NAME	119:8	119:8	5	uint32
LEAF_NODE	119:8	119:8	6	uint32
NAME	119:15	119:15	4	rowsperstrip
LEAF_NODE	119:15	119:15	5	rowsperstrip
LEAF_NODE	119:27	119:27	3	,
PARAMETER_DECL	119:29	119:36	3	uint16 compression
TYPE	119:29	119:29	4	uint16
TYPE_NAME	119:29	119:29	5	uint16
LEAF_NODE	119:29	119:29	6	uint16
NAME	119:36	119:36	4	compression
LEAF_NODE	119:36	119:36	5	compression
LEAF_NODE	119:47	119:47	3	,
PARAMETER_DECL	120:8	120:15	3	uint16 spp
TYPE	120:8	120:8	4	uint16
TYPE_NAME	120:8	120:8	5	uint16
LEAF_NODE	120:8	120:8	6	uint16
NAME	120:15	120:15	4	spp
LEAF_NODE	120:15	120:15	5	spp
LEAF_NODE	120:18	120:18	3	,
PARAMETER_DECL	120:20	120:27	3	uint16 bps
TYPE	120:20	120:20	4	uint16
TYPE_NAME	120:20	120:20	5	uint16
LEAF_NODE	120:20	120:20	6	uint16
NAME	120:27	120:27	4	bps
LEAF_NODE	120:27	120:27	5	bps
LEAF_NODE	120:30	120:30	3	,
PARAMETER_DECL	120:32	120:39	3	uint16 photometric
TYPE	120:32	120:32	4	uint16
TYPE_NAME	120:32	120:32	5	uint16
LEAF_NODE	120:32	120:32	6	uint16
NAME	120:39	120:39	4	photometric
LEAF_NODE	120:39	120:39	5	photometric
LEAF_NODE	120:50	120:50	3	,
PARAMETER_DECL	121:8	121:15	3	uint16 sampleformat
TYPE	121:8	121:8	4	uint16
TYPE_NAME	121:8	121:8	5	uint16
LEAF_NODE	121:8	121:8	6	uint16
NAME	121:15	121:15	4	sampleformat
LEAF_NODE	121:15	121:15	5	sampleformat
LEAF_NODE	121:27	121:27	3	,
PARAMETER_DECL	121:29	121:36	3	uint16 planarconfig
TYPE	121:29	121:29	4	uint16
TYPE_NAME	121:29	121:29	5	uint16
LEAF_NODE	121:29	121:29	6	uint16
NAME	121:36	121:36	4	planarconfig
LEAF_NODE	121:36	121:36	5	planarconfig
LEAF_NODE	121:48	121:48	3	,
PARAMETER_DECL	122:8	122:22	3	const tdata_t array
TYPE	122:8	122:8	4	const tdata_t
TYPE_NAME	122:8	122:14	5	const tdata_t
LEAF_NODE	122:8	122:8	6	const
LEAF_NODE	122:14	122:14	6	tdata_t
NAME	122:22	122:22	4	array
LEAF_NODE	122:22	122:22	5	array
LEAF_NODE	122:27	122:27	3	,
PARAMETER_DECL	122:29	122:43	3	const tsize_t size
TYPE	122:29	122:29	4	const tsize_t
TYPE_NAME	122:29	122:35	5	const tsize_t
LEAF_NODE	122:29	122:29	6	const
LEAF_NODE	122:35	122:35	6	tsize_t
NAME	122:43	122:43	4	size
LEAF_NODE	122:43	122:43	5	size
LEAF_NODE	122:47	122:47	3	)
LEAF_NODE	123:0	123:0	2	{
STATEMENTS	124:1	178:1	2	
SIMPLE_DECL	124:1	124:11	3	TIFF * tif ;
VAR_DECL	124:1	124:8	4	TIFF * tif
TYPE	124:1	124:7	5	TIFF *
TYPE_NAME	124:1	124:1	6	TIFF
LEAF_NODE	124:1	124:1	7	TIFF
POINTER	124:7	124:7	6	*
LEAF_NODE	124:7	124:7	7	*
NAME	124:8	124:8	5	tif
LEAF_NODE	124:8	124:8	6	tif
LEAF_NODE	124:11	124:11	4	;
EXPR_STATEMENT	127:1	127:26	3	tif = TIFFOpen ( name , "w" ) ;
EXPR	127:1	127:1	4	tif = TIFFOpen ( name , "w" )
ASSIGN	127:1	127:7	5	tif = TIFFOpen ( name , "w" )
LVAL	127:1	127:1	6	tif
FIELD	127:1	127:1	7	tif
LEAF_NODE	127:1	127:1	8	tif
ASSIGN_OP	127:5	127:5	6	=
LEAF_NODE	127:5	127:5	7	=
RVAL	127:7	127:7	6	TIFFOpen ( name , "w" )
FUNCTION_CALL	127:7	127:25	7	TIFFOpen ( name , "w" )
CALLEE	127:7	127:7	8	TIFFOpen
LEAF_NODE	127:7	127:7	9	TIFFOpen
LEAF_NODE	127:15	127:15	8	(
ARGUMENT	127:16	127:16	8	name
FIELD	127:16	127:16	9	name
LEAF_NODE	127:16	127:16	10	name
LEAF_NODE	127:20	127:20	8	,
ARGUMENT	127:22	127:22	8	"w"
FIELD	127:22	127:22	9	"w"
LEAF_NODE	127:22	127:22	10	"w"
LEAF_NODE	127:25	127:25	8	)
LEAF_NODE	127:26	127:26	4	;
SELECTION	128:1	129:2	3	
KEYWORD	128:1	128:1	4	if
LEAF_NODE	128:1	128:1	5	if
LEAF_NODE	128:4	128:4	4	(
CONDITION	128:5	128:5	4	! tif
EXPR	128:5	128:5	5	! tif
UNARY_EXPR	128:5	128:6	6	! tif
UNARY_OPERATOR	128:5	128:5	7	!
LEAF_NODE	128:5	128:5	8	!
FIELD	128:6	128:6	7	tif
LEAF_NODE	128:6	128:6	8	tif
LEAF_NODE	128:9	128:9	4	)
STATEMENTS	129:2	129:2	4	
JUMP_STATEMENT	129:2	129:18	5	goto openfailure ;
KEYWORD	129:2	129:2	6	goto
LEAF_NODE	129:2	129:2	7	goto
DESTINATION	129:7	129:7	6	openfailure
LEAF_NODE	129:7	129:7	7	openfailure
LEAF_NODE	129:18	129:18	6	;
SELECTION	131:1	131:52	3	
KEYWORD	131:1	131:1	4	if
LEAF_NODE	131:1	131:1	5	if
LEAF_NODE	131:4	131:4	4	(
CONDITION	131:5	131:5	4	! TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , width )
EXPR	131:5	131:5	5	! TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , width )
UNARY_EXPR	131:5	131:6	6	! TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , width )
UNARY_OPERATOR	131:5	131:5	7	!
LEAF_NODE	131:5	131:5	8	!
FUNCTION_CALL	131:6	131:49	7	TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , width )
CALLEE	131:6	131:6	8	TIFFSetField
LEAF_NODE	131:6	131:6	9	TIFFSetField
LEAF_NODE	131:18	131:18	8	(
ARGUMENT	131:19	131:19	8	tif
FIELD	131:19	131:19	9	tif
LEAF_NODE	131:19	131:19	10	tif
LEAF_NODE	131:22	131:22	8	,
ARGUMENT	131:24	131:24	8	TIFFTAG_IMAGEWIDTH
FIELD	131:24	131:24	9	TIFFTAG_IMAGEWIDTH
LEAF_NODE	131:24	131:24	10	TIFFTAG_IMAGEWIDTH
LEAF_NODE	131:42	131:42	8	,
ARGUMENT	131:44	131:44	8	width
FIELD	131:44	131:44	9	width
LEAF_NODE	131:44	131:44	10	width
LEAF_NODE	131:49	131:49	8	)
LEAF_NODE	131:50	131:50	4	)
STATEMENTS	131:52	134:1	4	
LEAF_NODE	131:52	131:52	5	{
STATEMENTS	132:2	133:2	5	
EXPR_STATEMENT	132:2	132:49	6	fprintf ( stderr , "Can't set ImageWidth tag.\n" ) ;
EXPR	132:2	132:2	7	fprintf ( stderr , "Can't set ImageWidth tag.\n" )
FUNCTION_CALL	132:2	132:48	8	fprintf ( stderr , "Can't set ImageWidth tag.\n" )
CALLEE	132:2	132:2	9	fprintf
LEAF_NODE	132:2	132:2	10	fprintf
LEAF_NODE	132:10	132:10	9	(
ARGUMENT	132:11	132:11	9	stderr
FIELD	132:11	132:11	10	stderr
LEAF_NODE	132:11	132:11	11	stderr
LEAF_NODE	132:17	132:17	9	,
ARGUMENT	132:19	132:19	9	"Can't set ImageWidth tag.\n"
FIELD	132:19	132:19	10	"Can't set ImageWidth tag.\n"
LEAF_NODE	132:19	132:19	11	"Can't set ImageWidth tag.\n"
LEAF_NODE	132:48	132:48	9	)
LEAF_NODE	132:49	132:49	7	;
JUMP_STATEMENT	133:2	133:14	6	goto failure ;
KEYWORD	133:2	133:2	7	goto
LEAF_NODE	133:2	133:2	8	goto
DESTINATION	133:7	133:7	7	failure
LEAF_NODE	133:7	133:7	8	failure
LEAF_NODE	133:14	133:14	7	;
LEAF_NODE	134:1	134:1	5	}
SELECTION	135:1	135:54	3	
KEYWORD	135:1	135:1	4	if
LEAF_NODE	135:1	135:1	5	if
LEAF_NODE	135:4	135:4	4	(
CONDITION	135:5	135:5	4	! TIFFSetField ( tif , TIFFTAG_IMAGELENGTH , length )
EXPR	135:5	135:5	5	! TIFFSetField ( tif , TIFFTAG_IMAGELENGTH , length )
UNARY_EXPR	135:5	135:6	6	! TIFFSetField ( tif , TIFFTAG_IMAGELENGTH , length )
UNARY_OPERATOR	135:5	135:5	7	!
LEAF_NODE	135:5	135:5	8	!
FUNCTION_CALL	135:6	135:51	7	TIFFSetField ( tif , TIFFTAG_IMAGELENGTH , length )
CALLEE	135:6	135:6	8	TIFFSetField
LEAF_NODE	135:6	135:6	9	TIFFSetField
LEAF_NODE	135:18	135:18	8	(
ARGUMENT	135:19	135:19	8	tif
FIELD	135:19	135:19	9	tif
LEAF_NODE	135:19	135:19	10	tif
LEAF_NODE	135:22	135:22	8	,
ARGUMENT	135:24	135:24	8	TIFFTAG_IMAGELENGTH
FIELD	135:24	135:24	9	TIFFTAG_IMAGELENGTH
LEAF_NODE	135:24	135:24	10	TIFFTAG_IMAGELENGTH
LEAF_NODE	135:43	135:43	8	,
ARGUMENT	135:45	135:45	8	length
FIELD	135:45	135:45	9	length
LEAF_NODE	135:45	135:45	10	length
LEAF_NODE	135:51	135:51	8	)
LEAF_NODE	135:52	135:52	4	)
STATEMENTS	135:54	138:1	4	
LEAF_NODE	135:54	135:54	5	{
STATEMENTS	136:2	137:2	5	
EXPR_STATEMENT	136:2	136:50	6	fprintf ( stderr , "Can't set ImageLength tag.\n" ) ;
EXPR	136:2	136:2	7	fprintf ( stderr , "Can't set ImageLength tag.\n" )
FUNCTION_CALL	136:2	136:49	8	fprintf ( stderr , "Can't set ImageLength tag.\n" )
CALLEE	136:2	136:2	9	fprintf
LEAF_NODE	136:2	136:2	10	fprintf
LEAF_NODE	136:10	136:10	9	(
ARGUMENT	136:11	136:11	9	stderr
FIELD	136:11	136:11	10	stderr
LEAF_NODE	136:11	136:11	11	stderr
LEAF_NODE	136:17	136:17	9	,
ARGUMENT	136:19	136:19	9	"Can't set ImageLength tag.\n"
FIELD	136:19	136:19	10	"Can't set ImageLength tag.\n"
LEAF_NODE	136:19	136:19	11	"Can't set ImageLength tag.\n"
LEAF_NODE	136:49	136:49	9	)
LEAF_NODE	136:50	136:50	7	;
JUMP_STATEMENT	137:2	137:14	6	goto failure ;
KEYWORD	137:2	137:2	7	goto
LEAF_NODE	137:2	137:2	8	goto
DESTINATION	137:7	137:7	7	failure
LEAF_NODE	137:7	137:7	8	failure
LEAF_NODE	137:14	137:14	7	;
LEAF_NODE	138:1	138:1	5	}
SELECTION	139:1	139:53	3	
KEYWORD	139:1	139:1	4	if
LEAF_NODE	139:1	139:1	5	if
LEAF_NODE	139:4	139:4	4	(
CONDITION	139:5	139:5	4	! TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , bps )
EXPR	139:5	139:5	5	! TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , bps )
UNARY_EXPR	139:5	139:6	6	! TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , bps )
UNARY_OPERATOR	139:5	139:5	7	!
LEAF_NODE	139:5	139:5	8	!
FUNCTION_CALL	139:6	139:50	7	TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , bps )
CALLEE	139:6	139:6	8	TIFFSetField
LEAF_NODE	139:6	139:6	9	TIFFSetField
LEAF_NODE	139:18	139:18	8	(
ARGUMENT	139:19	139:19	8	tif
FIELD	139:19	139:19	9	tif
LEAF_NODE	139:19	139:19	10	tif
LEAF_NODE	139:22	139:22	8	,
ARGUMENT	139:24	139:24	8	TIFFTAG_BITSPERSAMPLE
FIELD	139:24	139:24	9	TIFFTAG_BITSPERSAMPLE
LEAF_NODE	139:24	139:24	10	TIFFTAG_BITSPERSAMPLE
LEAF_NODE	139:45	139:45	8	,
ARGUMENT	139:47	139:47	8	bps
FIELD	139:47	139:47	9	bps
LEAF_NODE	139:47	139:47	10	bps
LEAF_NODE	139:50	139:50	8	)
LEAF_NODE	139:51	139:51	4	)
STATEMENTS	139:53	142:1	4	
LEAF_NODE	139:53	139:53	5	{
STATEMENTS	140:2	141:2	5	
EXPR_STATEMENT	140:2	140:52	6	fprintf ( stderr , "Can't set BitsPerSample tag.\n" ) ;
EXPR	140:2	140:2	7	fprintf ( stderr , "Can't set BitsPerSample tag.\n" )
FUNCTION_CALL	140:2	140:51	8	fprintf ( stderr , "Can't set BitsPerSample tag.\n" )
CALLEE	140:2	140:2	9	fprintf
LEAF_NODE	140:2	140:2	10	fprintf
LEAF_NODE	140:10	140:10	9	(
ARGUMENT	140:11	140:11	9	stderr
FIELD	140:11	140:11	10	stderr
LEAF_NODE	140:11	140:11	11	stderr
LEAF_NODE	140:17	140:17	9	,
ARGUMENT	140:19	140:19	9	"Can't set BitsPerSample tag.\n"
FIELD	140:19	140:19	10	"Can't set BitsPerSample tag.\n"
LEAF_NODE	140:19	140:19	11	"Can't set BitsPerSample tag.\n"
LEAF_NODE	140:51	140:51	9	)
LEAF_NODE	140:52	140:52	7	;
JUMP_STATEMENT	141:2	141:14	6	goto failure ;
KEYWORD	141:2	141:2	7	goto
LEAF_NODE	141:2	141:2	8	goto
DESTINATION	141:7	141:7	7	failure
LEAF_NODE	141:7	141:7	8	failure
LEAF_NODE	141:14	141:14	7	;
LEAF_NODE	142:1	142:1	5	}
SELECTION	143:1	143:55	3	
KEYWORD	143:1	143:1	4	if
LEAF_NODE	143:1	143:1	5	if
LEAF_NODE	143:4	143:4	4	(
CONDITION	143:5	143:5	4	! TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , spp )
EXPR	143:5	143:5	5	! TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , spp )
UNARY_EXPR	143:5	143:6	6	! TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , spp )
UNARY_OPERATOR	143:5	143:5	7	!
LEAF_NODE	143:5	143:5	8	!
FUNCTION_CALL	143:6	143:52	7	TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , spp )
CALLEE	143:6	143:6	8	TIFFSetField
LEAF_NODE	143:6	143:6	9	TIFFSetField
LEAF_NODE	143:18	143:18	8	(
ARGUMENT	143:19	143:19	8	tif
FIELD	143:19	143:19	9	tif
LEAF_NODE	143:19	143:19	10	tif
LEAF_NODE	143:22	143:22	8	,
ARGUMENT	143:24	143:24	8	TIFFTAG_SAMPLESPERPIXEL
FIELD	143:24	143:24	9	TIFFTAG_SAMPLESPERPIXEL
LEAF_NODE	143:24	143:24	10	TIFFTAG_SAMPLESPERPIXEL
LEAF_NODE	143:47	143:47	8	,
ARGUMENT	143:49	143:49	8	spp
FIELD	143:49	143:49	9	spp
LEAF_NODE	143:49	143:49	10	spp
LEAF_NODE	143:52	143:52	8	)
LEAF_NODE	143:53	143:53	4	)
STATEMENTS	143:55	146:1	4	
LEAF_NODE	143:55	143:55	5	{
STATEMENTS	144:2	145:2	5	
EXPR_STATEMENT	144:2	144:54	6	fprintf ( stderr , "Can't set SamplesPerPixel tag.\n" ) ;
EXPR	144:2	144:2	7	fprintf ( stderr , "Can't set SamplesPerPixel tag.\n" )
FUNCTION_CALL	144:2	144:53	8	fprintf ( stderr , "Can't set SamplesPerPixel tag.\n" )
CALLEE	144:2	144:2	9	fprintf
LEAF_NODE	144:2	144:2	10	fprintf
LEAF_NODE	144:10	144:10	9	(
ARGUMENT	144:11	144:11	9	stderr
FIELD	144:11	144:11	10	stderr
LEAF_NODE	144:11	144:11	11	stderr
LEAF_NODE	144:17	144:17	9	,
ARGUMENT	144:19	144:19	9	"Can't set SamplesPerPixel tag.\n"
FIELD	144:19	144:19	10	"Can't set SamplesPerPixel tag.\n"
LEAF_NODE	144:19	144:19	11	"Can't set SamplesPerPixel tag.\n"
LEAF_NODE	144:53	144:53	9	)
LEAF_NODE	144:54	144:54	7	;
JUMP_STATEMENT	145:2	145:14	6	goto failure ;
KEYWORD	145:2	145:2	7	goto
LEAF_NODE	145:2	145:2	8	goto
DESTINATION	145:7	145:7	7	failure
LEAF_NODE	145:7	145:7	8	failure
LEAF_NODE	145:14	145:14	7	;
LEAF_NODE	146:1	146:1	5	}
SELECTION	147:1	147:61	3	
KEYWORD	147:1	147:1	4	if
LEAF_NODE	147:1	147:1	5	if
LEAF_NODE	147:4	147:4	4	(
CONDITION	147:5	147:5	4	! TIFFSetField ( tif , TIFFTAG_ROWSPERSTRIP , rowsperstrip )
EXPR	147:5	147:5	5	! TIFFSetField ( tif , TIFFTAG_ROWSPERSTRIP , rowsperstrip )
UNARY_EXPR	147:5	147:6	6	! TIFFSetField ( tif , TIFFTAG_ROWSPERSTRIP , rowsperstrip )
UNARY_OPERATOR	147:5	147:5	7	!
LEAF_NODE	147:5	147:5	8	!
FUNCTION_CALL	147:6	147:58	7	TIFFSetField ( tif , TIFFTAG_ROWSPERSTRIP , rowsperstrip )
CALLEE	147:6	147:6	8	TIFFSetField
LEAF_NODE	147:6	147:6	9	TIFFSetField
LEAF_NODE	147:18	147:18	8	(
ARGUMENT	147:19	147:19	8	tif
FIELD	147:19	147:19	9	tif
LEAF_NODE	147:19	147:19	10	tif
LEAF_NODE	147:22	147:22	8	,
ARGUMENT	147:24	147:24	8	TIFFTAG_ROWSPERSTRIP
FIELD	147:24	147:24	9	TIFFTAG_ROWSPERSTRIP
LEAF_NODE	147:24	147:24	10	TIFFTAG_ROWSPERSTRIP
LEAF_NODE	147:44	147:44	8	,
ARGUMENT	147:46	147:46	8	rowsperstrip
FIELD	147:46	147:46	9	rowsperstrip
LEAF_NODE	147:46	147:46	10	rowsperstrip
LEAF_NODE	147:58	147:58	8	)
LEAF_NODE	147:59	147:59	4	)
STATEMENTS	147:61	150:1	4	
LEAF_NODE	147:61	147:61	5	{
STATEMENTS	148:2	149:2	5	
EXPR_STATEMENT	148:2	148:51	6	fprintf ( stderr , "Can't set RowsPerStrip tag.\n" ) ;
EXPR	148:2	148:2	7	fprintf ( stderr , "Can't set RowsPerStrip tag.\n" )
FUNCTION_CALL	148:2	148:50	8	fprintf ( stderr , "Can't set RowsPerStrip tag.\n" )
CALLEE	148:2	148:2	9	fprintf
LEAF_NODE	148:2	148:2	10	fprintf
LEAF_NODE	148:10	148:10	9	(
ARGUMENT	148:11	148:11	9	stderr
FIELD	148:11	148:11	10	stderr
LEAF_NODE	148:11	148:11	11	stderr
LEAF_NODE	148:17	148:17	9	,
ARGUMENT	148:19	148:19	9	"Can't set RowsPerStrip tag.\n"
FIELD	148:19	148:19	10	"Can't set RowsPerStrip tag.\n"
LEAF_NODE	148:19	148:19	11	"Can't set RowsPerStrip tag.\n"
LEAF_NODE	148:50	148:50	9	)
LEAF_NODE	148:51	148:51	7	;
JUMP_STATEMENT	149:2	149:14	6	goto failure ;
KEYWORD	149:2	149:2	7	goto
LEAF_NODE	149:2	149:2	8	goto
DESTINATION	149:7	149:7	7	failure
LEAF_NODE	149:7	149:7	8	failure
LEAF_NODE	149:14	149:14	7	;
LEAF_NODE	150:1	150:1	5	}
SELECTION	151:1	151:61	3	
KEYWORD	151:1	151:1	4	if
LEAF_NODE	151:1	151:1	5	if
LEAF_NODE	151:4	151:4	4	(
CONDITION	151:5	151:5	4	! TIFFSetField ( tif , TIFFTAG_PLANARCONFIG , planarconfig )
EXPR	151:5	151:5	5	! TIFFSetField ( tif , TIFFTAG_PLANARCONFIG , planarconfig )
UNARY_EXPR	151:5	151:6	6	! TIFFSetField ( tif , TIFFTAG_PLANARCONFIG , planarconfig )
UNARY_OPERATOR	151:5	151:5	7	!
LEAF_NODE	151:5	151:5	8	!
FUNCTION_CALL	151:6	151:58	7	TIFFSetField ( tif , TIFFTAG_PLANARCONFIG , planarconfig )
CALLEE	151:6	151:6	8	TIFFSetField
LEAF_NODE	151:6	151:6	9	TIFFSetField
LEAF_NODE	151:18	151:18	8	(
ARGUMENT	151:19	151:19	8	tif
FIELD	151:19	151:19	9	tif
LEAF_NODE	151:19	151:19	10	tif
LEAF_NODE	151:22	151:22	8	,
ARGUMENT	151:24	151:24	8	TIFFTAG_PLANARCONFIG
FIELD	151:24	151:24	9	TIFFTAG_PLANARCONFIG
LEAF_NODE	151:24	151:24	10	TIFFTAG_PLANARCONFIG
LEAF_NODE	151:44	151:44	8	,
ARGUMENT	151:46	151:46	8	planarconfig
FIELD	151:46	151:46	9	planarconfig
LEAF_NODE	151:46	151:46	10	planarconfig
LEAF_NODE	151:58	151:58	8	)
LEAF_NODE	151:59	151:59	4	)
STATEMENTS	151:61	154:1	4	
LEAF_NODE	151:61	151:61	5	{
STATEMENTS	152:2	153:2	5	
EXPR_STATEMENT	152:2	152:58	6	fprintf ( stderr , "Can't set PlanarConfiguration tag.\n" ) ;
EXPR	152:2	152:2	7	fprintf ( stderr , "Can't set PlanarConfiguration tag.\n" )
FUNCTION_CALL	152:2	152:57	8	fprintf ( stderr , "Can't set PlanarConfiguration tag.\n" )
CALLEE	152:2	152:2	9	fprintf
LEAF_NODE	152:2	152:2	10	fprintf
LEAF_NODE	152:10	152:10	9	(
ARGUMENT	152:11	152:11	9	stderr
FIELD	152:11	152:11	10	stderr
LEAF_NODE	152:11	152:11	11	stderr
LEAF_NODE	152:17	152:17	9	,
ARGUMENT	152:19	152:19	9	"Can't set PlanarConfiguration tag.\n"
FIELD	152:19	152:19	10	"Can't set PlanarConfiguration tag.\n"
LEAF_NODE	152:19	152:19	11	"Can't set PlanarConfiguration tag.\n"
LEAF_NODE	152:57	152:57	9	)
LEAF_NODE	152:58	152:58	7	;
JUMP_STATEMENT	153:2	153:14	6	goto failure ;
KEYWORD	153:2	153:2	7	goto
LEAF_NODE	153:2	153:2	8	goto
DESTINATION	153:7	153:7	7	failure
LEAF_NODE	153:7	153:7	8	failure
LEAF_NODE	153:14	153:14	7	;
LEAF_NODE	154:1	154:1	5	}
SELECTION	155:1	155:59	3	
KEYWORD	155:1	155:1	4	if
LEAF_NODE	155:1	155:1	5	if
LEAF_NODE	155:4	155:4	4	(
CONDITION	155:5	155:5	4	! TIFFSetField ( tif , TIFFTAG_PHOTOMETRIC , photometric )
EXPR	155:5	155:5	5	! TIFFSetField ( tif , TIFFTAG_PHOTOMETRIC , photometric )
UNARY_EXPR	155:5	155:6	6	! TIFFSetField ( tif , TIFFTAG_PHOTOMETRIC , photometric )
UNARY_OPERATOR	155:5	155:5	7	!
LEAF_NODE	155:5	155:5	8	!
FUNCTION_CALL	155:6	155:56	7	TIFFSetField ( tif , TIFFTAG_PHOTOMETRIC , photometric )
CALLEE	155:6	155:6	8	TIFFSetField
LEAF_NODE	155:6	155:6	9	TIFFSetField
LEAF_NODE	155:18	155:18	8	(
ARGUMENT	155:19	155:19	8	tif
FIELD	155:19	155:19	9	tif
LEAF_NODE	155:19	155:19	10	tif
LEAF_NODE	155:22	155:22	8	,
ARGUMENT	155:24	155:24	8	TIFFTAG_PHOTOMETRIC
FIELD	155:24	155:24	9	TIFFTAG_PHOTOMETRIC
LEAF_NODE	155:24	155:24	10	TIFFTAG_PHOTOMETRIC
LEAF_NODE	155:43	155:43	8	,
ARGUMENT	155:45	155:45	8	photometric
FIELD	155:45	155:45	9	photometric
LEAF_NODE	155:45	155:45	10	photometric
LEAF_NODE	155:56	155:56	8	)
LEAF_NODE	155:57	155:57	4	)
STATEMENTS	155:59	158:1	4	
LEAF_NODE	155:59	155:59	5	{
STATEMENTS	156:2	157:2	5	
EXPR_STATEMENT	156:2	156:64	6	fprintf ( stderr , "Can't set PhotometricInterpretation tag.\n" ) ;
EXPR	156:2	156:2	7	fprintf ( stderr , "Can't set PhotometricInterpretation tag.\n" )
FUNCTION_CALL	156:2	156:63	8	fprintf ( stderr , "Can't set PhotometricInterpretation tag.\n" )
CALLEE	156:2	156:2	9	fprintf
LEAF_NODE	156:2	156:2	10	fprintf
LEAF_NODE	156:10	156:10	9	(
ARGUMENT	156:11	156:11	9	stderr
FIELD	156:11	156:11	10	stderr
LEAF_NODE	156:11	156:11	11	stderr
LEAF_NODE	156:17	156:17	9	,
ARGUMENT	156:19	156:19	9	"Can't set PhotometricInterpretation tag.\n"
FIELD	156:19	156:19	10	"Can't set PhotometricInterpretation tag.\n"
LEAF_NODE	156:19	156:19	11	"Can't set PhotometricInterpretation tag.\n"
LEAF_NODE	156:63	156:63	9	)
LEAF_NODE	156:64	156:64	7	;
JUMP_STATEMENT	157:2	157:14	6	goto failure ;
KEYWORD	157:2	157:2	7	goto
LEAF_NODE	157:2	157:2	8	goto
DESTINATION	157:7	157:7	7	failure
LEAF_NODE	157:7	157:7	8	failure
LEAF_NODE	157:14	157:14	7	;
LEAF_NODE	158:1	158:1	5	}
SELECTION	160:1	160:41	3	
KEYWORD	160:1	160:1	4	if
LEAF_NODE	160:1	160:1	5	if
LEAF_NODE	160:4	160:4	4	(
CONDITION	160:5	160:5	4	write_strips ( tif , array , size ) < 0
EXPR	160:5	160:38	5	write_strips ( tif , array , size ) < 0
FUNCTION_CALL	160:5	160:34	6	write_strips ( tif , array , size )
CALLEE	160:5	160:5	7	write_strips
LEAF_NODE	160:5	160:5	8	write_strips
LEAF_NODE	160:17	160:17	7	(
ARGUMENT	160:18	160:18	7	tif
FIELD	160:18	160:18	8	tif
LEAF_NODE	160:18	160:18	9	tif
LEAF_NODE	160:21	160:21	7	,
ARGUMENT	160:23	160:23	7	array
FIELD	160:23	160:23	8	array
LEAF_NODE	160:23	160:23	9	array
LEAF_NODE	160:28	160:28	7	,
ARGUMENT	160:30	160:30	7	size
FIELD	160:30	160:30	8	size
LEAF_NODE	160:30	160:30	9	size
LEAF_NODE	160:34	160:34	7	)
REL_OPERATOR	160:36	160:36	6	<
LEAF_NODE	160:36	160:36	7	<
FIELD	160:38	160:38	6	0
LEAF_NODE	160:38	160:38	7	0
LEAF_NODE	160:39	160:39	4	)
STATEMENTS	160:41	163:1	4	
LEAF_NODE	160:41	160:41	5	{
STATEMENTS	161:2	162:2	5	
EXPR_STATEMENT	161:2	161:47	6	fprintf ( stderr , "Can't write image data.\n" ) ;
EXPR	161:2	161:2	7	fprintf ( stderr , "Can't write image data.\n" )
FUNCTION_CALL	161:2	161:46	8	fprintf ( stderr , "Can't write image data.\n" )
CALLEE	161:2	161:2	9	fprintf
LEAF_NODE	161:2	161:2	10	fprintf
LEAF_NODE	161:10	161:10	9	(
ARGUMENT	161:11	161:11	9	stderr
FIELD	161:11	161:11	10	stderr
LEAF_NODE	161:11	161:11	11	stderr
LEAF_NODE	161:17	161:17	9	,
ARGUMENT	161:19	161:19	9	"Can't write image data.\n"
FIELD	161:19	161:19	10	"Can't write image data.\n"
LEAF_NODE	161:19	161:19	11	"Can't write image data.\n"
LEAF_NODE	161:46	161:46	9	)
LEAF_NODE	161:47	161:47	7	;
JUMP_STATEMENT	162:2	162:14	6	goto failure ;
KEYWORD	162:2	162:2	7	goto
LEAF_NODE	162:2	162:2	8	goto
DESTINATION	162:7	162:7	7	failure
LEAF_NODE	162:7	162:7	8	failure
LEAF_NODE	162:14	162:14	7	;
LEAF_NODE	163:1	163:1	5	}
EXPR_STATEMENT	165:1	165:15	3	TIFFClose ( tif ) ;
EXPR	165:1	165:1	4	TIFFClose ( tif )
FUNCTION_CALL	165:1	165:14	5	TIFFClose ( tif )
CALLEE	165:1	165:1	6	TIFFClose
LEAF_NODE	165:1	165:1	7	TIFFClose
LEAF_NODE	165:10	165:10	6	(
ARGUMENT	165:11	165:11	6	tif
FIELD	165:11	165:11	7	tif
LEAF_NODE	165:11	165:11	8	tif
LEAF_NODE	165:14	165:14	6	)
LEAF_NODE	165:15	165:15	4	;
JUMP_STATEMENT	166:1	166:9	3	return 0 ;
KEYWORD	166:1	166:1	4	return
LEAF_NODE	166:1	166:1	5	return
DESTINATION	166:8	166:8	4	0
EXPR	166:8	166:8	5	0
FIELD	166:8	166:8	6	0
LEAF_NODE	166:8	166:8	7	0
LEAF_NODE	166:9	166:9	4	;
LABEL	168:0	168:7	3	failure :
LEAF_NODE	168:0	168:0	4	failure
LEAF_NODE	168:7	168:7	4	:
EXPR_STATEMENT	169:1	169:15	3	TIFFClose ( tif ) ;
EXPR	169:1	169:1	4	TIFFClose ( tif )
FUNCTION_CALL	169:1	169:14	5	TIFFClose ( tif )
CALLEE	169:1	169:1	6	TIFFClose
LEAF_NODE	169:1	169:1	7	TIFFClose
LEAF_NODE	169:10	169:10	6	(
ARGUMENT	169:11	169:11	6	tif
FIELD	169:11	169:11	7	tif
LEAF_NODE	169:11	169:11	8	tif
LEAF_NODE	169:14	169:14	6	)
LEAF_NODE	169:15	169:15	4	;
LABEL	170:0	170:11	3	openfailure :
LEAF_NODE	170:0	170:0	4	openfailure
LEAF_NODE	170:11	170:11	4	:
LEAF_NODE	171:1	171:1	3	fprintf
LEAF_NODE	171:9	171:9	3	(
LEAF_NODE	171:10	171:10	3	stderr
LEAF_NODE	171:16	171:16	3	,
LEAF_NODE	171:18	171:18	3	"Can't create test TIFF file %s:\n"
LEAF_NODE	172:0	172:0	3	"    ImageWidth=%ld, ImageLength=%ld, RowsPerStrip=%ld, Compression=%d,\n"
LEAF_NODE	173:0	173:0	3	"    BitsPerSample=%d, SamplesPerPixel=%d, SampleFormat=%d,\n"
LEAF_NODE	174:0	174:0	3	"    PlanarConfiguration=%d, PhotometricInterpretation=%d.\n"
LEAF_NODE	174:61	174:61	3	,
LEAF_NODE	175:3	175:3	3	name
LEAF_NODE	175:7	175:7	3	,
LEAF_NODE	175:9	175:9	3	(
LEAF_NODE	175:10	175:10	3	long
LEAF_NODE	175:14	175:14	3	)
LEAF_NODE	175:16	175:16	3	width
LEAF_NODE	175:21	175:21	3	,
LEAF_NODE	175:23	175:23	3	(
LEAF_NODE	175:24	175:24	3	long
LEAF_NODE	175:28	175:28	3	)
LEAF_NODE	175:30	175:30	3	length
LEAF_NODE	175:36	175:36	3	,
LEAF_NODE	175:38	175:38	3	(
LEAF_NODE	175:39	175:39	3	long
LEAF_NODE	175:43	175:43	3	)
LEAF_NODE	175:45	175:45	3	rowsperstrip
LEAF_NODE	175:57	175:57	3	,
LEAF_NODE	176:17	176:17	3	compression
LEAF_NODE	176:28	176:28	3	,
LEAF_NODE	176:30	176:30	3	bps
LEAF_NODE	176:33	176:33	3	,
LEAF_NODE	176:35	176:35	3	spp
LEAF_NODE	176:38	176:38	3	,
LEAF_NODE	176:40	176:40	3	sampleformat
LEAF_NODE	176:52	176:52	3	,
LEAF_NODE	176:54	176:54	3	planarconfig
LEAF_NODE	176:66	176:66	3	,
LEAF_NODE	177:3	177:3	3	photometric
LEAF_NODE	177:14	177:14	3	)
LEAF_NODE	177:15	177:15	3	;
JUMP_STATEMENT	178:1	178:10	3	return - 1 ;
KEYWORD	178:1	178:1	4	return
LEAF_NODE	178:1	178:1	5	return
DESTINATION	178:8	178:8	4	- 1
EXPR	178:8	178:8	5	- 1
UNARY_EXPR	178:8	178:9	6	- 1
UNARY_OPERATOR	178:8	178:8	7	-
LEAF_NODE	178:8	178:8	8	-
FIELD	178:9	178:9	7	1
LEAF_NODE	178:9	178:9	8	1
LEAF_NODE	178:10	178:10	4	;
LEAF_NODE	179:0	179:0	2	}
FUNCTION_DEF	181:0	257:0	1	
RETURN_TYPE	181:0	181:0	2	int
TYPE_NAME	181:0	181:0	3	int
LEAF_NODE	181:0	181:0	4	int
FUNCTION_NAME	182:0	182:0	2	read_image_striped
LEAF_NODE	182:0	182:0	3	read_image_striped
PARAMETER_LIST	182:18	186:45	2	( const char * name , uint32 width , uint32 length , uint32 rowsperstrip , uint16 compression , uint16 spp , uint16 bps , uint16 photometric , uint16 sampleformat , uint16 planarconfig , const tdata_t array , const tsize_t size )
LEAF_NODE	182:18	182:18	3	(
PARAMETER_DECL	182:19	182:31	3	const char * name
TYPE	182:19	182:30	4	const char *
TYPE_NAME	182:19	182:25	5	const char
LEAF_NODE	182:19	182:19	6	const
LEAF_NODE	182:25	182:25	6	char
POINTER	182:30	182:30	5	*
LEAF_NODE	182:30	182:30	6	*
NAME	182:31	182:31	4	name
LEAF_NODE	182:31	182:31	5	name
LEAF_NODE	182:35	182:35	3	,
PARAMETER_DECL	182:37	182:44	3	uint32 width
TYPE	182:37	182:37	4	uint32
TYPE_NAME	182:37	182:37	5	uint32
LEAF_NODE	182:37	182:37	6	uint32
NAME	182:44	182:44	4	width
LEAF_NODE	182:44	182:44	5	width
LEAF_NODE	182:49	182:49	3	,
PARAMETER_DECL	182:51	182:58	3	uint32 length
TYPE	182:51	182:51	4	uint32
TYPE_NAME	182:51	182:51	5	uint32
LEAF_NODE	182:51	182:51	6	uint32
NAME	182:58	182:58	4	length
LEAF_NODE	182:58	182:58	5	length
LEAF_NODE	182:64	182:64	3	,
PARAMETER_DECL	183:6	183:13	3	uint32 rowsperstrip
TYPE	183:6	183:6	4	uint32
TYPE_NAME	183:6	183:6	5	uint32
LEAF_NODE	183:6	183:6	6	uint32
NAME	183:13	183:13	4	rowsperstrip
LEAF_NODE	183:13	183:13	5	rowsperstrip
LEAF_NODE	183:25	183:25	3	,
PARAMETER_DECL	183:27	183:34	3	uint16 compression
TYPE	183:27	183:27	4	uint16
TYPE_NAME	183:27	183:27	5	uint16
LEAF_NODE	183:27	183:27	6	uint16
NAME	183:34	183:34	4	compression
LEAF_NODE	183:34	183:34	5	compression
LEAF_NODE	183:45	183:45	3	,
PARAMETER_DECL	184:6	184:13	3	uint16 spp
TYPE	184:6	184:6	4	uint16
TYPE_NAME	184:6	184:6	5	uint16
LEAF_NODE	184:6	184:6	6	uint16
NAME	184:13	184:13	4	spp
LEAF_NODE	184:13	184:13	5	spp
LEAF_NODE	184:16	184:16	3	,
PARAMETER_DECL	184:18	184:25	3	uint16 bps
TYPE	184:18	184:18	4	uint16
TYPE_NAME	184:18	184:18	5	uint16
LEAF_NODE	184:18	184:18	6	uint16
NAME	184:25	184:25	4	bps
LEAF_NODE	184:25	184:25	5	bps
LEAF_NODE	184:28	184:28	3	,
PARAMETER_DECL	184:30	184:37	3	uint16 photometric
TYPE	184:30	184:30	4	uint16
TYPE_NAME	184:30	184:30	5	uint16
LEAF_NODE	184:30	184:30	6	uint16
NAME	184:37	184:37	4	photometric
LEAF_NODE	184:37	184:37	5	photometric
LEAF_NODE	184:48	184:48	3	,
PARAMETER_DECL	185:6	185:13	3	uint16 sampleformat
TYPE	185:6	185:6	4	uint16
TYPE_NAME	185:6	185:6	5	uint16
LEAF_NODE	185:6	185:6	6	uint16
NAME	185:13	185:13	4	sampleformat
LEAF_NODE	185:13	185:13	5	sampleformat
LEAF_NODE	185:25	185:25	3	,
PARAMETER_DECL	185:27	185:34	3	uint16 planarconfig
TYPE	185:27	185:27	4	uint16
TYPE_NAME	185:27	185:27	5	uint16
LEAF_NODE	185:27	185:27	6	uint16
NAME	185:34	185:34	4	planarconfig
LEAF_NODE	185:34	185:34	5	planarconfig
LEAF_NODE	185:46	185:46	3	,
PARAMETER_DECL	186:6	186:20	3	const tdata_t array
TYPE	186:6	186:6	4	const tdata_t
TYPE_NAME	186:6	186:12	5	const tdata_t
LEAF_NODE	186:6	186:6	6	const
LEAF_NODE	186:12	186:12	6	tdata_t
NAME	186:20	186:20	4	array
LEAF_NODE	186:20	186:20	5	array
LEAF_NODE	186:25	186:25	3	,
PARAMETER_DECL	186:27	186:41	3	const tsize_t size
TYPE	186:27	186:27	4	const tsize_t
TYPE_NAME	186:27	186:33	5	const tsize_t
LEAF_NODE	186:27	186:27	6	const
LEAF_NODE	186:33	186:33	6	tsize_t
NAME	186:41	186:41	4	size
LEAF_NODE	186:41	186:41	5	size
LEAF_NODE	186:45	186:45	3	)
LEAF_NODE	187:0	187:0	2	{
STATEMENTS	188:1	256:1	2	
SIMPLE_DECL	188:1	188:11	3	TIFF * tif ;
VAR_DECL	188:1	188:8	4	TIFF * tif
TYPE	188:1	188:7	5	TIFF *
TYPE_NAME	188:1	188:1	6	TIFF
LEAF_NODE	188:1	188:1	7	TIFF
POINTER	188:7	188:7	6	*
LEAF_NODE	188:7	188:7	7	*
NAME	188:8	188:8	5	tif
LEAF_NODE	188:8	188:8	6	tif
LEAF_NODE	188:11	188:11	4	;
SIMPLE_DECL	189:1	189:18	3	uint16 value_u16 ;
VAR_DECL	189:1	189:9	4	uint16 value_u16
TYPE	189:1	189:1	5	uint16
TYPE_NAME	189:1	189:1	6	uint16
LEAF_NODE	189:1	189:1	7	uint16
NAME	189:9	189:9	5	value_u16
LEAF_NODE	189:9	189:9	6	value_u16
LEAF_NODE	189:18	189:18	4	;
SIMPLE_DECL	190:1	190:18	3	uint32 value_u32 ;
VAR_DECL	190:1	190:9	4	uint32 value_u32
TYPE	190:1	190:1	5	uint32
TYPE_NAME	190:1	190:1	6	uint32
LEAF_NODE	190:1	190:1	7	uint32
NAME	190:9	190:9	5	value_u32
LEAF_NODE	190:9	190:9	6	value_u32
LEAF_NODE	190:18	190:18	4	;
EXPR_STATEMENT	193:1	193:26	3	tif = TIFFOpen ( name , "r" ) ;
EXPR	193:1	193:1	4	tif = TIFFOpen ( name , "r" )
ASSIGN	193:1	193:7	5	tif = TIFFOpen ( name , "r" )
LVAL	193:1	193:1	6	tif
FIELD	193:1	193:1	7	tif
LEAF_NODE	193:1	193:1	8	tif
ASSIGN_OP	193:5	193:5	6	=
LEAF_NODE	193:5	193:5	7	=
RVAL	193:7	193:7	6	TIFFOpen ( name , "r" )
FUNCTION_CALL	193:7	193:25	7	TIFFOpen ( name , "r" )
CALLEE	193:7	193:7	8	TIFFOpen
LEAF_NODE	193:7	193:7	9	TIFFOpen
LEAF_NODE	193:15	193:15	8	(
ARGUMENT	193:16	193:16	8	name
FIELD	193:16	193:16	9	name
LEAF_NODE	193:16	193:16	10	name
LEAF_NODE	193:20	193:20	8	,
ARGUMENT	193:22	193:22	8	"r"
FIELD	193:22	193:22	9	"r"
LEAF_NODE	193:22	193:22	10	"r"
LEAF_NODE	193:25	193:25	8	)
LEAF_NODE	193:26	193:26	4	;
SELECTION	194:1	195:2	3	
KEYWORD	194:1	194:1	4	if
LEAF_NODE	194:1	194:1	5	if
LEAF_NODE	194:4	194:4	4	(
CONDITION	194:5	194:5	4	! tif
EXPR	194:5	194:5	5	! tif
UNARY_EXPR	194:5	194:6	6	! tif
UNARY_OPERATOR	194:5	194:5	7	!
LEAF_NODE	194:5	194:5	8	!
FIELD	194:6	194:6	7	tif
LEAF_NODE	194:6	194:6	8	tif
LEAF_NODE	194:9	194:9	4	)
STATEMENTS	195:2	195:2	4	
JUMP_STATEMENT	195:2	195:18	5	goto openfailure ;
KEYWORD	195:2	195:2	6	goto
LEAF_NODE	195:2	195:2	7	goto
DESTINATION	195:7	195:7	6	openfailure
LEAF_NODE	195:7	195:7	7	openfailure
LEAF_NODE	195:18	195:18	6	;
SELECTION	197:1	197:23	3	
KEYWORD	197:1	197:1	4	if
LEAF_NODE	197:1	197:1	5	if
LEAF_NODE	197:4	197:4	4	(
CONDITION	197:5	197:5	4	TIFFIsTiled ( tif )
EXPR	197:5	197:5	5	TIFFIsTiled ( tif )
FUNCTION_CALL	197:5	197:20	6	TIFFIsTiled ( tif )
CALLEE	197:5	197:5	7	TIFFIsTiled
LEAF_NODE	197:5	197:5	8	TIFFIsTiled
LEAF_NODE	197:16	197:16	7	(
ARGUMENT	197:17	197:17	7	tif
FIELD	197:17	197:17	8	tif
LEAF_NODE	197:17	197:17	9	tif
LEAF_NODE	197:20	197:20	7	)
LEAF_NODE	197:21	197:21	4	)
STATEMENTS	197:23	201:1	4	
LEAF_NODE	197:23	197:23	5	{
STATEMENTS	198:2	200:2	5	
EXPR_STATEMENT	198:2	199:9	6	fprintf ( stderr , "Can't read image %s, it is tiled.\n" , name ) ;
EXPR	198:2	198:2	7	fprintf ( stderr , "Can't read image %s, it is tiled.\n" , name )
FUNCTION_CALL	198:2	199:8	8	fprintf ( stderr , "Can't read image %s, it is tiled.\n" , name )
CALLEE	198:2	198:2	9	fprintf
LEAF_NODE	198:2	198:2	10	fprintf
LEAF_NODE	198:10	198:10	9	(
ARGUMENT	198:11	198:11	9	stderr
FIELD	198:11	198:11	10	stderr
LEAF_NODE	198:11	198:11	11	stderr
LEAF_NODE	198:17	198:17	9	,
ARGUMENT	198:19	198:19	9	"Can't read image %s, it is tiled.\n"
FIELD	198:19	198:19	10	"Can't read image %s, it is tiled.\n"
LEAF_NODE	198:19	198:19	11	"Can't read image %s, it is tiled.\n"
LEAF_NODE	198:56	198:56	9	,
ARGUMENT	199:4	199:4	9	name
FIELD	199:4	199:4	10	name
LEAF_NODE	199:4	199:4	11	name
LEAF_NODE	199:8	199:8	9	)
LEAF_NODE	199:9	199:9	7	;
JUMP_STATEMENT	200:2	200:14	6	goto failure ;
KEYWORD	200:2	200:2	7	goto
LEAF_NODE	200:2	200:2	8	goto
DESTINATION	200:7	200:7	7	failure
LEAF_NODE	200:7	200:7	8	failure
LEAF_NODE	200:14	200:14	7	;
LEAF_NODE	201:1	201:1	5	}
SELECTION	202:1	203:28	3	
KEYWORD	202:1	202:1	4	if
LEAF_NODE	202:1	202:1	5	if
LEAF_NODE	202:4	202:4	4	(
CONDITION	202:5	202:5	4	! TIFFGetField ( tif , TIFFTAG_IMAGEWIDTH , & value_u32 ) || value_u32 != width
EXPR	202:5	202:5	5	! TIFFGetField ( tif , TIFFTAG_IMAGEWIDTH , & value_u32 ) || value_u32 != width
OR	202:5	203:8	6	! TIFFGetField ( tif , TIFFTAG_IMAGEWIDTH , & value_u32 ) || value_u32 != width
EXPR	202:5	202:5	7	! TIFFGetField ( tif , TIFFTAG_IMAGEWIDTH , & value_u32 )
UNARY_EXPR	202:5	202:6	8	! TIFFGetField ( tif , TIFFTAG_IMAGEWIDTH , & value_u32 )
UNARY_OPERATOR	202:5	202:5	9	!
LEAF_NODE	202:5	202:5	10	!
FUNCTION_CALL	202:6	202:54	9	TIFFGetField ( tif , TIFFTAG_IMAGEWIDTH , & value_u32 )
CALLEE	202:6	202:6	10	TIFFGetField
LEAF_NODE	202:6	202:6	11	TIFFGetField
LEAF_NODE	202:18	202:18	10	(
ARGUMENT	202:19	202:19	10	tif
FIELD	202:19	202:19	11	tif
LEAF_NODE	202:19	202:19	12	tif
LEAF_NODE	202:22	202:22	10	,
ARGUMENT	202:24	202:24	10	TIFFTAG_IMAGEWIDTH
FIELD	202:24	202:24	11	TIFFTAG_IMAGEWIDTH
LEAF_NODE	202:24	202:24	12	TIFFTAG_IMAGEWIDTH
LEAF_NODE	202:42	202:42	10	,
ARGUMENT	202:44	202:44	10	& value_u32
UNARY_EXPR	202:44	202:45	11	& value_u32
UNARY_OPERATOR	202:44	202:44	12	&
LEAF_NODE	202:44	202:44	13	&
FIELD	202:45	202:45	12	value_u32
LEAF_NODE	202:45	202:45	13	value_u32
LEAF_NODE	202:54	202:54	10	)
LEAF_NODE	203:5	203:5	7	||
EXPR	203:8	203:21	7	value_u32 != width
FIELD	203:8	203:8	8	value_u32
LEAF_NODE	203:8	203:8	9	value_u32
EQ_OPERATOR	203:18	203:18	8	!=
LEAF_NODE	203:18	203:18	9	!=
FIELD	203:21	203:21	8	width
LEAF_NODE	203:21	203:21	9	width
LEAF_NODE	203:26	203:26	4	)
STATEMENTS	203:28	206:1	4	
LEAF_NODE	203:28	203:28	5	{
STATEMENTS	204:2	205:2	5	
EXPR_STATEMENT	204:2	204:61	6	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_IMAGEWIDTH ) ;
EXPR	204:2	204:2	7	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_IMAGEWIDTH )
FUNCTION_CALL	204:2	204:60	8	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_IMAGEWIDTH )
CALLEE	204:2	204:2	9	fprintf
LEAF_NODE	204:2	204:2	10	fprintf
LEAF_NODE	204:10	204:10	9	(
ARGUMENT	204:11	204:11	9	stderr
FIELD	204:11	204:11	10	stderr
LEAF_NODE	204:11	204:11	11	stderr
LEAF_NODE	204:17	204:17	9	,
ARGUMENT	204:19	204:19	9	"Can't get tag %d.\n"
FIELD	204:19	204:19	10	"Can't get tag %d.\n"
LEAF_NODE	204:19	204:19	11	"Can't get tag %d.\n"
LEAF_NODE	204:40	204:40	9	,
ARGUMENT	204:42	204:42	9	TIFFTAG_IMAGEWIDTH
FIELD	204:42	204:42	10	TIFFTAG_IMAGEWIDTH
LEAF_NODE	204:42	204:42	11	TIFFTAG_IMAGEWIDTH
LEAF_NODE	204:60	204:60	9	)
LEAF_NODE	204:61	204:61	7	;
JUMP_STATEMENT	205:2	205:14	6	goto failure ;
KEYWORD	205:2	205:2	7	goto
LEAF_NODE	205:2	205:2	8	goto
DESTINATION	205:7	205:7	7	failure
LEAF_NODE	205:7	205:7	8	failure
LEAF_NODE	205:14	205:14	7	;
LEAF_NODE	206:1	206:1	5	}
SELECTION	207:1	208:29	3	
KEYWORD	207:1	207:1	4	if
LEAF_NODE	207:1	207:1	5	if
LEAF_NODE	207:4	207:4	4	(
CONDITION	207:5	207:5	4	! TIFFGetField ( tif , TIFFTAG_IMAGELENGTH , & value_u32 ) || value_u32 != length
EXPR	207:5	207:5	5	! TIFFGetField ( tif , TIFFTAG_IMAGELENGTH , & value_u32 ) || value_u32 != length
OR	207:5	208:8	6	! TIFFGetField ( tif , TIFFTAG_IMAGELENGTH , & value_u32 ) || value_u32 != length
EXPR	207:5	207:5	7	! TIFFGetField ( tif , TIFFTAG_IMAGELENGTH , & value_u32 )
UNARY_EXPR	207:5	207:6	8	! TIFFGetField ( tif , TIFFTAG_IMAGELENGTH , & value_u32 )
UNARY_OPERATOR	207:5	207:5	9	!
LEAF_NODE	207:5	207:5	10	!
FUNCTION_CALL	207:6	207:55	9	TIFFGetField ( tif , TIFFTAG_IMAGELENGTH , & value_u32 )
CALLEE	207:6	207:6	10	TIFFGetField
LEAF_NODE	207:6	207:6	11	TIFFGetField
LEAF_NODE	207:18	207:18	10	(
ARGUMENT	207:19	207:19	10	tif
FIELD	207:19	207:19	11	tif
LEAF_NODE	207:19	207:19	12	tif
LEAF_NODE	207:22	207:22	10	,
ARGUMENT	207:24	207:24	10	TIFFTAG_IMAGELENGTH
FIELD	207:24	207:24	11	TIFFTAG_IMAGELENGTH
LEAF_NODE	207:24	207:24	12	TIFFTAG_IMAGELENGTH
LEAF_NODE	207:43	207:43	10	,
ARGUMENT	207:45	207:45	10	& value_u32
UNARY_EXPR	207:45	207:46	11	& value_u32
UNARY_OPERATOR	207:45	207:45	12	&
LEAF_NODE	207:45	207:45	13	&
FIELD	207:46	207:46	12	value_u32
LEAF_NODE	207:46	207:46	13	value_u32
LEAF_NODE	207:55	207:55	10	)
LEAF_NODE	208:5	208:5	7	||
EXPR	208:8	208:21	7	value_u32 != length
FIELD	208:8	208:8	8	value_u32
LEAF_NODE	208:8	208:8	9	value_u32
EQ_OPERATOR	208:18	208:18	8	!=
LEAF_NODE	208:18	208:18	9	!=
FIELD	208:21	208:21	8	length
LEAF_NODE	208:21	208:21	9	length
LEAF_NODE	208:27	208:27	4	)
STATEMENTS	208:29	211:1	4	
LEAF_NODE	208:29	208:29	5	{
STATEMENTS	209:2	210:2	5	
EXPR_STATEMENT	209:2	209:62	6	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_IMAGELENGTH ) ;
EXPR	209:2	209:2	7	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_IMAGELENGTH )
FUNCTION_CALL	209:2	209:61	8	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_IMAGELENGTH )
CALLEE	209:2	209:2	9	fprintf
LEAF_NODE	209:2	209:2	10	fprintf
LEAF_NODE	209:10	209:10	9	(
ARGUMENT	209:11	209:11	9	stderr
FIELD	209:11	209:11	10	stderr
LEAF_NODE	209:11	209:11	11	stderr
LEAF_NODE	209:17	209:17	9	,
ARGUMENT	209:19	209:19	9	"Can't get tag %d.\n"
FIELD	209:19	209:19	10	"Can't get tag %d.\n"
LEAF_NODE	209:19	209:19	11	"Can't get tag %d.\n"
LEAF_NODE	209:40	209:40	9	,
ARGUMENT	209:42	209:42	9	TIFFTAG_IMAGELENGTH
FIELD	209:42	209:42	10	TIFFTAG_IMAGELENGTH
LEAF_NODE	209:42	209:42	11	TIFFTAG_IMAGELENGTH
LEAF_NODE	209:61	209:61	9	)
LEAF_NODE	209:62	209:62	7	;
JUMP_STATEMENT	210:2	210:14	6	goto failure ;
KEYWORD	210:2	210:2	7	goto
LEAF_NODE	210:2	210:2	8	goto
DESTINATION	210:7	210:7	7	failure
LEAF_NODE	210:7	210:7	8	failure
LEAF_NODE	210:14	210:14	7	;
LEAF_NODE	211:1	211:1	5	}
SELECTION	212:1	213:26	3	
KEYWORD	212:1	212:1	4	if
LEAF_NODE	212:1	212:1	5	if
LEAF_NODE	212:4	212:4	4	(
CONDITION	212:5	212:5	4	! TIFFGetField ( tif , TIFFTAG_BITSPERSAMPLE , & value_u16 ) || value_u16 != bps
EXPR	212:5	212:5	5	! TIFFGetField ( tif , TIFFTAG_BITSPERSAMPLE , & value_u16 ) || value_u16 != bps
OR	212:5	213:8	6	! TIFFGetField ( tif , TIFFTAG_BITSPERSAMPLE , & value_u16 ) || value_u16 != bps
EXPR	212:5	212:5	7	! TIFFGetField ( tif , TIFFTAG_BITSPERSAMPLE , & value_u16 )
UNARY_EXPR	212:5	212:6	8	! TIFFGetField ( tif , TIFFTAG_BITSPERSAMPLE , & value_u16 )
UNARY_OPERATOR	212:5	212:5	9	!
LEAF_NODE	212:5	212:5	10	!
FUNCTION_CALL	212:6	212:57	9	TIFFGetField ( tif , TIFFTAG_BITSPERSAMPLE , & value_u16 )
CALLEE	212:6	212:6	10	TIFFGetField
LEAF_NODE	212:6	212:6	11	TIFFGetField
LEAF_NODE	212:18	212:18	10	(
ARGUMENT	212:19	212:19	10	tif
FIELD	212:19	212:19	11	tif
LEAF_NODE	212:19	212:19	12	tif
LEAF_NODE	212:22	212:22	10	,
ARGUMENT	212:24	212:24	10	TIFFTAG_BITSPERSAMPLE
FIELD	212:24	212:24	11	TIFFTAG_BITSPERSAMPLE
LEAF_NODE	212:24	212:24	12	TIFFTAG_BITSPERSAMPLE
LEAF_NODE	212:45	212:45	10	,
ARGUMENT	212:47	212:47	10	& value_u16
UNARY_EXPR	212:47	212:48	11	& value_u16
UNARY_OPERATOR	212:47	212:47	12	&
LEAF_NODE	212:47	212:47	13	&
FIELD	212:48	212:48	12	value_u16
LEAF_NODE	212:48	212:48	13	value_u16
LEAF_NODE	212:57	212:57	10	)
LEAF_NODE	213:5	213:5	7	||
EXPR	213:8	213:21	7	value_u16 != bps
FIELD	213:8	213:8	8	value_u16
LEAF_NODE	213:8	213:8	9	value_u16
EQ_OPERATOR	213:18	213:18	8	!=
LEAF_NODE	213:18	213:18	9	!=
FIELD	213:21	213:21	8	bps
LEAF_NODE	213:21	213:21	9	bps
LEAF_NODE	213:24	213:24	4	)
STATEMENTS	213:26	216:1	4	
LEAF_NODE	213:26	213:26	5	{
STATEMENTS	214:2	215:2	5	
EXPR_STATEMENT	214:2	214:64	6	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_BITSPERSAMPLE ) ;
EXPR	214:2	214:2	7	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_BITSPERSAMPLE )
FUNCTION_CALL	214:2	214:63	8	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_BITSPERSAMPLE )
CALLEE	214:2	214:2	9	fprintf
LEAF_NODE	214:2	214:2	10	fprintf
LEAF_NODE	214:10	214:10	9	(
ARGUMENT	214:11	214:11	9	stderr
FIELD	214:11	214:11	10	stderr
LEAF_NODE	214:11	214:11	11	stderr
LEAF_NODE	214:17	214:17	9	,
ARGUMENT	214:19	214:19	9	"Can't get tag %d.\n"
FIELD	214:19	214:19	10	"Can't get tag %d.\n"
LEAF_NODE	214:19	214:19	11	"Can't get tag %d.\n"
LEAF_NODE	214:40	214:40	9	,
ARGUMENT	214:42	214:42	9	TIFFTAG_BITSPERSAMPLE
FIELD	214:42	214:42	10	TIFFTAG_BITSPERSAMPLE
LEAF_NODE	214:42	214:42	11	TIFFTAG_BITSPERSAMPLE
LEAF_NODE	214:63	214:63	9	)
LEAF_NODE	214:64	214:64	7	;
JUMP_STATEMENT	215:2	215:14	6	goto failure ;
KEYWORD	215:2	215:2	7	goto
LEAF_NODE	215:2	215:2	8	goto
DESTINATION	215:7	215:7	7	failure
LEAF_NODE	215:7	215:7	8	failure
LEAF_NODE	215:14	215:14	7	;
LEAF_NODE	216:1	216:1	5	}
SELECTION	217:1	218:34	3	
KEYWORD	217:1	217:1	4	if
LEAF_NODE	217:1	217:1	5	if
LEAF_NODE	217:4	217:4	4	(
CONDITION	217:5	217:5	4	! TIFFGetField ( tif , TIFFTAG_PHOTOMETRIC , & value_u16 ) || value_u16 != photometric
EXPR	217:5	217:5	5	! TIFFGetField ( tif , TIFFTAG_PHOTOMETRIC , & value_u16 ) || value_u16 != photometric
OR	217:5	218:8	6	! TIFFGetField ( tif , TIFFTAG_PHOTOMETRIC , & value_u16 ) || value_u16 != photometric
EXPR	217:5	217:5	7	! TIFFGetField ( tif , TIFFTAG_PHOTOMETRIC , & value_u16 )
UNARY_EXPR	217:5	217:6	8	! TIFFGetField ( tif , TIFFTAG_PHOTOMETRIC , & value_u16 )
UNARY_OPERATOR	217:5	217:5	9	!
LEAF_NODE	217:5	217:5	10	!
FUNCTION_CALL	217:6	217:55	9	TIFFGetField ( tif , TIFFTAG_PHOTOMETRIC , & value_u16 )
CALLEE	217:6	217:6	10	TIFFGetField
LEAF_NODE	217:6	217:6	11	TIFFGetField
LEAF_NODE	217:18	217:18	10	(
ARGUMENT	217:19	217:19	10	tif
FIELD	217:19	217:19	11	tif
LEAF_NODE	217:19	217:19	12	tif
LEAF_NODE	217:22	217:22	10	,
ARGUMENT	217:24	217:24	10	TIFFTAG_PHOTOMETRIC
FIELD	217:24	217:24	11	TIFFTAG_PHOTOMETRIC
LEAF_NODE	217:24	217:24	12	TIFFTAG_PHOTOMETRIC
LEAF_NODE	217:43	217:43	10	,
ARGUMENT	217:45	217:45	10	& value_u16
UNARY_EXPR	217:45	217:46	11	& value_u16
UNARY_OPERATOR	217:45	217:45	12	&
LEAF_NODE	217:45	217:45	13	&
FIELD	217:46	217:46	12	value_u16
LEAF_NODE	217:46	217:46	13	value_u16
LEAF_NODE	217:55	217:55	10	)
LEAF_NODE	218:5	218:5	7	||
EXPR	218:8	218:21	7	value_u16 != photometric
FIELD	218:8	218:8	8	value_u16
LEAF_NODE	218:8	218:8	9	value_u16
EQ_OPERATOR	218:18	218:18	8	!=
LEAF_NODE	218:18	218:18	9	!=
FIELD	218:21	218:21	8	photometric
LEAF_NODE	218:21	218:21	9	photometric
LEAF_NODE	218:32	218:32	4	)
STATEMENTS	218:34	221:1	4	
LEAF_NODE	218:34	218:34	5	{
STATEMENTS	219:2	220:2	5	
EXPR_STATEMENT	219:2	219:62	6	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_PHOTOMETRIC ) ;
EXPR	219:2	219:2	7	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_PHOTOMETRIC )
FUNCTION_CALL	219:2	219:61	8	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_PHOTOMETRIC )
CALLEE	219:2	219:2	9	fprintf
LEAF_NODE	219:2	219:2	10	fprintf
LEAF_NODE	219:10	219:10	9	(
ARGUMENT	219:11	219:11	9	stderr
FIELD	219:11	219:11	10	stderr
LEAF_NODE	219:11	219:11	11	stderr
LEAF_NODE	219:17	219:17	9	,
ARGUMENT	219:19	219:19	9	"Can't get tag %d.\n"
FIELD	219:19	219:19	10	"Can't get tag %d.\n"
LEAF_NODE	219:19	219:19	11	"Can't get tag %d.\n"
LEAF_NODE	219:40	219:40	9	,
ARGUMENT	219:42	219:42	9	TIFFTAG_PHOTOMETRIC
FIELD	219:42	219:42	10	TIFFTAG_PHOTOMETRIC
LEAF_NODE	219:42	219:42	11	TIFFTAG_PHOTOMETRIC
LEAF_NODE	219:61	219:61	9	)
LEAF_NODE	219:62	219:62	7	;
JUMP_STATEMENT	220:2	220:14	6	goto failure ;
KEYWORD	220:2	220:2	7	goto
LEAF_NODE	220:2	220:2	8	goto
DESTINATION	220:7	220:7	7	failure
LEAF_NODE	220:7	220:7	8	failure
LEAF_NODE	220:14	220:14	7	;
LEAF_NODE	221:1	221:1	5	}
SELECTION	222:1	223:26	3	
KEYWORD	222:1	222:1	4	if
LEAF_NODE	222:1	222:1	5	if
LEAF_NODE	222:4	222:4	4	(
CONDITION	222:5	222:5	4	! TIFFGetField ( tif , TIFFTAG_SAMPLESPERPIXEL , & value_u16 ) || value_u16 != spp
EXPR	222:5	222:5	5	! TIFFGetField ( tif , TIFFTAG_SAMPLESPERPIXEL , & value_u16 ) || value_u16 != spp
OR	222:5	223:8	6	! TIFFGetField ( tif , TIFFTAG_SAMPLESPERPIXEL , & value_u16 ) || value_u16 != spp
EXPR	222:5	222:5	7	! TIFFGetField ( tif , TIFFTAG_SAMPLESPERPIXEL , & value_u16 )
UNARY_EXPR	222:5	222:6	8	! TIFFGetField ( tif , TIFFTAG_SAMPLESPERPIXEL , & value_u16 )
UNARY_OPERATOR	222:5	222:5	9	!
LEAF_NODE	222:5	222:5	10	!
FUNCTION_CALL	222:6	222:59	9	TIFFGetField ( tif , TIFFTAG_SAMPLESPERPIXEL , & value_u16 )
CALLEE	222:6	222:6	10	TIFFGetField
LEAF_NODE	222:6	222:6	11	TIFFGetField
LEAF_NODE	222:18	222:18	10	(
ARGUMENT	222:19	222:19	10	tif
FIELD	222:19	222:19	11	tif
LEAF_NODE	222:19	222:19	12	tif
LEAF_NODE	222:22	222:22	10	,
ARGUMENT	222:24	222:24	10	TIFFTAG_SAMPLESPERPIXEL
FIELD	222:24	222:24	11	TIFFTAG_SAMPLESPERPIXEL
LEAF_NODE	222:24	222:24	12	TIFFTAG_SAMPLESPERPIXEL
LEAF_NODE	222:47	222:47	10	,
ARGUMENT	222:49	222:49	10	& value_u16
UNARY_EXPR	222:49	222:50	11	& value_u16
UNARY_OPERATOR	222:49	222:49	12	&
LEAF_NODE	222:49	222:49	13	&
FIELD	222:50	222:50	12	value_u16
LEAF_NODE	222:50	222:50	13	value_u16
LEAF_NODE	222:59	222:59	10	)
LEAF_NODE	223:5	223:5	7	||
EXPR	223:8	223:21	7	value_u16 != spp
FIELD	223:8	223:8	8	value_u16
LEAF_NODE	223:8	223:8	9	value_u16
EQ_OPERATOR	223:18	223:18	8	!=
LEAF_NODE	223:18	223:18	9	!=
FIELD	223:21	223:21	8	spp
LEAF_NODE	223:21	223:21	9	spp
LEAF_NODE	223:24	223:24	4	)
STATEMENTS	223:26	226:1	4	
LEAF_NODE	223:26	223:26	5	{
STATEMENTS	224:2	225:2	5	
EXPR_STATEMENT	224:2	224:66	6	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_SAMPLESPERPIXEL ) ;
EXPR	224:2	224:2	7	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_SAMPLESPERPIXEL )
FUNCTION_CALL	224:2	224:65	8	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_SAMPLESPERPIXEL )
CALLEE	224:2	224:2	9	fprintf
LEAF_NODE	224:2	224:2	10	fprintf
LEAF_NODE	224:10	224:10	9	(
ARGUMENT	224:11	224:11	9	stderr
FIELD	224:11	224:11	10	stderr
LEAF_NODE	224:11	224:11	11	stderr
LEAF_NODE	224:17	224:17	9	,
ARGUMENT	224:19	224:19	9	"Can't get tag %d.\n"
FIELD	224:19	224:19	10	"Can't get tag %d.\n"
LEAF_NODE	224:19	224:19	11	"Can't get tag %d.\n"
LEAF_NODE	224:40	224:40	9	,
ARGUMENT	224:42	224:42	9	TIFFTAG_SAMPLESPERPIXEL
FIELD	224:42	224:42	10	TIFFTAG_SAMPLESPERPIXEL
LEAF_NODE	224:42	224:42	11	TIFFTAG_SAMPLESPERPIXEL
LEAF_NODE	224:65	224:65	9	)
LEAF_NODE	224:66	224:66	7	;
JUMP_STATEMENT	225:2	225:14	6	goto failure ;
KEYWORD	225:2	225:2	7	goto
LEAF_NODE	225:2	225:2	8	goto
DESTINATION	225:7	225:7	7	failure
LEAF_NODE	225:7	225:7	8	failure
LEAF_NODE	225:14	225:14	7	;
LEAF_NODE	226:1	226:1	5	}
SELECTION	227:1	228:35	3	
KEYWORD	227:1	227:1	4	if
LEAF_NODE	227:1	227:1	5	if
LEAF_NODE	227:4	227:4	4	(
CONDITION	227:5	227:5	4	! TIFFGetField ( tif , TIFFTAG_ROWSPERSTRIP , & value_u32 ) || value_u32 != rowsperstrip
EXPR	227:5	227:5	5	! TIFFGetField ( tif , TIFFTAG_ROWSPERSTRIP , & value_u32 ) || value_u32 != rowsperstrip
OR	227:5	228:8	6	! TIFFGetField ( tif , TIFFTAG_ROWSPERSTRIP , & value_u32 ) || value_u32 != rowsperstrip
EXPR	227:5	227:5	7	! TIFFGetField ( tif , TIFFTAG_ROWSPERSTRIP , & value_u32 )
UNARY_EXPR	227:5	227:6	8	! TIFFGetField ( tif , TIFFTAG_ROWSPERSTRIP , & value_u32 )
UNARY_OPERATOR	227:5	227:5	9	!
LEAF_NODE	227:5	227:5	10	!
FUNCTION_CALL	227:6	227:56	9	TIFFGetField ( tif , TIFFTAG_ROWSPERSTRIP , & value_u32 )
CALLEE	227:6	227:6	10	TIFFGetField
LEAF_NODE	227:6	227:6	11	TIFFGetField
LEAF_NODE	227:18	227:18	10	(
ARGUMENT	227:19	227:19	10	tif
FIELD	227:19	227:19	11	tif
LEAF_NODE	227:19	227:19	12	tif
LEAF_NODE	227:22	227:22	10	,
ARGUMENT	227:24	227:24	10	TIFFTAG_ROWSPERSTRIP
FIELD	227:24	227:24	11	TIFFTAG_ROWSPERSTRIP
LEAF_NODE	227:24	227:24	12	TIFFTAG_ROWSPERSTRIP
LEAF_NODE	227:44	227:44	10	,
ARGUMENT	227:46	227:46	10	& value_u32
UNARY_EXPR	227:46	227:47	11	& value_u32
UNARY_OPERATOR	227:46	227:46	12	&
LEAF_NODE	227:46	227:46	13	&
FIELD	227:47	227:47	12	value_u32
LEAF_NODE	227:47	227:47	13	value_u32
LEAF_NODE	227:56	227:56	10	)
LEAF_NODE	228:5	228:5	7	||
EXPR	228:8	228:21	7	value_u32 != rowsperstrip
FIELD	228:8	228:8	8	value_u32
LEAF_NODE	228:8	228:8	9	value_u32
EQ_OPERATOR	228:18	228:18	8	!=
LEAF_NODE	228:18	228:18	9	!=
FIELD	228:21	228:21	8	rowsperstrip
LEAF_NODE	228:21	228:21	9	rowsperstrip
LEAF_NODE	228:33	228:33	4	)
STATEMENTS	228:35	231:1	4	
LEAF_NODE	228:35	228:35	5	{
STATEMENTS	229:2	230:2	5	
EXPR_STATEMENT	229:2	229:63	6	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_ROWSPERSTRIP ) ;
EXPR	229:2	229:2	7	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_ROWSPERSTRIP )
FUNCTION_CALL	229:2	229:62	8	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_ROWSPERSTRIP )
CALLEE	229:2	229:2	9	fprintf
LEAF_NODE	229:2	229:2	10	fprintf
LEAF_NODE	229:10	229:10	9	(
ARGUMENT	229:11	229:11	9	stderr
FIELD	229:11	229:11	10	stderr
LEAF_NODE	229:11	229:11	11	stderr
LEAF_NODE	229:17	229:17	9	,
ARGUMENT	229:19	229:19	9	"Can't get tag %d.\n"
FIELD	229:19	229:19	10	"Can't get tag %d.\n"
LEAF_NODE	229:19	229:19	11	"Can't get tag %d.\n"
LEAF_NODE	229:40	229:40	9	,
ARGUMENT	229:42	229:42	9	TIFFTAG_ROWSPERSTRIP
FIELD	229:42	229:42	10	TIFFTAG_ROWSPERSTRIP
LEAF_NODE	229:42	229:42	11	TIFFTAG_ROWSPERSTRIP
LEAF_NODE	229:62	229:62	9	)
LEAF_NODE	229:63	229:63	7	;
JUMP_STATEMENT	230:2	230:14	6	goto failure ;
KEYWORD	230:2	230:2	7	goto
LEAF_NODE	230:2	230:2	8	goto
DESTINATION	230:7	230:7	7	failure
LEAF_NODE	230:7	230:7	8	failure
LEAF_NODE	230:14	230:14	7	;
LEAF_NODE	231:1	231:1	5	}
SELECTION	232:1	233:35	3	
KEYWORD	232:1	232:1	4	if
LEAF_NODE	232:1	232:1	5	if
LEAF_NODE	232:4	232:4	4	(
CONDITION	232:5	232:5	4	! TIFFGetField ( tif , TIFFTAG_PLANARCONFIG , & value_u16 ) || value_u16 != planarconfig
EXPR	232:5	232:5	5	! TIFFGetField ( tif , TIFFTAG_PLANARCONFIG , & value_u16 ) || value_u16 != planarconfig
OR	232:5	233:8	6	! TIFFGetField ( tif , TIFFTAG_PLANARCONFIG , & value_u16 ) || value_u16 != planarconfig
EXPR	232:5	232:5	7	! TIFFGetField ( tif , TIFFTAG_PLANARCONFIG , & value_u16 )
UNARY_EXPR	232:5	232:6	8	! TIFFGetField ( tif , TIFFTAG_PLANARCONFIG , & value_u16 )
UNARY_OPERATOR	232:5	232:5	9	!
LEAF_NODE	232:5	232:5	10	!
FUNCTION_CALL	232:6	232:56	9	TIFFGetField ( tif , TIFFTAG_PLANARCONFIG , & value_u16 )
CALLEE	232:6	232:6	10	TIFFGetField
LEAF_NODE	232:6	232:6	11	TIFFGetField
LEAF_NODE	232:18	232:18	10	(
ARGUMENT	232:19	232:19	10	tif
FIELD	232:19	232:19	11	tif
LEAF_NODE	232:19	232:19	12	tif
LEAF_NODE	232:22	232:22	10	,
ARGUMENT	232:24	232:24	10	TIFFTAG_PLANARCONFIG
FIELD	232:24	232:24	11	TIFFTAG_PLANARCONFIG
LEAF_NODE	232:24	232:24	12	TIFFTAG_PLANARCONFIG
LEAF_NODE	232:44	232:44	10	,
ARGUMENT	232:46	232:46	10	& value_u16
UNARY_EXPR	232:46	232:47	11	& value_u16
UNARY_OPERATOR	232:46	232:46	12	&
LEAF_NODE	232:46	232:46	13	&
FIELD	232:47	232:47	12	value_u16
LEAF_NODE	232:47	232:47	13	value_u16
LEAF_NODE	232:56	232:56	10	)
LEAF_NODE	233:5	233:5	7	||
EXPR	233:8	233:21	7	value_u16 != planarconfig
FIELD	233:8	233:8	8	value_u16
LEAF_NODE	233:8	233:8	9	value_u16
EQ_OPERATOR	233:18	233:18	8	!=
LEAF_NODE	233:18	233:18	9	!=
FIELD	233:21	233:21	8	planarconfig
LEAF_NODE	233:21	233:21	9	planarconfig
LEAF_NODE	233:33	233:33	4	)
STATEMENTS	233:35	236:1	4	
LEAF_NODE	233:35	233:35	5	{
STATEMENTS	234:2	235:2	5	
EXPR_STATEMENT	234:2	234:63	6	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_PLANARCONFIG ) ;
EXPR	234:2	234:2	7	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_PLANARCONFIG )
FUNCTION_CALL	234:2	234:62	8	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_PLANARCONFIG )
CALLEE	234:2	234:2	9	fprintf
LEAF_NODE	234:2	234:2	10	fprintf
LEAF_NODE	234:10	234:10	9	(
ARGUMENT	234:11	234:11	9	stderr
FIELD	234:11	234:11	10	stderr
LEAF_NODE	234:11	234:11	11	stderr
LEAF_NODE	234:17	234:17	9	,
ARGUMENT	234:19	234:19	9	"Can't get tag %d.\n"
FIELD	234:19	234:19	10	"Can't get tag %d.\n"
LEAF_NODE	234:19	234:19	11	"Can't get tag %d.\n"
LEAF_NODE	234:40	234:40	9	,
ARGUMENT	234:42	234:42	9	TIFFTAG_PLANARCONFIG
FIELD	234:42	234:42	10	TIFFTAG_PLANARCONFIG
LEAF_NODE	234:42	234:42	11	TIFFTAG_PLANARCONFIG
LEAF_NODE	234:62	234:62	9	)
LEAF_NODE	234:63	234:63	7	;
JUMP_STATEMENT	235:2	235:14	6	goto failure ;
KEYWORD	235:2	235:2	7	goto
LEAF_NODE	235:2	235:2	8	goto
DESTINATION	235:7	235:7	7	failure
LEAF_NODE	235:7	235:7	8	failure
LEAF_NODE	235:14	235:14	7	;
LEAF_NODE	236:1	236:1	5	}
SELECTION	238:1	238:40	3	
KEYWORD	238:1	238:1	4	if
LEAF_NODE	238:1	238:1	5	if
LEAF_NODE	238:4	238:4	4	(
CONDITION	238:5	238:5	4	read_strips ( tif , array , size ) < 0
EXPR	238:5	238:37	5	read_strips ( tif , array , size ) < 0
FUNCTION_CALL	238:5	238:33	6	read_strips ( tif , array , size )
CALLEE	238:5	238:5	7	read_strips
LEAF_NODE	238:5	238:5	8	read_strips
LEAF_NODE	238:16	238:16	7	(
ARGUMENT	238:17	238:17	7	tif
FIELD	238:17	238:17	8	tif
LEAF_NODE	238:17	238:17	9	tif
LEAF_NODE	238:20	238:20	7	,
ARGUMENT	238:22	238:22	7	array
FIELD	238:22	238:22	8	array
LEAF_NODE	238:22	238:22	9	array
LEAF_NODE	238:27	238:27	7	,
ARGUMENT	238:29	238:29	7	size
FIELD	238:29	238:29	8	size
LEAF_NODE	238:29	238:29	9	size
LEAF_NODE	238:33	238:33	7	)
REL_OPERATOR	238:35	238:35	6	<
LEAF_NODE	238:35	238:35	7	<
FIELD	238:37	238:37	6	0
LEAF_NODE	238:37	238:37	7	0
LEAF_NODE	238:38	238:38	4	)
STATEMENTS	238:40	241:1	4	
LEAF_NODE	238:40	238:40	5	{
STATEMENTS	239:2	240:2	5	
EXPR_STATEMENT	239:2	239:46	6	fprintf ( stderr , "Can't read image data.\n" ) ;
EXPR	239:2	239:2	7	fprintf ( stderr , "Can't read image data.\n" )
FUNCTION_CALL	239:2	239:45	8	fprintf ( stderr , "Can't read image data.\n" )
CALLEE	239:2	239:2	9	fprintf
LEAF_NODE	239:2	239:2	10	fprintf
LEAF_NODE	239:10	239:10	9	(
ARGUMENT	239:11	239:11	9	stderr
FIELD	239:11	239:11	10	stderr
LEAF_NODE	239:11	239:11	11	stderr
LEAF_NODE	239:17	239:17	9	,
ARGUMENT	239:19	239:19	9	"Can't read image data.\n"
FIELD	239:19	239:19	10	"Can't read image data.\n"
LEAF_NODE	239:19	239:19	11	"Can't read image data.\n"
LEAF_NODE	239:45	239:45	9	)
LEAF_NODE	239:46	239:46	7	;
JUMP_STATEMENT	240:2	240:14	6	goto failure ;
KEYWORD	240:2	240:2	7	goto
LEAF_NODE	240:2	240:2	8	goto
DESTINATION	240:7	240:7	7	failure
LEAF_NODE	240:7	240:7	8	failure
LEAF_NODE	240:14	240:14	7	;
LEAF_NODE	241:1	241:1	5	}
EXPR_STATEMENT	243:1	243:15	3	TIFFClose ( tif ) ;
EXPR	243:1	243:1	4	TIFFClose ( tif )
FUNCTION_CALL	243:1	243:14	5	TIFFClose ( tif )
CALLEE	243:1	243:1	6	TIFFClose
LEAF_NODE	243:1	243:1	7	TIFFClose
LEAF_NODE	243:10	243:10	6	(
ARGUMENT	243:11	243:11	6	tif
FIELD	243:11	243:11	7	tif
LEAF_NODE	243:11	243:11	8	tif
LEAF_NODE	243:14	243:14	6	)
LEAF_NODE	243:15	243:15	4	;
JUMP_STATEMENT	244:1	244:9	3	return 0 ;
KEYWORD	244:1	244:1	4	return
LEAF_NODE	244:1	244:1	5	return
DESTINATION	244:8	244:8	4	0
EXPR	244:8	244:8	5	0
FIELD	244:8	244:8	6	0
LEAF_NODE	244:8	244:8	7	0
LEAF_NODE	244:9	244:9	4	;
LABEL	246:0	246:7	3	failure :
LEAF_NODE	246:0	246:0	4	failure
LEAF_NODE	246:7	246:7	4	:
EXPR_STATEMENT	247:1	247:15	3	TIFFClose ( tif ) ;
EXPR	247:1	247:1	4	TIFFClose ( tif )
FUNCTION_CALL	247:1	247:14	5	TIFFClose ( tif )
CALLEE	247:1	247:1	6	TIFFClose
LEAF_NODE	247:1	247:1	7	TIFFClose
LEAF_NODE	247:10	247:10	6	(
ARGUMENT	247:11	247:11	6	tif
FIELD	247:11	247:11	7	tif
LEAF_NODE	247:11	247:11	8	tif
LEAF_NODE	247:14	247:14	6	)
LEAF_NODE	247:15	247:15	4	;
LABEL	248:0	248:11	3	openfailure :
LEAF_NODE	248:0	248:0	4	openfailure
LEAF_NODE	248:11	248:11	4	:
LEAF_NODE	249:1	249:1	3	fprintf
LEAF_NODE	249:9	249:9	3	(
LEAF_NODE	249:10	249:10	3	stderr
LEAF_NODE	249:16	249:16	3	,
LEAF_NODE	249:18	249:18	3	"Can't read test TIFF file %s:\n"
LEAF_NODE	250:0	250:0	3	"    ImageWidth=%ld, ImageLength=%ld, RowsPerStrip=%ld, Compression=%d,\n"
LEAF_NODE	251:0	251:0	3	"    BitsPerSample=%d, SamplesPerPixel=%d, SampleFormat=%d,\n"
LEAF_NODE	252:0	252:0	3	"    PlanarConfiguration=%d, PhotometricInterpretation=%d.\n"
LEAF_NODE	252:61	252:61	3	,
LEAF_NODE	253:3	253:3	3	name
LEAF_NODE	253:7	253:7	3	,
LEAF_NODE	253:9	253:9	3	(
LEAF_NODE	253:10	253:10	3	long
LEAF_NODE	253:14	253:14	3	)
LEAF_NODE	253:16	253:16	3	width
LEAF_NODE	253:21	253:21	3	,
LEAF_NODE	253:23	253:23	3	(
LEAF_NODE	253:24	253:24	3	long
LEAF_NODE	253:28	253:28	3	)
LEAF_NODE	253:30	253:30	3	length
LEAF_NODE	253:36	253:36	3	,
LEAF_NODE	253:38	253:38	3	(
LEAF_NODE	253:39	253:39	3	long
LEAF_NODE	253:43	253:43	3	)
LEAF_NODE	253:45	253:45	3	rowsperstrip
LEAF_NODE	253:57	253:57	3	,
LEAF_NODE	254:17	254:17	3	compression
LEAF_NODE	254:28	254:28	3	,
LEAF_NODE	254:30	254:30	3	bps
LEAF_NODE	254:33	254:33	3	,
LEAF_NODE	254:35	254:35	3	spp
LEAF_NODE	254:38	254:38	3	,
LEAF_NODE	254:40	254:40	3	sampleformat
LEAF_NODE	254:52	254:52	3	,
LEAF_NODE	254:54	254:54	3	planarconfig
LEAF_NODE	254:66	254:66	3	,
LEAF_NODE	255:3	255:3	3	photometric
LEAF_NODE	255:14	255:14	3	)
LEAF_NODE	255:15	255:15	3	;
JUMP_STATEMENT	256:1	256:10	3	return - 1 ;
KEYWORD	256:1	256:1	4	return
LEAF_NODE	256:1	256:1	5	return
DESTINATION	256:8	256:8	4	- 1
EXPR	256:8	256:8	5	- 1
UNARY_EXPR	256:8	256:9	6	- 1
UNARY_OPERATOR	256:8	256:8	7	-
LEAF_NODE	256:8	256:8	8	-
FIELD	256:9	256:9	7	1
LEAF_NODE	256:9	256:9	8	1
LEAF_NODE	256:10	256:10	4	;
LEAF_NODE	257:0	257:0	2	}
FUNCTION_DEF	259:0	286:0	1	
RETURN_TYPE	259:0	259:0	2	int
TYPE_NAME	259:0	259:0	3	int
LEAF_NODE	259:0	259:0	4	int
FUNCTION_NAME	260:0	260:0	2	write_scanlines
LEAF_NODE	260:0	260:0	3	write_scanlines
PARAMETER_LIST	260:15	260:66	2	( TIFF * tif , const tdata_t array , const tsize_t size )
LEAF_NODE	260:15	260:15	3	(
PARAMETER_DECL	260:16	260:22	3	TIFF * tif
TYPE	260:16	260:21	4	TIFF *
TYPE_NAME	260:16	260:16	5	TIFF
LEAF_NODE	260:16	260:16	6	TIFF
POINTER	260:21	260:21	5	*
LEAF_NODE	260:21	260:21	6	*
NAME	260:22	260:22	4	tif
LEAF_NODE	260:22	260:22	5	tif
LEAF_NODE	260:25	260:25	3	,
PARAMETER_DECL	260:27	260:41	3	const tdata_t array
TYPE	260:27	260:27	4	const tdata_t
TYPE_NAME	260:27	260:33	5	const tdata_t
LEAF_NODE	260:27	260:27	6	const
LEAF_NODE	260:33	260:33	6	tdata_t
NAME	260:41	260:41	4	array
LEAF_NODE	260:41	260:41	5	array
LEAF_NODE	260:46	260:46	3	,
PARAMETER_DECL	260:48	260:62	3	const tsize_t size
TYPE	260:48	260:48	4	const tsize_t
TYPE_NAME	260:48	260:54	5	const tsize_t
LEAF_NODE	260:48	260:48	6	const
LEAF_NODE	260:54	260:54	6	tsize_t
NAME	260:62	260:62	4	size
LEAF_NODE	260:62	260:62	5	size
LEAF_NODE	260:66	260:66	3	)
LEAF_NODE	261:0	261:0	2	{
STATEMENTS	262:1	285:1	2	
SIMPLE_DECL	262:1	262:20	3	uint32 length , uint32 row ;
INIT_DECL_LIST	262:1	262:1	4	uint32 length , uint32 row
VAR_DECL	262:1	262:9	5	uint32 length
TYPE	262:1	262:1	6	uint32
TYPE_NAME	262:1	262:1	7	uint32
LEAF_NODE	262:1	262:1	8	uint32
NAME	262:9	262:9	6	length
LEAF_NODE	262:9	262:9	7	length
LEAF_NODE	262:15	262:15	5	,
VAR_DECL	262:1	262:17	5	uint32 row
TYPE	262:1	262:1	6	uint32
TYPE_NAME	262:1	262:1	7	uint32
LEAF_NODE	262:1	262:1	8	uint32
NAME	262:17	262:17	6	row
LEAF_NODE	262:17	262:17	7	row
LEAF_NODE	262:20	262:20	4	;
SIMPLE_DECL	263:1	263:30	3	tsize_t scanlinesize , tsize_t offset ;
INIT_DECL_LIST	263:1	263:1	4	tsize_t scanlinesize , tsize_t offset
VAR_DECL	263:1	263:10	5	tsize_t scanlinesize
TYPE	263:1	263:1	6	tsize_t
TYPE_NAME	263:1	263:1	7	tsize_t
LEAF_NODE	263:1	263:1	8	tsize_t
NAME	263:10	263:10	6	scanlinesize
LEAF_NODE	263:10	263:10	7	scanlinesize
LEAF_NODE	263:22	263:22	5	,
VAR_DECL	263:1	263:24	5	tsize_t offset
TYPE	263:1	263:1	6	tsize_t
TYPE_NAME	263:1	263:1	7	tsize_t
LEAF_NODE	263:1	263:1	8	tsize_t
NAME	263:24	263:24	6	offset
LEAF_NODE	263:24	263:24	7	offset
LEAF_NODE	263:30	263:30	4	;
EXPR_STATEMENT	264:8	264:19	3	( void ) size ;
EXPR	264:8	264:15	4	( void ) size
LEAF_NODE	264:8	264:8	5	(
TYPE_NAME	264:9	264:9	5	void
LEAF_NODE	264:9	264:9	6	void
LEAF_NODE	264:13	264:13	5	)
FIELD	264:15	264:15	5	size
LEAF_NODE	264:15	264:15	6	size
LEAF_NODE	264:19	264:19	4	;
SELECTION	266:1	266:55	3	
KEYWORD	266:1	266:1	4	if
LEAF_NODE	266:1	266:1	5	if
LEAF_NODE	266:4	266:4	4	(
CONDITION	266:5	266:5	4	! TIFFGetField ( tif , TIFFTAG_IMAGELENGTH , & length )
EXPR	266:5	266:5	5	! TIFFGetField ( tif , TIFFTAG_IMAGELENGTH , & length )
UNARY_EXPR	266:5	266:6	6	! TIFFGetField ( tif , TIFFTAG_IMAGELENGTH , & length )
UNARY_OPERATOR	266:5	266:5	7	!
LEAF_NODE	266:5	266:5	8	!
FUNCTION_CALL	266:6	266:52	7	TIFFGetField ( tif , TIFFTAG_IMAGELENGTH , & length )
CALLEE	266:6	266:6	8	TIFFGetField
LEAF_NODE	266:6	266:6	9	TIFFGetField
LEAF_NODE	266:18	266:18	8	(
ARGUMENT	266:19	266:19	8	tif
FIELD	266:19	266:19	9	tif
LEAF_NODE	266:19	266:19	10	tif
LEAF_NODE	266:22	266:22	8	,
ARGUMENT	266:24	266:24	8	TIFFTAG_IMAGELENGTH
FIELD	266:24	266:24	9	TIFFTAG_IMAGELENGTH
LEAF_NODE	266:24	266:24	10	TIFFTAG_IMAGELENGTH
LEAF_NODE	266:43	266:43	8	,
ARGUMENT	266:45	266:45	8	& length
UNARY_EXPR	266:45	266:46	9	& length
UNARY_OPERATOR	266:45	266:45	10	&
LEAF_NODE	266:45	266:45	11	&
FIELD	266:46	266:46	10	length
LEAF_NODE	266:46	266:46	11	length
LEAF_NODE	266:52	266:52	8	)
LEAF_NODE	266:53	266:53	4	)
STATEMENTS	266:55	269:1	4	
LEAF_NODE	266:55	266:55	5	{
STATEMENTS	267:2	268:2	5	
EXPR_STATEMENT	267:2	267:62	6	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_IMAGELENGTH ) ;
EXPR	267:2	267:2	7	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_IMAGELENGTH )
FUNCTION_CALL	267:2	267:61	8	fprintf ( stderr , "Can't get tag %d.\n" , TIFFTAG_IMAGELENGTH )
CALLEE	267:2	267:2	9	fprintf
LEAF_NODE	267:2	267:2	10	fprintf
LEAF_NODE	267:10	267:10	9	(
ARGUMENT	267:11	267:11	9	stderr
FIELD	267:11	267:11	10	stderr
LEAF_NODE	267:11	267:11	11	stderr
LEAF_NODE	267:17	267:17	9	,
ARGUMENT	267:19	267:19	9	"Can't get tag %d.\n"
FIELD	267:19	267:19	10	"Can't get tag %d.\n"
LEAF_NODE	267:19	267:19	11	"Can't get tag %d.\n"
LEAF_NODE	267:40	267:40	9	,
ARGUMENT	267:42	267:42	9	TIFFTAG_IMAGELENGTH
FIELD	267:42	267:42	10	TIFFTAG_IMAGELENGTH
LEAF_NODE	267:42	267:42	11	TIFFTAG_IMAGELENGTH
LEAF_NODE	267:61	267:61	9	)
LEAF_NODE	267:62	267:62	7	;
JUMP_STATEMENT	268:2	268:11	6	return - 1 ;
KEYWORD	268:2	268:2	7	return
LEAF_NODE	268:2	268:2	8	return
DESTINATION	268:9	268:9	7	- 1
EXPR	268:9	268:9	8	- 1
UNARY_EXPR	268:9	268:10	9	- 1
UNARY_OPERATOR	268:9	268:9	10	-
LEAF_NODE	268:9	268:9	11	-
FIELD	268:10	268:10	10	1
LEAF_NODE	268:10	268:10	11	1
LEAF_NODE	268:11	268:11	7	;
LEAF_NODE	269:1	269:1	5	}
EXPR_STATEMENT	271:1	271:37	3	scanlinesize = TIFFScanlineSize ( tif ) ;
EXPR	271:1	271:1	4	scanlinesize = TIFFScanlineSize ( tif )
ASSIGN	271:1	271:16	5	scanlinesize = TIFFScanlineSize ( tif )
LVAL	271:1	271:1	6	scanlinesize
FIELD	271:1	271:1	7	scanlinesize
LEAF_NODE	271:1	271:1	8	scanlinesize
ASSIGN_OP	271:14	271:14	6	=
LEAF_NODE	271:14	271:14	7	=
RVAL	271:16	271:16	6	TIFFScanlineSize ( tif )
FUNCTION_CALL	271:16	271:36	7	TIFFScanlineSize ( tif )
CALLEE	271:16	271:16	8	TIFFScanlineSize
LEAF_NODE	271:16	271:16	9	TIFFScanlineSize
LEAF_NODE	271:32	271:32	8	(
ARGUMENT	271:33	271:33	8	tif
FIELD	271:33	271:33	9	tif
LEAF_NODE	271:33	271:33	10	tif
LEAF_NODE	271:36	271:36	8	)
LEAF_NODE	271:37	271:37	4	;
SELECTION	272:1	272:20	3	
KEYWORD	272:1	272:1	4	if
LEAF_NODE	272:1	272:1	5	if
LEAF_NODE	272:4	272:4	4	(
CONDITION	272:5	272:5	4	! scanlinesize
EXPR	272:5	272:5	5	! scanlinesize
UNARY_EXPR	272:5	272:6	6	! scanlinesize
UNARY_OPERATOR	272:5	272:5	7	!
LEAF_NODE	272:5	272:5	8	!
FIELD	272:6	272:6	7	scanlinesize
LEAF_NODE	272:6	272:6	8	scanlinesize
LEAF_NODE	272:18	272:18	4	)
STATEMENTS	272:20	275:1	4	
LEAF_NODE	272:20	272:20	5	{
STATEMENTS	273:2	274:2	5	
EXPR_STATEMENT	273:2	273:47	6	fprintf ( stderr , "Wrong size of scanline.\n" ) ;
EXPR	273:2	273:2	7	fprintf ( stderr , "Wrong size of scanline.\n" )
FUNCTION_CALL	273:2	273:46	8	fprintf ( stderr , "Wrong size of scanline.\n" )
CALLEE	273:2	273:2	9	fprintf
LEAF_NODE	273:2	273:2	10	fprintf
LEAF_NODE	273:10	273:10	9	(
ARGUMENT	273:11	273:11	9	stderr
FIELD	273:11	273:11	10	stderr
LEAF_NODE	273:11	273:11	11	stderr
LEAF_NODE	273:17	273:17	9	,
ARGUMENT	273:19	273:19	9	"Wrong size of scanline.\n"
FIELD	273:19	273:19	10	"Wrong size of scanline.\n"
LEAF_NODE	273:19	273:19	11	"Wrong size of scanline.\n"
LEAF_NODE	273:46	273:46	9	)
LEAF_NODE	273:47	273:47	7	;
JUMP_STATEMENT	274:2	274:11	6	return - 1 ;
KEYWORD	274:2	274:2	7	return
LEAF_NODE	274:2	274:2	8	return
DESTINATION	274:9	274:9	7	- 1
EXPR	274:9	274:9	8	- 1
UNARY_EXPR	274:9	274:10	9	- 1
UNARY_OPERATOR	274:9	274:9	10	-
LEAF_NODE	274:9	274:9	11	-
FIELD	274:10	274:10	10	1
LEAF_NODE	274:10	274:10	11	1
LEAF_NODE	274:11	274:11	7	;
LEAF_NODE	275:1	275:1	5	}
ITERATION	277:1	277:70	3	
KEYWORD	277:1	277:1	4	for
LEAF_NODE	277:1	277:1	5	for
LEAF_NODE	277:5	277:5	4	(
FOR_INIT	277:6	277:25	4	offset = 0 , row = 0 ;
EXPR	277:6	277:18	5	offset = 0 , row = 0
ASSIGN	277:6	277:15	6	offset = 0
LVAL	277:6	277:6	7	offset
FIELD	277:6	277:6	8	offset
LEAF_NODE	277:6	277:6	9	offset
ASSIGN_OP	277:13	277:13	7	=
LEAF_NODE	277:13	277:13	8	=
RVAL	277:15	277:15	7	0
FIELD	277:15	277:15	8	0
LEAF_NODE	277:15	277:15	9	0
LEAF_NODE	277:16	277:16	6	,
ASSIGN	277:18	277:24	6	row = 0
LVAL	277:18	277:18	7	row
FIELD	277:18	277:18	8	row
LEAF_NODE	277:18	277:18	9	row
ASSIGN_OP	277:22	277:22	7	=
LEAF_NODE	277:22	277:22	8	=
RVAL	277:24	277:24	7	0
FIELD	277:24	277:24	8	0
LEAF_NODE	277:24	277:24	9	0
LEAF_NODE	277:25	277:25	5	;
CONDITION	277:27	277:27	4	row < length
EXPR	277:27	277:33	5	row < length
FIELD	277:27	277:27	6	row
LEAF_NODE	277:27	277:27	7	row
REL_OPERATOR	277:31	277:31	6	<
LEAF_NODE	277:31	277:31	7	<
FIELD	277:33	277:33	6	length
LEAF_NODE	277:33	277:33	7	length
LEAF_NODE	277:39	277:39	4	;
FOR_EXPR	277:41	277:41	4	offset += scanlinesize , row ++
EXPR	277:41	277:63	5	offset += scanlinesize , row ++
ASSIGN	277:41	277:49	6	offset += scanlinesize
LVAL	277:41	277:41	7	offset
FIELD	277:41	277:41	8	offset
LEAF_NODE	277:41	277:41	9	offset
ASSIGN_OP	277:47	277:47	7	+=
LEAF_NODE	277:47	277:47	8	+=
RVAL	277:49	277:49	7	scanlinesize
FIELD	277:49	277:49	8	scanlinesize
LEAF_NODE	277:49	277:49	9	scanlinesize
LEAF_NODE	277:61	277:61	6	,
FIELD	277:63	277:66	6	row ++
LEAF_NODE	277:63	277:63	7	row
LEAF_NODE	277:66	277:66	7	++
LEAF_NODE	277:68	277:68	4	)
STATEMENTS	277:70	283:8	4	
LEAF_NODE	277:70	277:70	5	{
STATEMENTS	278:2	278:2	5	
SELECTION	278:2	278:68	6	
KEYWORD	278:2	278:2	7	if
LEAF_NODE	278:2	278:2	8	if
LEAF_NODE	278:5	278:5	7	(
CONDITION	278:6	278:6	7	TIFFWriteScanline ( tif , ( char * ) array + offset , row , 0 ) == - 1
EXPR	278:6	278:64	8	TIFFWriteScanline ( tif , ( char * ) array + offset , row , 0 ) == - 1
FUNCTION_CALL	278:6	278:59	9	TIFFWriteScanline ( tif , ( char * ) array + offset , row , 0 )
CALLEE	278:6	278:6	10	TIFFWriteScanline
LEAF_NODE	278:6	278:6	11	TIFFWriteScanline
LEAF_NODE	278:23	278:23	10	(
ARGUMENT	278:24	278:24	10	tif
FIELD	278:24	278:24	11	tif
LEAF_NODE	278:24	278:24	12	tif
LEAF_NODE	278:27	278:27	10	,
ARGUMENT	278:29	278:45	10	( char * ) array + offset
LEAF_NODE	278:29	278:29	11	(
TYPE_NAME	278:30	278:30	11	char
LEAF_NODE	278:30	278:30	12	char
LEAF_NODE	278:35	278:35	11	*
LEAF_NODE	278:36	278:36	11	)
FIELD	278:37	278:37	11	array
LEAF_NODE	278:37	278:37	12	array
LEAF_NODE	278:43	278:43	11	+
FIELD	278:45	278:45	11	offset
LEAF_NODE	278:45	278:45	12	offset
LEAF_NODE	278:51	278:51	10	,
ARGUMENT	278:53	278:53	10	row
FIELD	278:53	278:53	11	row
LEAF_NODE	278:53	278:53	12	row
LEAF_NODE	278:56	278:56	10	,
ARGUMENT	278:58	278:58	10	0
FIELD	278:58	278:58	11	0
LEAF_NODE	278:58	278:58	12	0
LEAF_NODE	278:59	278:59	10	)
EQ_OPERATOR	278:61	278:61	9	==
LEAF_NODE	278:61	278:61	10	==
UNARY_EXPR	278:64	278:65	9	- 1
UNARY_OPERATOR	278:64	278:64	10	-
LEAF_NODE	278:64	278:64	11	-
FIELD	278:65	278:65	10	1
LEAF_NODE	278:65	278:65	11	1
LEAF_NODE	278:66	278:66	7	)
STATEMENTS	278:68	282:2	7	
LEAF_NODE	278:68	278:68	8	{
STATEMENTS	279:3	281:3	8	
EXPR_STATEMENT	279:3	280:56	9	fprintf ( stderr , "Can't write image data at row %lu.\n" , ( long ) row ) ;
EXPR	279:3	279:3	10	fprintf ( stderr , "Can't write image data at row %lu.\n" , ( long ) row )
FUNCTION_CALL	279:3	280:55	11	fprintf ( stderr , "Can't write image data at row %lu.\n" , ( long ) row )
CALLEE	279:3	279:3	12	fprintf
LEAF_NODE	279:3	279:3	13	fprintf
LEAF_NODE	279:11	279:11	12	(
ARGUMENT	279:12	279:12	12	stderr
FIELD	279:12	279:12	13	stderr
LEAF_NODE	279:12	279:12	14	stderr
LEAF_NODE	279:18	279:18	12	,
ARGUMENT	280:5	280:5	12	"Can't write image data at row %lu.\n"
FIELD	280:5	280:5	13	"Can't write image data at row %lu.\n"
LEAF_NODE	280:5	280:5	14	"Can't write image data at row %lu.\n"
LEAF_NODE	280:43	280:43	12	,
ARGUMENT	280:45	280:52	12	( long ) row
LEAF_NODE	280:45	280:45	13	(
TYPE_NAME	280:46	280:46	13	long
LEAF_NODE	280:46	280:46	14	long
LEAF_NODE	280:50	280:50	13	)
FIELD	280:52	280:52	13	row
LEAF_NODE	280:52	280:52	14	row
LEAF_NODE	280:55	280:55	12	)
LEAF_NODE	280:56	280:56	10	;
JUMP_STATEMENT	281:3	281:12	9	return - 1 ;
KEYWORD	281:3	281:3	10	return
LEAF_NODE	281:3	281:3	11	return
DESTINATION	281:10	281:10	10	- 1
EXPR	281:10	281:10	11	- 1
UNARY_EXPR	281:10	281:11	12	- 1
UNARY_OPERATOR	281:10	281:10	13	-
LEAF_NODE	281:10	281:10	14	-
FIELD	281:11	281:11	13	1
LEAF_NODE	281:11	281:11	14	1
LEAF_NODE	281:12	281:12	10	;
LEAF_NODE	282:2	282:2	8	}
LEAF_NODE	283:8	283:8	5	}
JUMP_STATEMENT	285:1	285:9	3	return 0 ;
KEYWORD	285:1	285:1	4	return
LEAF_NODE	285:1	285:1	5	return
DESTINATION	285:8	285:8	4	0
EXPR	285:8	285:8	5	0
FIELD	285:8	285:8	6	0
LEAF_NODE	285:8	285:8	7	0
LEAF_NODE	285:9	285:9	4	;
LEAF_NODE	286:0	286:0	2	}
