SOURCE_FILE	48:7	957:0	0	
SIMPLE_DECL	48:7	48:42	1	const TIFFFieldArray tiffFieldArray ;
VAR_DECL	48:7	48:28	2	const TIFFFieldArray tiffFieldArray
TYPE	48:7	48:7	3	const TIFFFieldArray
TYPE_NAME	48:7	48:13	4	const TIFFFieldArray
LEAF_NODE	48:7	48:7	5	const
LEAF_NODE	48:13	48:13	5	TIFFFieldArray
NAME	48:28	48:28	3	tiffFieldArray
LEAF_NODE	48:28	48:28	4	tiffFieldArray
LEAF_NODE	48:42	48:42	2	;
SIMPLE_DECL	49:7	49:42	1	const TIFFFieldArray exifFieldArray ;
VAR_DECL	49:7	49:28	2	const TIFFFieldArray exifFieldArray
TYPE	49:7	49:7	3	const TIFFFieldArray
TYPE_NAME	49:7	49:13	4	const TIFFFieldArray
LEAF_NODE	49:7	49:7	5	const
LEAF_NODE	49:13	49:13	5	TIFFFieldArray
NAME	49:28	49:28	3	exifFieldArray
LEAF_NODE	49:28	49:28	4	exifFieldArray
LEAF_NODE	49:42	49:42	2	;
SIMPLE_DECL	294:4	294:23	1	char * element , char * end ;
INIT_DECL_LIST	294:4	294:4	2	char * element , char * end
VAR_DECL	294:4	294:10	3	char * element
TYPE	294:4	294:9	4	char *
TYPE_NAME	294:4	294:4	5	char
LEAF_NODE	294:4	294:4	6	char
POINTER	294:9	294:9	5	*
LEAF_NODE	294:9	294:9	6	*
NAME	294:10	294:10	4	element
LEAF_NODE	294:10	294:10	5	element
LEAF_NODE	294:17	294:17	3	,
VAR_DECL	294:4	294:20	3	char * end
TYPE	294:4	294:19	4	char *
TYPE_NAME	294:4	294:4	5	char
LEAF_NODE	294:4	294:4	6	char
POINTER	294:19	294:19	5	*
LEAF_NODE	294:19	294:19	6	*
NAME	294:20	294:20	4	end
LEAF_NODE	294:20	294:20	5	end
LEAF_NODE	294:23	294:23	2	;
SIMPLE_DECL	296:26	296:38	1	nmemb * size ;
VAR_DECL	296:26	296:34	2	nmemb * size
TYPE	296:26	296:32	3	nmemb *
TYPE_NAME	296:26	296:26	4	nmemb
LEAF_NODE	296:26	296:26	5	nmemb
POINTER	296:32	296:32	4	*
LEAF_NODE	296:32	296:32	5	*
NAME	296:34	296:34	3	size
LEAF_NODE	296:34	296:34	4	size
LEAF_NODE	296:38	296:38	2	;
FUNCTION_DEF	304:0	308:0	1	
RETURN_TYPE	304:0	304:20	2	const TIFFFieldArray *
TYPE_NAME	304:0	304:6	3	const TIFFFieldArray
LEAF_NODE	304:0	304:0	4	const
LEAF_NODE	304:6	304:6	4	TIFFFieldArray
LEAF_NODE	304:20	304:20	3	*
FUNCTION_NAME	305:0	305:0	2	_TIFFGetFields
LEAF_NODE	305:0	305:0	3	_TIFFGetFields
PARAMETER_LIST	305:14	305:19	2	( void )
LEAF_NODE	305:14	305:14	3	(
PARAMETER_DECL	305:15	305:15	3	void
LEAF_NODE	305:15	305:15	4	void
LEAF_NODE	305:19	305:19	3	)
LEAF_NODE	306:0	306:0	2	{
STATEMENTS	307:1	307:1	2	
JUMP_STATEMENT	307:1	307:24	3	return ( & tiffFieldArray ) ;
KEYWORD	307:1	307:1	4	return
LEAF_NODE	307:1	307:1	5	return
DESTINATION	307:7	307:7	4	( & tiffFieldArray )
EXPR	307:7	307:23	5	( & tiffFieldArray )
LEAF_NODE	307:7	307:7	6	(
UNARY_EXPR	307:8	307:9	6	& tiffFieldArray
UNARY_OPERATOR	307:8	307:8	7	&
LEAF_NODE	307:8	307:8	8	&
FIELD	307:9	307:9	7	tiffFieldArray
LEAF_NODE	307:9	307:9	8	tiffFieldArray
LEAF_NODE	307:23	307:23	6	)
LEAF_NODE	307:24	307:24	4	;
LEAF_NODE	308:0	308:0	2	}
FUNCTION_DEF	310:0	314:0	1	
RETURN_TYPE	310:0	310:20	2	const TIFFFieldArray *
TYPE_NAME	310:0	310:6	3	const TIFFFieldArray
LEAF_NODE	310:0	310:0	4	const
LEAF_NODE	310:6	310:6	4	TIFFFieldArray
LEAF_NODE	310:20	310:20	3	*
FUNCTION_NAME	311:0	311:0	2	_TIFFGetExifFields
LEAF_NODE	311:0	311:0	3	_TIFFGetExifFields
PARAMETER_LIST	311:18	311:23	2	( void )
LEAF_NODE	311:18	311:18	3	(
PARAMETER_DECL	311:19	311:19	3	void
LEAF_NODE	311:19	311:19	4	void
LEAF_NODE	311:23	311:23	3	)
LEAF_NODE	312:0	312:0	2	{
STATEMENTS	313:1	313:1	2	
JUMP_STATEMENT	313:1	313:24	3	return ( & exifFieldArray ) ;
KEYWORD	313:1	313:1	4	return
LEAF_NODE	313:1	313:1	5	return
DESTINATION	313:7	313:7	4	( & exifFieldArray )
EXPR	313:7	313:23	5	( & exifFieldArray )
LEAF_NODE	313:7	313:7	6	(
UNARY_EXPR	313:8	313:9	6	& exifFieldArray
UNARY_OPERATOR	313:8	313:8	7	&
LEAF_NODE	313:8	313:8	8	&
FIELD	313:9	313:9	7	exifFieldArray
LEAF_NODE	313:9	313:9	8	exifFieldArray
LEAF_NODE	313:23	313:23	6	)
LEAF_NODE	313:24	313:24	4	;
LEAF_NODE	314:0	314:0	2	}
FUNCTION_DEF	316:0	339:0	1	
RETURN_TYPE	316:0	316:0	2	void
TYPE_NAME	316:0	316:0	3	void
LEAF_NODE	316:0	316:0	4	void
FUNCTION_NAME	317:0	317:0	2	_TIFFSetupFields
LEAF_NODE	317:0	317:0	3	_TIFFSetupFields
PARAMETER_LIST	317:16	317:60	2	( TIFF * tif , const TIFFFieldArray * fieldarray )
LEAF_NODE	317:16	317:16	3	(
PARAMETER_DECL	317:17	317:23	3	TIFF * tif
TYPE	317:17	317:21	4	TIFF *
TYPE_NAME	317:17	317:17	5	TIFF
LEAF_NODE	317:17	317:17	6	TIFF
POINTER	317:21	317:21	5	*
LEAF_NODE	317:21	317:21	6	*
NAME	317:23	317:23	4	tif
LEAF_NODE	317:23	317:23	5	tif
LEAF_NODE	317:26	317:26	3	,
PARAMETER_DECL	317:28	317:50	3	const TIFFFieldArray * fieldarray
TYPE	317:28	317:48	4	const TIFFFieldArray *
TYPE_NAME	317:28	317:34	5	const TIFFFieldArray
LEAF_NODE	317:28	317:28	6	const
LEAF_NODE	317:34	317:34	6	TIFFFieldArray
POINTER	317:48	317:48	5	*
LEAF_NODE	317:48	317:48	6	*
NAME	317:50	317:50	4	fieldarray
LEAF_NODE	317:50	317:50	5	fieldarray
LEAF_NODE	317:60	317:60	3	)
LEAF_NODE	318:0	318:0	2	{
STATEMENTS	319:1	335:1	2	
SELECTION	319:1	319:46	3	
KEYWORD	319:1	319:1	4	if
LEAF_NODE	319:1	319:1	5	if
LEAF_NODE	319:4	319:4	4	(
CONDITION	319:5	319:5	4	tif -> tif_fields && tif -> tif_nfields > 0
EXPR	319:5	319:5	5	tif -> tif_fields && tif -> tif_nfields > 0
AND	319:5	319:24	6	tif -> tif_fields && tif -> tif_nfields > 0
EXPR	319:5	319:5	7	tif -> tif_fields
FIELD	319:5	319:10	8	tif -> tif_fields
LEAF_NODE	319:5	319:5	9	tif
LEAF_NODE	319:8	319:8	9	->
LEAF_NODE	319:10	319:10	9	tif_fields
LEAF_NODE	319:21	319:21	7	&&
EXPR	319:24	319:43	7	tif -> tif_nfields > 0
FIELD	319:24	319:29	8	tif -> tif_nfields
LEAF_NODE	319:24	319:24	9	tif
LEAF_NODE	319:27	319:27	9	->
LEAF_NODE	319:29	319:29	9	tif_nfields
REL_OPERATOR	319:41	319:41	8	>
LEAF_NODE	319:41	319:41	9	>
FIELD	319:43	319:43	8	0
LEAF_NODE	319:43	319:43	9	0
LEAF_NODE	319:44	319:44	4	)
STATEMENTS	319:46	334:1	4	
LEAF_NODE	319:46	319:46	5	{
STATEMENTS	320:2	333:2	5	
SIMPLE_DECL	320:2	320:10	6	uint32 i ;
VAR_DECL	320:2	320:9	7	uint32 i
TYPE	320:2	320:2	8	uint32
TYPE_NAME	320:2	320:2	9	uint32
LEAF_NODE	320:2	320:2	10	uint32
NAME	320:9	320:9	8	i
LEAF_NODE	320:9	320:9	9	i
LEAF_NODE	320:10	320:10	7	;
ITERATION	322:2	322:41	6	
KEYWORD	322:2	322:2	7	for
LEAF_NODE	322:2	322:2	8	for
LEAF_NODE	322:6	322:6	7	(
FOR_INIT	322:7	322:12	7	i = 0 ;
EXPR	322:7	322:7	8	i = 0
ASSIGN	322:7	322:11	9	i = 0
LVAL	322:7	322:7	10	i
FIELD	322:7	322:7	11	i
LEAF_NODE	322:7	322:7	12	i
ASSIGN_OP	322:9	322:9	10	=
LEAF_NODE	322:9	322:9	11	=
RVAL	322:11	322:11	10	0
FIELD	322:11	322:11	11	0
LEAF_NODE	322:11	322:11	12	0
LEAF_NODE	322:12	322:12	8	;
CONDITION	322:14	322:14	7	i < tif -> tif_nfields
EXPR	322:14	322:18	8	i < tif -> tif_nfields
FIELD	322:14	322:14	9	i
LEAF_NODE	322:14	322:14	10	i
REL_OPERATOR	322:16	322:16	9	<
LEAF_NODE	322:16	322:16	10	<
FIELD	322:18	322:23	9	tif -> tif_nfields
LEAF_NODE	322:18	322:18	10	tif
LEAF_NODE	322:21	322:21	10	->
LEAF_NODE	322:23	322:23	10	tif_nfields
LEAF_NODE	322:34	322:34	7	;
FOR_EXPR	322:36	322:36	7	i ++
EXPR	322:36	322:36	8	i ++
FIELD	322:36	322:37	9	i ++
LEAF_NODE	322:36	322:36	10	i
LEAF_NODE	322:37	322:37	10	++
LEAF_NODE	322:39	322:39	7	)
STATEMENTS	322:41	329:2	7	
LEAF_NODE	322:41	322:41	8	{
STATEMENTS	323:3	324:3	8	
SIMPLE_DECL	323:3	323:38	9	TIFFField * fld ; fld = tif -> tif_fields [ i ] ;
VAR_DECL	323:3	323:14	10	TIFFField * fld ; fld = tif -> tif_fields [ i ]
TYPE	323:3	323:13	11	TIFFField *
TYPE_NAME	323:3	323:3	12	TIFFField
LEAF_NODE	323:3	323:3	13	TIFFField
POINTER	323:13	323:13	12	*
LEAF_NODE	323:13	323:13	13	*
NAME	323:14	323:14	11	fld
LEAF_NODE	323:14	323:14	12	fld
LEAF_NODE	0:0	0:0	11	;
INIT	323:14	323:14	11	fld = tif -> tif_fields [ i ]
ASSIGN	323:14	323:20	12	fld = tif -> tif_fields [ i ]
LVAL	323:14	323:14	13	fld
NAME	323:14	323:14	14	fld
LEAF_NODE	323:14	323:14	15	fld
ASSIGN_OP	323:18	323:18	13	=
LEAF_NODE	323:18	323:18	14	=
RVAL	323:20	323:20	13	tif -> tif_fields [ i ]
FIELD	323:20	323:37	14	tif -> tif_fields [ i ]
LEAF_NODE	323:20	323:20	15	tif
LEAF_NODE	323:23	323:23	15	->
LEAF_NODE	323:25	323:25	15	tif_fields
LEAF_NODE	323:35	323:35	15	[
EXPR	323:36	323:36	15	i
FIELD	323:36	323:36	16	i
LEAF_NODE	323:36	323:36	17	i
LEAF_NODE	323:37	323:37	15	]
LEAF_NODE	323:38	323:38	10	;
SELECTION	324:3	325:46	9	
KEYWORD	324:3	324:3	10	if
LEAF_NODE	324:3	324:3	11	if
LEAF_NODE	324:6	324:6	10	(
CONDITION	324:7	324:7	10	fld -> field_bit == FIELD_CUSTOM && strncmp ( "Tag " , fld -> field_name , 4 ) == 0
EXPR	324:7	324:7	11	fld -> field_bit == FIELD_CUSTOM && strncmp ( "Tag " , fld -> field_name , 4 ) == 0
AND	324:7	325:4	12	fld -> field_bit == FIELD_CUSTOM && strncmp ( "Tag " , fld -> field_name , 4 ) == 0
EXPR	324:7	324:25	13	fld -> field_bit == FIELD_CUSTOM
FIELD	324:7	324:12	14	fld -> field_bit
LEAF_NODE	324:7	324:7	15	fld
LEAF_NODE	324:10	324:10	15	->
LEAF_NODE	324:12	324:12	15	field_bit
EQ_OPERATOR	324:22	324:22	14	==
LEAF_NODE	324:22	324:22	15	==
FIELD	324:25	324:25	14	FIELD_CUSTOM
LEAF_NODE	324:25	324:25	15	FIELD_CUSTOM
LEAF_NODE	324:38	324:38	13	&&
EXPR	325:4	325:43	13	strncmp ( "Tag " , fld -> field_name , 4 ) == 0
FUNCTION_CALL	325:4	325:38	14	strncmp ( "Tag " , fld -> field_name , 4 )
CALLEE	325:4	325:4	15	strncmp
LEAF_NODE	325:4	325:4	16	strncmp
LEAF_NODE	325:11	325:11	15	(
ARGUMENT	325:12	325:12	15	"Tag "
FIELD	325:12	325:12	16	"Tag "
LEAF_NODE	325:12	325:12	17	"Tag "
LEAF_NODE	325:18	325:18	15	,
ARGUMENT	325:20	325:20	15	fld -> field_name
FIELD	325:20	325:25	16	fld -> field_name
LEAF_NODE	325:20	325:20	17	fld
LEAF_NODE	325:23	325:23	17	->
LEAF_NODE	325:25	325:25	17	field_name
LEAF_NODE	325:35	325:35	15	,
ARGUMENT	325:37	325:37	15	4
FIELD	325:37	325:37	16	4
LEAF_NODE	325:37	325:37	17	4
LEAF_NODE	325:38	325:38	15	)
EQ_OPERATOR	325:40	325:40	14	==
LEAF_NODE	325:40	325:40	15	==
FIELD	325:43	325:43	14	0
LEAF_NODE	325:43	325:43	15	0
LEAF_NODE	325:44	325:44	10	)
STATEMENTS	325:46	328:4	10	
LEAF_NODE	325:46	325:46	11	{
STATEMENTS	326:5	327:5	11	
EXPR_STATEMENT	326:5	326:31	12	_TIFFfree ( fld -> field_name ) ;
EXPR	326:5	326:5	13	_TIFFfree ( fld -> field_name )
FUNCTION_CALL	326:5	326:30	14	_TIFFfree ( fld -> field_name )
CALLEE	326:5	326:5	15	_TIFFfree
LEAF_NODE	326:5	326:5	16	_TIFFfree
LEAF_NODE	326:14	326:14	15	(
ARGUMENT	326:15	326:15	15	fld -> field_name
FIELD	326:15	326:20	16	fld -> field_name
LEAF_NODE	326:15	326:15	17	fld
LEAF_NODE	326:18	326:18	17	->
LEAF_NODE	326:20	326:20	17	field_name
LEAF_NODE	326:30	326:30	15	)
LEAF_NODE	326:31	326:31	13	;
EXPR_STATEMENT	327:5	327:19	12	_TIFFfree ( fld ) ;
EXPR	327:5	327:5	13	_TIFFfree ( fld )
FUNCTION_CALL	327:5	327:18	14	_TIFFfree ( fld )
CALLEE	327:5	327:5	15	_TIFFfree
LEAF_NODE	327:5	327:5	16	_TIFFfree
LEAF_NODE	327:14	327:14	15	(
ARGUMENT	327:15	327:15	15	fld
FIELD	327:15	327:15	16	fld
LEAF_NODE	327:15	327:15	17	fld
LEAF_NODE	327:18	327:18	15	)
LEAF_NODE	327:19	327:19	13	;
LEAF_NODE	328:4	328:4	11	}
LEAF_NODE	329:2	329:2	8	}
EXPR_STATEMENT	331:2	331:28	6	_TIFFfree ( tif -> tif_fields ) ;
EXPR	331:2	331:2	7	_TIFFfree ( tif -> tif_fields )
FUNCTION_CALL	331:2	331:27	8	_TIFFfree ( tif -> tif_fields )
CALLEE	331:2	331:2	9	_TIFFfree
LEAF_NODE	331:2	331:2	10	_TIFFfree
LEAF_NODE	331:11	331:11	9	(
ARGUMENT	331:12	331:12	9	tif -> tif_fields
FIELD	331:12	331:17	10	tif -> tif_fields
LEAF_NODE	331:12	331:12	11	tif
LEAF_NODE	331:15	331:15	11	->
LEAF_NODE	331:17	331:17	11	tif_fields
LEAF_NODE	331:27	331:27	9	)
LEAF_NODE	331:28	331:28	7	;
EXPR_STATEMENT	332:2	332:24	6	tif -> tif_fields = NULL ;
EXPR	332:2	332:2	7	tif -> tif_fields = NULL
ASSIGN	332:2	332:20	8	tif -> tif_fields = NULL
LVAL	332:2	332:2	9	tif -> tif_fields
FIELD	332:2	332:7	10	tif -> tif_fields
LEAF_NODE	332:2	332:2	11	tif
LEAF_NODE	332:5	332:5	11	->
LEAF_NODE	332:7	332:7	11	tif_fields
ASSIGN_OP	332:18	332:18	9	=
LEAF_NODE	332:18	332:18	10	=
RVAL	332:20	332:20	9	NULL
FIELD	332:20	332:20	10	NULL
LEAF_NODE	332:20	332:20	11	NULL
LEAF_NODE	332:24	332:24	7	;
EXPR_STATEMENT	333:2	333:22	6	tif -> tif_nfields = 0 ;
EXPR	333:2	333:2	7	tif -> tif_nfields = 0
ASSIGN	333:2	333:21	8	tif -> tif_nfields = 0
LVAL	333:2	333:2	9	tif -> tif_nfields
FIELD	333:2	333:7	10	tif -> tif_nfields
LEAF_NODE	333:2	333:2	11	tif
LEAF_NODE	333:5	333:5	11	->
LEAF_NODE	333:7	333:7	11	tif_nfields
ASSIGN_OP	333:19	333:19	9	=
LEAF_NODE	333:19	333:19	10	=
RVAL	333:21	333:21	9	0
FIELD	333:21	333:21	10	0
LEAF_NODE	333:21	333:21	11	0
LEAF_NODE	333:22	333:22	7	;
LEAF_NODE	334:1	334:1	5	}
SELECTION	335:1	335:68	3	
KEYWORD	335:1	335:1	4	if
LEAF_NODE	335:1	335:1	5	if
LEAF_NODE	335:4	335:4	4	(
CONDITION	335:5	335:5	4	! _TIFFMergeFields ( tif , fieldarray -> fields , fieldarray -> count )
EXPR	335:5	335:5	5	! _TIFFMergeFields ( tif , fieldarray -> fields , fieldarray -> count )
UNARY_EXPR	335:5	335:6	6	! _TIFFMergeFields ( tif , fieldarray -> fields , fieldarray -> count )
UNARY_OPERATOR	335:5	335:5	7	!
LEAF_NODE	335:5	335:5	8	!
FUNCTION_CALL	335:6	335:65	7	_TIFFMergeFields ( tif , fieldarray -> fields , fieldarray -> count )
CALLEE	335:6	335:6	8	_TIFFMergeFields
LEAF_NODE	335:6	335:6	9	_TIFFMergeFields
LEAF_NODE	335:22	335:22	8	(
ARGUMENT	335:23	335:23	8	tif
FIELD	335:23	335:23	9	tif
LEAF_NODE	335:23	335:23	10	tif
LEAF_NODE	335:26	335:26	8	,
ARGUMENT	335:28	335:28	8	fieldarray -> fields
FIELD	335:28	335:40	9	fieldarray -> fields
LEAF_NODE	335:28	335:28	10	fieldarray
LEAF_NODE	335:38	335:38	10	->
LEAF_NODE	335:40	335:40	10	fields
LEAF_NODE	335:46	335:46	8	,
ARGUMENT	335:48	335:48	8	fieldarray -> count
FIELD	335:48	335:60	9	fieldarray -> count
LEAF_NODE	335:48	335:48	10	fieldarray
LEAF_NODE	335:58	335:58	10	->
LEAF_NODE	335:60	335:60	10	count
LEAF_NODE	335:65	335:65	8	)
LEAF_NODE	335:66	335:66	4	)
STATEMENTS	335:68	338:1	4	
LEAF_NODE	335:68	335:68	5	{
STATEMENTS	336:2	336:2	5	
EXPR_STATEMENT	336:2	337:39	6	TIFFErrorExt ( tif -> tif_clientdata , "_TIFFSetupFields" , "Setting up field info failed" ) ;
EXPR	336:2	336:2	7	TIFFErrorExt ( tif -> tif_clientdata , "_TIFFSetupFields" , "Setting up field info failed" )
FUNCTION_CALL	336:2	337:38	8	TIFFErrorExt ( tif -> tif_clientdata , "_TIFFSetupFields" , "Setting up field info failed" )
CALLEE	336:2	336:2	9	TIFFErrorExt
LEAF_NODE	336:2	336:2	10	TIFFErrorExt
LEAF_NODE	336:14	336:14	9	(
ARGUMENT	336:15	336:15	9	tif -> tif_clientdata
FIELD	336:15	336:20	10	tif -> tif_clientdata
LEAF_NODE	336:15	336:15	11	tif
LEAF_NODE	336:18	336:18	11	->
LEAF_NODE	336:20	336:20	11	tif_clientdata
LEAF_NODE	336:34	336:34	9	,
ARGUMENT	336:36	336:36	9	"_TIFFSetupFields"
FIELD	336:36	336:36	10	"_TIFFSetupFields"
LEAF_NODE	336:36	336:36	11	"_TIFFSetupFields"
LEAF_NODE	336:54	336:54	9	,
ARGUMENT	337:8	337:8	9	"Setting up field info failed"
FIELD	337:8	337:8	10	"Setting up field info failed"
LEAF_NODE	337:8	337:8	11	"Setting up field info failed"
LEAF_NODE	337:38	337:38	9	)
LEAF_NODE	337:39	337:39	7	;
LEAF_NODE	338:1	338:1	5	}
LEAF_NODE	339:0	339:0	2	}
FUNCTION_DEF	341:0	352:0	1	
RETURN_TYPE	341:0	341:7	2	static int
LEAF_NODE	341:0	341:0	3	static
TYPE_NAME	341:7	341:7	3	int
LEAF_NODE	341:7	341:7	4	int
FUNCTION_NAME	342:0	342:0	2	tagCompare
LEAF_NODE	342:0	342:0	3	tagCompare
PARAMETER_LIST	342:10	342:39	2	( const void * a , const void * b )
LEAF_NODE	342:10	342:10	3	(
PARAMETER_DECL	342:11	342:23	3	const void * a
TYPE	342:11	342:21	4	const void *
TYPE_NAME	342:11	342:17	5	const void
LEAF_NODE	342:11	342:11	6	const
LEAF_NODE	342:17	342:17	6	void
POINTER	342:21	342:21	5	*
LEAF_NODE	342:21	342:21	6	*
NAME	342:23	342:23	4	a
LEAF_NODE	342:23	342:23	5	a
LEAF_NODE	342:24	342:24	3	,
PARAMETER_DECL	342:26	342:38	3	const void * b
TYPE	342:26	342:36	4	const void *
TYPE_NAME	342:26	342:32	5	const void
LEAF_NODE	342:26	342:26	6	const
LEAF_NODE	342:32	342:32	6	void
POINTER	342:36	342:36	5	*
LEAF_NODE	342:36	342:36	6	*
NAME	342:38	342:38	4	b
LEAF_NODE	342:38	342:38	5	b
LEAF_NODE	342:39	342:39	3	)
LEAF_NODE	343:0	343:0	2	{
STATEMENTS	344:1	349:1	2	
LEAF_NODE	344:1	344:1	3	const
LEAF_NODE	344:7	344:7	3	TIFFField
LEAF_NODE	344:16	344:16	3	*
LEAF_NODE	344:18	344:18	3	ta
LEAF_NODE	344:21	344:21	3	=
LEAF_NODE	344:23	344:23	3	*
EXPR_STATEMENT	344:24	344:45	3	( const TIFFField * * ) a ;
EXPR	344:24	344:44	4	( const TIFFField * * ) a
LEAF_NODE	344:24	344:24	5	(
TYPE_NAME	344:25	344:31	5	const TIFFField
LEAF_NODE	344:25	344:25	6	const
LEAF_NODE	344:31	344:31	6	TIFFField
LEAF_NODE	344:40	344:40	5	*
LEAF_NODE	344:41	344:41	5	*
LEAF_NODE	344:42	344:42	5	)
FIELD	344:44	344:44	5	a
LEAF_NODE	344:44	344:44	6	a
LEAF_NODE	344:45	344:45	4	;
LEAF_NODE	345:1	345:1	3	const
LEAF_NODE	345:7	345:7	3	TIFFField
LEAF_NODE	345:16	345:16	3	*
LEAF_NODE	345:18	345:18	3	tb
LEAF_NODE	345:21	345:21	3	=
LEAF_NODE	345:23	345:23	3	*
EXPR_STATEMENT	345:24	345:45	3	( const TIFFField * * ) b ;
EXPR	345:24	345:44	4	( const TIFFField * * ) b
LEAF_NODE	345:24	345:24	5	(
TYPE_NAME	345:25	345:31	5	const TIFFField
LEAF_NODE	345:25	345:25	6	const
LEAF_NODE	345:31	345:31	6	TIFFField
LEAF_NODE	345:40	345:40	5	*
LEAF_NODE	345:41	345:41	5	*
LEAF_NODE	345:42	345:42	5	)
FIELD	345:44	345:44	5	b
LEAF_NODE	345:44	345:44	6	b
LEAF_NODE	345:45	345:45	4	;
SELECTION	347:1	348:2	3	
KEYWORD	347:1	347:1	4	if
LEAF_NODE	347:1	347:1	5	if
LEAF_NODE	347:4	347:4	4	(
CONDITION	347:5	347:5	4	ta -> field_tag != tb -> field_tag
EXPR	347:5	347:22	5	ta -> field_tag != tb -> field_tag
FIELD	347:5	347:9	6	ta -> field_tag
LEAF_NODE	347:5	347:5	7	ta
LEAF_NODE	347:7	347:7	7	->
LEAF_NODE	347:9	347:9	7	field_tag
EQ_OPERATOR	347:19	347:19	6	!=
LEAF_NODE	347:19	347:19	7	!=
FIELD	347:22	347:26	6	tb -> field_tag
LEAF_NODE	347:22	347:22	7	tb
LEAF_NODE	347:24	347:24	7	->
LEAF_NODE	347:26	347:26	7	field_tag
LEAF_NODE	347:35	347:35	4	)
STATEMENTS	348:2	348:2	4	
JUMP_STATEMENT	348:2	348:48	5	return ( int ) ta -> field_tag - ( int ) tb -> field_tag ;
KEYWORD	348:2	348:2	6	return
LEAF_NODE	348:2	348:2	7	return
DESTINATION	348:9	348:9	6	( int ) ta -> field_tag - ( int ) tb -> field_tag
EXPR	348:9	348:35	7	( int ) ta -> field_tag - ( int ) tb -> field_tag
LEAF_NODE	348:9	348:9	8	(
TYPE_NAME	348:10	348:10	8	int
LEAF_NODE	348:10	348:10	9	int
LEAF_NODE	348:13	348:13	8	)
FIELD	348:14	348:18	8	ta -> field_tag
LEAF_NODE	348:14	348:14	9	ta
LEAF_NODE	348:16	348:16	9	->
LEAF_NODE	348:18	348:18	9	field_tag
LEAF_NODE	348:28	348:28	8	-
LEAF_NODE	348:30	348:30	8	(
TYPE_NAME	348:31	348:31	8	int
LEAF_NODE	348:31	348:31	9	int
LEAF_NODE	348:34	348:34	8	)
FIELD	348:35	348:39	8	tb -> field_tag
LEAF_NODE	348:35	348:35	9	tb
LEAF_NODE	348:37	348:37	9	->
LEAF_NODE	348:39	348:39	9	field_tag
LEAF_NODE	348:48	348:48	6	;
SELECTION	349:1	350:2	3	
KEYWORD	349:1	349:1	4	else
LEAF_NODE	349:1	349:1	5	else
STATEMENTS	350:2	350:2	4	
JUMP_STATEMENT	350:2	351:50	5	return ( ta -> field_type == TIFF_ANY ) ? 0 : ( ( int ) tb -> field_type - ( int ) ta -> field_type ) ;
KEYWORD	350:2	350:2	6	return
LEAF_NODE	350:2	350:2	7	return
DESTINATION	350:9	350:9	6	( ta -> field_type == TIFF_ANY ) ? 0 : ( ( int ) tb -> field_type - ( int ) ta -> field_type )
EXPR	350:9	350:9	7	( ta -> field_type == TIFF_ANY ) ? 0 : ( ( int ) tb -> field_type - ( int ) ta -> field_type )
COND_EXPR	350:9	351:49	8	( ta -> field_type == TIFF_ANY ) ? 0 : ( ( int ) tb -> field_type - ( int ) ta -> field_type )
CONDITION	350:9	350:36	9	( ta -> field_type == TIFF_ANY )
LEAF_NODE	350:9	350:9	10	(
FIELD	350:10	350:14	10	ta -> field_type
LEAF_NODE	350:10	350:10	11	ta
LEAF_NODE	350:12	350:12	11	->
LEAF_NODE	350:14	350:14	11	field_type
EQ_OPERATOR	350:25	350:25	10	==
LEAF_NODE	350:25	350:25	11	==
FIELD	350:28	350:28	10	TIFF_ANY
LEAF_NODE	350:28	350:28	11	TIFF_ANY
LEAF_NODE	350:36	350:36	10	)
LEAF_NODE	350:38	350:38	9	?
EXPR	351:3	351:3	9	0
FIELD	351:3	351:3	10	0
LEAF_NODE	351:3	351:3	11	0
LEAF_NODE	351:5	351:5	9	:
LEAF_NODE	351:7	351:7	9	(
LEAF_NODE	351:8	351:8	9	(
TYPE_NAME	351:9	351:9	9	int
LEAF_NODE	351:9	351:9	10	int
LEAF_NODE	351:12	351:12	9	)
FIELD	351:13	351:17	9	tb -> field_type
LEAF_NODE	351:13	351:13	10	tb
LEAF_NODE	351:15	351:15	10	->
LEAF_NODE	351:17	351:17	10	field_type
LEAF_NODE	351:28	351:28	9	-
LEAF_NODE	351:30	351:30	9	(
TYPE_NAME	351:31	351:31	9	int
LEAF_NODE	351:31	351:31	10	int
LEAF_NODE	351:34	351:34	9	)
FIELD	351:35	351:39	9	ta -> field_type
LEAF_NODE	351:35	351:35	10	ta
LEAF_NODE	351:37	351:37	10	->
LEAF_NODE	351:39	351:39	10	field_type
LEAF_NODE	351:49	351:49	9	)
LEAF_NODE	351:50	351:50	6	;
LEAF_NODE	352:0	352:0	2	}
FUNCTION_DEF	354:0	366:0	1	
RETURN_TYPE	354:0	354:7	2	static int
LEAF_NODE	354:0	354:0	3	static
TYPE_NAME	354:7	354:7	3	int
LEAF_NODE	354:7	354:7	4	int
FUNCTION_NAME	355:0	355:0	2	tagNameCompare
LEAF_NODE	355:0	355:0	3	tagNameCompare
PARAMETER_LIST	355:14	355:43	2	( const void * a , const void * b )
LEAF_NODE	355:14	355:14	3	(
PARAMETER_DECL	355:15	355:27	3	const void * a
TYPE	355:15	355:25	4	const void *
TYPE_NAME	355:15	355:21	5	const void
LEAF_NODE	355:15	355:15	6	const
LEAF_NODE	355:21	355:21	6	void
POINTER	355:25	355:25	5	*
LEAF_NODE	355:25	355:25	6	*
NAME	355:27	355:27	4	a
LEAF_NODE	355:27	355:27	5	a
LEAF_NODE	355:28	355:28	3	,
PARAMETER_DECL	355:30	355:42	3	const void * b
TYPE	355:30	355:40	4	const void *
TYPE_NAME	355:30	355:36	5	const void
LEAF_NODE	355:30	355:30	6	const
LEAF_NODE	355:36	355:36	6	void
POINTER	355:40	355:40	5	*
LEAF_NODE	355:40	355:40	6	*
NAME	355:42	355:42	4	b
LEAF_NODE	355:42	355:42	5	b
LEAF_NODE	355:43	355:43	3	)
LEAF_NODE	356:0	356:0	2	{
STATEMENTS	357:1	363:1	2	
LEAF_NODE	357:1	357:1	3	const
LEAF_NODE	357:7	357:7	3	TIFFField
LEAF_NODE	357:16	357:16	3	*
LEAF_NODE	357:18	357:18	3	ta
LEAF_NODE	357:21	357:21	3	=
LEAF_NODE	357:23	357:23	3	*
EXPR_STATEMENT	357:24	357:45	3	( const TIFFField * * ) a ;
EXPR	357:24	357:44	4	( const TIFFField * * ) a
LEAF_NODE	357:24	357:24	5	(
TYPE_NAME	357:25	357:31	5	const TIFFField
LEAF_NODE	357:25	357:25	6	const
LEAF_NODE	357:31	357:31	6	TIFFField
LEAF_NODE	357:40	357:40	5	*
LEAF_NODE	357:41	357:41	5	*
LEAF_NODE	357:42	357:42	5	)
FIELD	357:44	357:44	5	a
LEAF_NODE	357:44	357:44	6	a
LEAF_NODE	357:45	357:45	4	;
LEAF_NODE	358:1	358:1	3	const
LEAF_NODE	358:7	358:7	3	TIFFField
LEAF_NODE	358:16	358:16	3	*
LEAF_NODE	358:18	358:18	3	tb
LEAF_NODE	358:21	358:21	3	=
LEAF_NODE	358:23	358:23	3	*
EXPR_STATEMENT	358:24	358:45	3	( const TIFFField * * ) b ;
EXPR	358:24	358:44	4	( const TIFFField * * ) b
LEAF_NODE	358:24	358:24	5	(
TYPE_NAME	358:25	358:31	5	const TIFFField
LEAF_NODE	358:25	358:25	6	const
LEAF_NODE	358:31	358:31	6	TIFFField
LEAF_NODE	358:40	358:40	5	*
LEAF_NODE	358:41	358:41	5	*
LEAF_NODE	358:42	358:42	5	)
FIELD	358:44	358:44	5	b
LEAF_NODE	358:44	358:44	6	b
LEAF_NODE	358:45	358:45	4	;
SIMPLE_DECL	359:1	359:49	3	int ret ; ret = strcmp ( ta -> field_name , tb -> field_name ) ;
VAR_DECL	359:1	359:5	4	int ret ; ret = strcmp ( ta -> field_name , tb -> field_name )
TYPE	359:1	359:1	5	int
TYPE_NAME	359:1	359:1	6	int
LEAF_NODE	359:1	359:1	7	int
NAME	359:5	359:5	5	ret
LEAF_NODE	359:5	359:5	6	ret
LEAF_NODE	0:0	0:0	5	;
INIT	359:5	359:5	5	ret = strcmp ( ta -> field_name , tb -> field_name )
ASSIGN	359:5	359:11	6	ret = strcmp ( ta -> field_name , tb -> field_name )
LVAL	359:5	359:5	7	ret
NAME	359:5	359:5	8	ret
LEAF_NODE	359:5	359:5	9	ret
ASSIGN_OP	359:9	359:9	7	=
LEAF_NODE	359:9	359:9	8	=
RVAL	359:11	359:11	7	strcmp ( ta -> field_name , tb -> field_name )
FUNCTION_CALL	359:11	359:48	8	strcmp ( ta -> field_name , tb -> field_name )
CALLEE	359:11	359:11	9	strcmp
LEAF_NODE	359:11	359:11	10	strcmp
LEAF_NODE	359:17	359:17	9	(
ARGUMENT	359:18	359:18	9	ta -> field_name
FIELD	359:18	359:22	10	ta -> field_name
LEAF_NODE	359:18	359:18	11	ta
LEAF_NODE	359:20	359:20	11	->
LEAF_NODE	359:22	359:22	11	field_name
LEAF_NODE	359:32	359:32	9	,
ARGUMENT	359:34	359:34	9	tb -> field_name
FIELD	359:34	359:38	10	tb -> field_name
LEAF_NODE	359:34	359:34	11	tb
LEAF_NODE	359:36	359:36	11	->
LEAF_NODE	359:38	359:38	11	field_name
LEAF_NODE	359:48	359:48	9	)
LEAF_NODE	359:49	359:49	4	;
SELECTION	361:1	362:2	3	
KEYWORD	361:1	361:1	4	if
LEAF_NODE	361:1	361:1	5	if
LEAF_NODE	361:4	361:4	4	(
CONDITION	361:5	361:5	4	ret
EXPR	361:5	361:5	5	ret
FIELD	361:5	361:5	6	ret
LEAF_NODE	361:5	361:5	7	ret
LEAF_NODE	361:8	361:8	4	)
STATEMENTS	362:2	362:2	4	
JUMP_STATEMENT	362:2	362:12	5	return ret ;
KEYWORD	362:2	362:2	6	return
LEAF_NODE	362:2	362:2	7	return
DESTINATION	362:9	362:9	6	ret
EXPR	362:9	362:9	7	ret
FIELD	362:9	362:9	8	ret
LEAF_NODE	362:9	362:9	9	ret
LEAF_NODE	362:12	362:12	6	;
SELECTION	363:1	364:2	3	
KEYWORD	363:1	363:1	4	else
LEAF_NODE	363:1	363:1	5	else
STATEMENTS	364:2	364:2	4	
JUMP_STATEMENT	364:2	365:50	5	return ( ta -> field_type == TIFF_ANY ) ? 0 : ( ( int ) tb -> field_type - ( int ) ta -> field_type ) ;
KEYWORD	364:2	364:2	6	return
LEAF_NODE	364:2	364:2	7	return
DESTINATION	364:9	364:9	6	( ta -> field_type == TIFF_ANY ) ? 0 : ( ( int ) tb -> field_type - ( int ) ta -> field_type )
EXPR	364:9	364:9	7	( ta -> field_type == TIFF_ANY ) ? 0 : ( ( int ) tb -> field_type - ( int ) ta -> field_type )
COND_EXPR	364:9	365:49	8	( ta -> field_type == TIFF_ANY ) ? 0 : ( ( int ) tb -> field_type - ( int ) ta -> field_type )
CONDITION	364:9	364:36	9	( ta -> field_type == TIFF_ANY )
LEAF_NODE	364:9	364:9	10	(
FIELD	364:10	364:14	10	ta -> field_type
LEAF_NODE	364:10	364:10	11	ta
LEAF_NODE	364:12	364:12	11	->
LEAF_NODE	364:14	364:14	11	field_type
EQ_OPERATOR	364:25	364:25	10	==
LEAF_NODE	364:25	364:25	11	==
FIELD	364:28	364:28	10	TIFF_ANY
LEAF_NODE	364:28	364:28	11	TIFF_ANY
LEAF_NODE	364:36	364:36	10	)
LEAF_NODE	364:38	364:38	9	?
EXPR	365:3	365:3	9	0
FIELD	365:3	365:3	10	0
LEAF_NODE	365:3	365:3	11	0
LEAF_NODE	365:5	365:5	9	:
LEAF_NODE	365:7	365:7	9	(
LEAF_NODE	365:8	365:8	9	(
TYPE_NAME	365:9	365:9	9	int
LEAF_NODE	365:9	365:9	10	int
LEAF_NODE	365:12	365:12	9	)
FIELD	365:13	365:17	9	tb -> field_type
LEAF_NODE	365:13	365:13	10	tb
LEAF_NODE	365:15	365:15	10	->
LEAF_NODE	365:17	365:17	10	field_type
LEAF_NODE	365:28	365:28	9	-
LEAF_NODE	365:30	365:30	9	(
TYPE_NAME	365:31	365:31	9	int
LEAF_NODE	365:31	365:31	10	int
LEAF_NODE	365:34	365:34	9	)
FIELD	365:35	365:39	9	ta -> field_type
LEAF_NODE	365:35	365:35	10	ta
LEAF_NODE	365:37	365:37	10	->
LEAF_NODE	365:39	365:39	10	field_type
LEAF_NODE	365:49	365:49	9	)
LEAF_NODE	365:50	365:50	6	;
LEAF_NODE	366:0	366:0	2	}
FUNCTION_DEF	368:0	411:0	1	
RETURN_TYPE	368:0	368:0	2	int
TYPE_NAME	368:0	368:0	3	int
LEAF_NODE	368:0	368:0	4	int
FUNCTION_NAME	369:0	369:0	2	_TIFFMergeFields
LEAF_NODE	369:0	369:0	3	_TIFFMergeFields
PARAMETER_LIST	369:16	369:60	2	( TIFF * tif , const TIFFField [ ] info , uint32 n )
LEAF_NODE	369:16	369:16	3	(
PARAMETER_DECL	369:17	369:23	3	TIFF * tif
TYPE	369:17	369:21	4	TIFF *
TYPE_NAME	369:17	369:17	5	TIFF
LEAF_NODE	369:17	369:17	6	TIFF
POINTER	369:21	369:21	5	*
LEAF_NODE	369:21	369:21	6	*
NAME	369:23	369:23	4	tif
LEAF_NODE	369:23	369:23	5	tif
LEAF_NODE	369:26	369:26	3	,
PARAMETER_DECL	369:28	369:44	3	const TIFFField [ ] info
TYPE	369:28	369:48	4	const TIFFField [ ]
TYPE_NAME	369:28	369:34	5	const TIFFField
LEAF_NODE	369:28	369:28	6	const
LEAF_NODE	369:34	369:34	6	TIFFField
TYPE_SUFFIX	369:48	369:49	5	[ ]
LEAF_NODE	369:48	369:48	6	[
LEAF_NODE	369:49	369:49	6	]
NAME	369:44	369:44	4	info
LEAF_NODE	369:44	369:44	5	info
LEAF_NODE	369:50	369:50	3	,
PARAMETER_DECL	369:52	369:59	3	uint32 n
TYPE	369:52	369:52	4	uint32
TYPE_NAME	369:52	369:52	5	uint32
LEAF_NODE	369:52	369:52	6	uint32
NAME	369:59	369:59	4	n
LEAF_NODE	369:59	369:59	5	n
LEAF_NODE	369:60	369:60	3	)
LEAF_NODE	370:0	370:0	2	{
STATEMENTS	371:1	410:1	2	
LEAF_NODE	371:1	371:1	3	static
SIMPLE_DECL	371:8	371:48	3	const char [ ] module ; module = "_TIFFMergeFields" ;
VAR_DECL	371:8	371:19	4	const char [ ] module ; module = "_TIFFMergeFields"
TYPE	371:8	371:25	5	const char [ ]
TYPE_NAME	371:8	371:14	6	const char
LEAF_NODE	371:8	371:8	7	const
LEAF_NODE	371:14	371:14	7	char
TYPE_SUFFIX	371:25	371:26	6	[ ]
LEAF_NODE	371:25	371:25	7	[
LEAF_NODE	371:26	371:26	7	]
NAME	371:19	371:19	5	module
LEAF_NODE	371:19	371:19	6	module
LEAF_NODE	0:0	0:0	5	;
INIT	371:19	371:19	5	module = "_TIFFMergeFields"
ASSIGN	371:19	371:30	6	module = "_TIFFMergeFields"
LVAL	371:19	371:19	7	module
NAME	371:19	371:19	8	module
LEAF_NODE	371:19	371:19	9	module
ASSIGN_OP	371:28	371:28	7	=
LEAF_NODE	371:28	371:28	8	=
RVAL	371:30	371:30	7	"_TIFFMergeFields"
FIELD	371:30	371:30	8	"_TIFFMergeFields"
LEAF_NODE	371:30	371:30	9	"_TIFFMergeFields"
LEAF_NODE	371:48	371:48	4	;
LEAF_NODE	372:1	372:1	3	static
SIMPLE_DECL	372:8	372:48	3	const char [ ] reason ; reason = "for fields array" ;
VAR_DECL	372:8	372:19	4	const char [ ] reason ; reason = "for fields array"
TYPE	372:8	372:25	5	const char [ ]
TYPE_NAME	372:8	372:14	6	const char
LEAF_NODE	372:8	372:8	7	const
LEAF_NODE	372:14	372:14	7	char
TYPE_SUFFIX	372:25	372:26	6	[ ]
LEAF_NODE	372:25	372:25	7	[
LEAF_NODE	372:26	372:26	7	]
NAME	372:19	372:19	5	reason
LEAF_NODE	372:19	372:19	6	reason
LEAF_NODE	0:0	0:0	5	;
INIT	372:19	372:19	5	reason = "for fields array"
ASSIGN	372:19	372:30	6	reason = "for fields array"
LVAL	372:19	372:19	7	reason
NAME	372:19	372:19	8	reason
LEAF_NODE	372:19	372:19	9	reason
ASSIGN_OP	372:28	372:28	7	=
LEAF_NODE	372:28	372:28	8	=
RVAL	372:30	372:30	7	"for fields array"
FIELD	372:30	372:30	8	"for fields array"
LEAF_NODE	372:30	372:30	9	"for fields array"
LEAF_NODE	372:48	372:48	4	;
SIMPLE_DECL	374:1	374:9	3	uint32 i ;
VAR_DECL	374:1	374:8	4	uint32 i
TYPE	374:1	374:1	5	uint32
TYPE_NAME	374:1	374:1	6	uint32
LEAF_NODE	374:1	374:1	7	uint32
NAME	374:8	374:8	5	i
LEAF_NODE	374:8	374:8	6	i
LEAF_NODE	374:9	374:9	4	;
EXPR_STATEMENT	376:8	376:34	3	tif -> tif_foundfield = NULL ;
EXPR	376:8	376:8	4	tif -> tif_foundfield = NULL
ASSIGN	376:8	376:30	5	tif -> tif_foundfield = NULL
LVAL	376:8	376:8	6	tif -> tif_foundfield
FIELD	376:8	376:13	7	tif -> tif_foundfield
LEAF_NODE	376:8	376:8	8	tif
LEAF_NODE	376:11	376:11	8	->
LEAF_NODE	376:13	376:13	8	tif_foundfield
ASSIGN_OP	376:28	376:28	6	=
LEAF_NODE	376:28	376:28	7	=
RVAL	376:30	376:30	6	NULL
FIELD	376:30	376:30	7	NULL
LEAF_NODE	376:30	376:30	8	NULL
LEAF_NODE	376:34	376:34	4	;
SELECTION	378:1	378:46	3	
KEYWORD	378:1	378:1	4	if
LEAF_NODE	378:1	378:1	5	if
LEAF_NODE	378:4	378:4	4	(
CONDITION	378:5	378:5	4	tif -> tif_fields && tif -> tif_nfields > 0
EXPR	378:5	378:5	5	tif -> tif_fields && tif -> tif_nfields > 0
AND	378:5	378:24	6	tif -> tif_fields && tif -> tif_nfields > 0
EXPR	378:5	378:5	7	tif -> tif_fields
FIELD	378:5	378:10	8	tif -> tif_fields
LEAF_NODE	378:5	378:5	9	tif
LEAF_NODE	378:8	378:8	9	->
LEAF_NODE	378:10	378:10	9	tif_fields
LEAF_NODE	378:21	378:21	7	&&
EXPR	378:24	378:43	7	tif -> tif_nfields > 0
FIELD	378:24	378:29	8	tif -> tif_nfields
LEAF_NODE	378:24	378:24	9	tif
LEAF_NODE	378:27	378:27	9	->
LEAF_NODE	378:29	378:29	9	tif_nfields
REL_OPERATOR	378:41	378:41	8	>
LEAF_NODE	378:41	378:41	9	>
FIELD	378:43	378:43	8	0
LEAF_NODE	378:43	378:43	9	0
LEAF_NODE	378:44	378:44	4	)
STATEMENTS	378:46	383:1	4	
LEAF_NODE	378:46	378:46	5	{
STATEMENTS	379:2	382:35	5	
LEAF_NODE	379:2	379:2	6	tif
LEAF_NODE	379:5	379:5	6	->
LEAF_NODE	379:7	379:7	6	tif_fields
LEAF_NODE	379:18	379:18	6	=
LEAF_NODE	379:20	379:20	6	(
LEAF_NODE	379:21	379:21	6	TIFFField
LEAF_NODE	379:30	379:30	6	*
LEAF_NODE	379:31	379:31	6	*
LEAF_NODE	379:32	379:32	6	)
LEAF_NODE	380:3	380:3	6	_TIFFCheckRealloc
LEAF_NODE	380:20	380:20	6	(
LEAF_NODE	380:21	380:21	6	tif
LEAF_NODE	380:24	380:24	6	,
LEAF_NODE	380:26	380:26	6	tif
LEAF_NODE	380:29	380:29	6	->
LEAF_NODE	380:31	380:31	6	tif_fields
LEAF_NODE	380:41	380:41	6	,
LEAF_NODE	381:7	381:7	6	(
LEAF_NODE	381:8	381:8	6	tif
LEAF_NODE	381:11	381:11	6	->
LEAF_NODE	381:13	381:13	6	tif_nfields
LEAF_NODE	381:25	381:25	6	+
LEAF_NODE	381:27	381:27	6	n
LEAF_NODE	381:28	381:28	6	)
LEAF_NODE	381:29	381:29	6	,
LEAF_NODE	382:7	382:7	6	sizeof
LEAF_NODE	382:13	382:13	6	(
LEAF_NODE	382:14	382:14	6	TIFFField
LEAF_NODE	382:24	382:24	6	*
LEAF_NODE	382:25	382:25	6	)
LEAF_NODE	382:26	382:26	6	,
LEAF_NODE	382:28	382:28	6	reason
LEAF_NODE	382:34	382:34	6	)
LEAF_NODE	382:35	382:35	6	;
LEAF_NODE	383:1	383:1	5	}
SELECTION	383:3	383:8	3	
KEYWORD	383:3	383:3	4	else
LEAF_NODE	383:3	383:3	5	else
STATEMENTS	383:8	387:1	4	
LEAF_NODE	383:8	383:8	5	{
STATEMENTS	384:2	386:13	5	
LEAF_NODE	384:2	384:2	6	tif
LEAF_NODE	384:5	384:5	6	->
LEAF_NODE	384:7	384:7	6	tif_fields
LEAF_NODE	384:18	384:18	6	=
LEAF_NODE	384:20	384:20	6	(
LEAF_NODE	384:21	384:21	6	TIFFField
LEAF_NODE	384:31	384:31	6	*
LEAF_NODE	384:32	384:32	6	*
LEAF_NODE	384:33	384:33	6	)
LEAF_NODE	385:3	385:3	6	_TIFFCheckMalloc
LEAF_NODE	385:19	385:19	6	(
LEAF_NODE	385:20	385:20	6	tif
LEAF_NODE	385:23	385:23	6	,
LEAF_NODE	385:25	385:25	6	n
LEAF_NODE	385:26	385:26	6	,
LEAF_NODE	385:28	385:28	6	sizeof
LEAF_NODE	385:34	385:34	6	(
LEAF_NODE	385:35	385:35	6	TIFFField
LEAF_NODE	385:45	385:45	6	*
LEAF_NODE	385:46	385:46	6	)
LEAF_NODE	385:47	385:47	6	,
LEAF_NODE	386:6	386:6	6	reason
LEAF_NODE	386:12	386:12	6	)
LEAF_NODE	386:13	386:13	6	;
LEAF_NODE	387:1	387:1	5	}
SELECTION	388:1	388:23	3	
KEYWORD	388:1	388:1	4	if
LEAF_NODE	388:1	388:1	5	if
LEAF_NODE	388:4	388:4	4	(
CONDITION	388:5	388:5	4	! tif -> tif_fields
EXPR	388:5	388:5	5	! tif -> tif_fields
UNARY_EXPR	388:5	388:6	6	! tif -> tif_fields
UNARY_OPERATOR	388:5	388:5	7	!
LEAF_NODE	388:5	388:5	8	!
FIELD	388:6	388:11	7	tif -> tif_fields
LEAF_NODE	388:6	388:6	8	tif
LEAF_NODE	388:9	388:9	8	->
LEAF_NODE	388:11	388:11	8	tif_fields
LEAF_NODE	388:21	388:21	4	)
STATEMENTS	388:23	392:1	4	
LEAF_NODE	388:23	388:23	5	{
STATEMENTS	389:2	391:2	5	
EXPR_STATEMENT	389:2	390:42	6	TIFFErrorExt ( tif -> tif_clientdata , module , "Failed to allocate fields array" ) ;
EXPR	389:2	389:2	7	TIFFErrorExt ( tif -> tif_clientdata , module , "Failed to allocate fields array" )
FUNCTION_CALL	389:2	390:41	8	TIFFErrorExt ( tif -> tif_clientdata , module , "Failed to allocate fields array" )
CALLEE	389:2	389:2	9	TIFFErrorExt
LEAF_NODE	389:2	389:2	10	TIFFErrorExt
LEAF_NODE	389:14	389:14	9	(
ARGUMENT	389:15	389:15	9	tif -> tif_clientdata
FIELD	389:15	389:20	10	tif -> tif_clientdata
LEAF_NODE	389:15	389:15	11	tif
LEAF_NODE	389:18	389:18	11	->
LEAF_NODE	389:20	389:20	11	tif_clientdata
LEAF_NODE	389:34	389:34	9	,
ARGUMENT	389:36	389:36	9	module
FIELD	389:36	389:36	10	module
LEAF_NODE	389:36	389:36	11	module
LEAF_NODE	389:42	389:42	9	,
ARGUMENT	390:8	390:8	9	"Failed to allocate fields array"
FIELD	390:8	390:8	10	"Failed to allocate fields array"
LEAF_NODE	390:8	390:8	11	"Failed to allocate fields array"
LEAF_NODE	390:41	390:41	9	)
LEAF_NODE	390:42	390:42	7	;
JUMP_STATEMENT	391:2	391:10	6	return 0 ;
KEYWORD	391:2	391:2	7	return
LEAF_NODE	391:2	391:2	8	return
DESTINATION	391:9	391:9	7	0
EXPR	391:9	391:9	8	0
FIELD	391:9	391:9	9	0
LEAF_NODE	391:9	391:9	10	0
LEAF_NODE	391:10	391:10	7	;
LEAF_NODE	392:1	392:1	5	}
ITERATION	395:1	395:25	3	
KEYWORD	395:1	395:1	4	for
LEAF_NODE	395:1	395:1	5	for
LEAF_NODE	395:5	395:5	4	(
FOR_INIT	395:6	395:11	4	i = 0 ;
EXPR	395:6	395:6	5	i = 0
ASSIGN	395:6	395:10	6	i = 0
LVAL	395:6	395:6	7	i
FIELD	395:6	395:6	8	i
LEAF_NODE	395:6	395:6	9	i
ASSIGN_OP	395:8	395:8	7	=
LEAF_NODE	395:8	395:8	8	=
RVAL	395:10	395:10	7	0
FIELD	395:10	395:10	8	0
LEAF_NODE	395:10	395:10	9	0
LEAF_NODE	395:11	395:11	5	;
CONDITION	395:13	395:13	4	i < n
EXPR	395:13	395:17	5	i < n
FIELD	395:13	395:13	6	i
LEAF_NODE	395:13	395:13	7	i
REL_OPERATOR	395:15	395:15	6	<
LEAF_NODE	395:15	395:15	7	<
FIELD	395:17	395:17	6	n
LEAF_NODE	395:17	395:17	7	n
LEAF_NODE	395:18	395:18	4	;
FOR_EXPR	395:20	395:20	4	i ++
EXPR	395:20	395:20	5	i ++
FIELD	395:20	395:21	6	i ++
LEAF_NODE	395:20	395:20	7	i
LEAF_NODE	395:21	395:21	7	++
LEAF_NODE	395:23	395:23	4	)
STATEMENTS	395:25	404:1	4	
LEAF_NODE	395:25	395:25	5	{
STATEMENTS	396:2	400:2	5	
SIMPLE_DECL	396:2	397:50	6	const TIFFField * fip ; fip = TIFFFindField ( tif , info [ i ] . field_tag , TIFF_ANY ) ;
VAR_DECL	396:2	396:19	7	const TIFFField * fip ; fip = TIFFFindField ( tif , info [ i ] . field_tag , TIFF_ANY )
TYPE	396:2	396:18	8	const TIFFField *
TYPE_NAME	396:2	396:8	9	const TIFFField
LEAF_NODE	396:2	396:2	10	const
LEAF_NODE	396:8	396:8	10	TIFFField
POINTER	396:18	396:18	9	*
LEAF_NODE	396:18	396:18	10	*
NAME	396:19	396:19	8	fip
LEAF_NODE	396:19	396:19	9	fip
LEAF_NODE	0:0	0:0	8	;
INIT	396:19	396:19	8	fip = TIFFFindField ( tif , info [ i ] . field_tag , TIFF_ANY )
ASSIGN	396:19	397:3	9	fip = TIFFFindField ( tif , info [ i ] . field_tag , TIFF_ANY )
LVAL	396:19	396:19	10	fip
NAME	396:19	396:19	11	fip
LEAF_NODE	396:19	396:19	12	fip
ASSIGN_OP	396:23	396:23	10	=
LEAF_NODE	396:23	396:23	11	=
RVAL	397:3	397:3	10	TIFFFindField ( tif , info [ i ] . field_tag , TIFF_ANY )
FUNCTION_CALL	397:3	397:49	11	TIFFFindField ( tif , info [ i ] . field_tag , TIFF_ANY )
CALLEE	397:3	397:3	12	TIFFFindField
LEAF_NODE	397:3	397:3	13	TIFFFindField
LEAF_NODE	397:16	397:16	12	(
ARGUMENT	397:17	397:17	12	tif
FIELD	397:17	397:17	13	tif
LEAF_NODE	397:17	397:17	14	tif
LEAF_NODE	397:20	397:20	12	,
ARGUMENT	397:22	397:22	12	info [ i ] . field_tag
FIELD	397:22	397:30	13	info [ i ] . field_tag
LEAF_NODE	397:22	397:22	14	info
LEAF_NODE	397:26	397:26	14	[
EXPR	397:27	397:27	14	i
FIELD	397:27	397:27	15	i
LEAF_NODE	397:27	397:27	16	i
LEAF_NODE	397:28	397:28	14	]
LEAF_NODE	397:29	397:29	14	.
LEAF_NODE	397:30	397:30	14	field_tag
LEAF_NODE	397:39	397:39	12	,
ARGUMENT	397:41	397:41	12	TIFF_ANY
FIELD	397:41	397:41	13	TIFF_ANY
LEAF_NODE	397:41	397:41	14	TIFF_ANY
LEAF_NODE	397:49	397:49	12	)
LEAF_NODE	397:50	397:50	7	;
SELECTION	400:2	400:12	6	
KEYWORD	400:2	400:2	7	if
LEAF_NODE	400:2	400:2	8	if
LEAF_NODE	400:5	400:5	7	(
CONDITION	400:6	400:6	7	! fip
EXPR	400:6	400:6	8	! fip
UNARY_EXPR	400:6	400:7	9	! fip
UNARY_OPERATOR	400:6	400:6	10	!
LEAF_NODE	400:6	400:6	11	!
FIELD	400:7	400:7	10	fip
LEAF_NODE	400:7	400:7	11	fip
LEAF_NODE	400:10	400:10	7	)
STATEMENTS	400:12	403:16	7	
LEAF_NODE	400:12	400:12	8	{
STATEMENTS	401:24	402:24	8	
EXPR_STATEMENT	401:24	401:82	9	tif -> tif_fields [ tif -> tif_nfields ] = ( TIFFField * ) ( info + i ) ;
EXPR	401:24	401:24	10	tif -> tif_fields [ tif -> tif_nfields ] = ( TIFFField * ) ( info + i )
ASSIGN	401:24	401:60	11	tif -> tif_fields [ tif -> tif_nfields ] = ( TIFFField * ) ( info + i )
LVAL	401:24	401:24	12	tif -> tif_fields [ tif -> tif_nfields ]
FIELD	401:24	401:56	13	tif -> tif_fields [ tif -> tif_nfields ]
LEAF_NODE	401:24	401:24	14	tif
LEAF_NODE	401:27	401:27	14	->
LEAF_NODE	401:29	401:29	14	tif_fields
LEAF_NODE	401:39	401:39	14	[
EXPR	401:40	401:40	14	tif -> tif_nfields
FIELD	401:40	401:45	15	tif -> tif_nfields
LEAF_NODE	401:40	401:40	16	tif
LEAF_NODE	401:43	401:43	16	->
LEAF_NODE	401:45	401:45	16	tif_nfields
LEAF_NODE	401:56	401:56	14	]
ASSIGN_OP	401:58	401:58	12	=
LEAF_NODE	401:58	401:58	13	=
RVAL	401:60	401:81	12	( TIFFField * ) ( info + i )
LEAF_NODE	401:60	401:60	13	(
TYPE_NAME	401:61	401:61	13	TIFFField
LEAF_NODE	401:61	401:61	14	TIFFField
LEAF_NODE	401:71	401:71	13	*
LEAF_NODE	401:72	401:72	13	)
LEAF_NODE	401:74	401:74	13	(
FIELD	401:75	401:75	13	info
LEAF_NODE	401:75	401:75	14	info
LEAF_NODE	401:79	401:79	13	+
FIELD	401:80	401:80	13	i
LEAF_NODE	401:80	401:80	14	i
LEAF_NODE	401:81	401:81	13	)
LEAF_NODE	401:82	401:82	10	;
EXPR_STATEMENT	402:24	402:42	9	tif -> tif_nfields ++ ;
EXPR	402:24	402:24	10	tif -> tif_nfields ++
FIELD	402:24	402:40	11	tif -> tif_nfields ++
LEAF_NODE	402:24	402:24	12	tif
LEAF_NODE	402:27	402:27	12	->
LEAF_NODE	402:29	402:29	12	tif_nfields
LEAF_NODE	402:40	402:40	12	++
LEAF_NODE	402:42	402:42	10	;
LEAF_NODE	403:16	403:16	8	}
LEAF_NODE	404:1	404:1	5	}
LEAF_NODE	407:1	407:1	3	qsort
LEAF_NODE	407:6	407:6	3	(
LEAF_NODE	407:7	407:7	3	tif
LEAF_NODE	407:10	407:10	3	->
LEAF_NODE	407:12	407:12	3	tif_fields
LEAF_NODE	407:22	407:22	3	,
LEAF_NODE	407:24	407:24	3	tif
LEAF_NODE	407:27	407:27	3	->
LEAF_NODE	407:29	407:29	3	tif_nfields
LEAF_NODE	407:40	407:40	3	,
LEAF_NODE	408:7	408:7	3	sizeof
LEAF_NODE	408:13	408:13	3	(
LEAF_NODE	408:14	408:14	3	TIFFField
LEAF_NODE	408:24	408:24	3	*
LEAF_NODE	408:25	408:25	3	)
LEAF_NODE	408:26	408:26	3	,
LEAF_NODE	408:28	408:28	3	tagCompare
LEAF_NODE	408:38	408:38	3	)
LEAF_NODE	408:39	408:39	3	;
JUMP_STATEMENT	410:1	410:9	3	return n ;
KEYWORD	410:1	410:1	4	return
LEAF_NODE	410:1	410:1	5	return
DESTINATION	410:8	410:8	4	n
EXPR	410:8	410:8	5	n
FIELD	410:8	410:8	6	n
LEAF_NODE	410:8	410:8	7	n
LEAF_NODE	410:9	410:9	4	;
LEAF_NODE	411:0	411:0	2	}
FUNCTION_DEF	413:0	432:0	1	
RETURN_TYPE	413:0	413:0	2	void
TYPE_NAME	413:0	413:0	3	void
LEAF_NODE	413:0	413:0	4	void
FUNCTION_NAME	414:0	414:0	2	_TIFFPrintFieldInfo
LEAF_NODE	414:0	414:0	3	_TIFFPrintFieldInfo
PARAMETER_LIST	414:19	414:39	2	( TIFF * tif , FILE * fd )
LEAF_NODE	414:19	414:19	3	(
PARAMETER_DECL	414:20	414:26	3	TIFF * tif
TYPE	414:20	414:24	4	TIFF *
TYPE_NAME	414:20	414:20	5	TIFF
LEAF_NODE	414:20	414:20	6	TIFF
POINTER	414:24	414:24	5	*
LEAF_NODE	414:24	414:24	6	*
NAME	414:26	414:26	4	tif
LEAF_NODE	414:26	414:26	5	tif
LEAF_NODE	414:29	414:29	3	,
PARAMETER_DECL	414:31	414:37	3	FILE * fd
TYPE	414:31	414:35	4	FILE *
TYPE_NAME	414:31	414:31	5	FILE
LEAF_NODE	414:31	414:31	6	FILE
POINTER	414:35	414:35	5	*
LEAF_NODE	414:35	414:35	6	*
NAME	414:37	414:37	4	fd
LEAF_NODE	414:37	414:37	5	fd
LEAF_NODE	414:39	414:39	3	)
LEAF_NODE	415:0	415:0	2	{
STATEMENTS	416:1	419:1	2	
SIMPLE_DECL	416:1	416:9	3	uint32 i ;
VAR_DECL	416:1	416:8	4	uint32 i
TYPE	416:1	416:1	5	uint32
TYPE_NAME	416:1	416:1	6	uint32
LEAF_NODE	416:1	416:1	7	uint32
NAME	416:8	416:8	5	i
LEAF_NODE	416:8	416:8	6	i
LEAF_NODE	416:9	416:9	4	;
EXPR_STATEMENT	418:1	418:37	3	fprintf ( fd , "%s: \n" , tif -> tif_name ) ;
EXPR	418:1	418:1	4	fprintf ( fd , "%s: \n" , tif -> tif_name )
FUNCTION_CALL	418:1	418:36	5	fprintf ( fd , "%s: \n" , tif -> tif_name )
CALLEE	418:1	418:1	6	fprintf
LEAF_NODE	418:1	418:1	7	fprintf
LEAF_NODE	418:8	418:8	6	(
ARGUMENT	418:9	418:9	6	fd
FIELD	418:9	418:9	7	fd
LEAF_NODE	418:9	418:9	8	fd
LEAF_NODE	418:11	418:11	6	,
ARGUMENT	418:13	418:13	6	"%s: \n"
FIELD	418:13	418:13	7	"%s: \n"
LEAF_NODE	418:13	418:13	8	"%s: \n"
LEAF_NODE	418:21	418:21	6	,
ARGUMENT	418:23	418:23	6	tif -> tif_name
FIELD	418:23	418:28	7	tif -> tif_name
LEAF_NODE	418:23	418:23	8	tif
LEAF_NODE	418:26	418:26	8	->
LEAF_NODE	418:28	418:28	8	tif_name
LEAF_NODE	418:36	418:36	6	)
LEAF_NODE	418:37	418:37	4	;
ITERATION	419:1	419:40	3	
KEYWORD	419:1	419:1	4	for
LEAF_NODE	419:1	419:1	5	for
LEAF_NODE	419:5	419:5	4	(
FOR_INIT	419:6	419:11	4	i = 0 ;
EXPR	419:6	419:6	5	i = 0
ASSIGN	419:6	419:10	6	i = 0
LVAL	419:6	419:6	7	i
FIELD	419:6	419:6	8	i
LEAF_NODE	419:6	419:6	9	i
ASSIGN_OP	419:8	419:8	7	=
LEAF_NODE	419:8	419:8	8	=
RVAL	419:10	419:10	7	0
FIELD	419:10	419:10	8	0
LEAF_NODE	419:10	419:10	9	0
LEAF_NODE	419:11	419:11	5	;
CONDITION	419:13	419:13	4	i < tif -> tif_nfields
EXPR	419:13	419:17	5	i < tif -> tif_nfields
FIELD	419:13	419:13	6	i
LEAF_NODE	419:13	419:13	7	i
REL_OPERATOR	419:15	419:15	6	<
LEAF_NODE	419:15	419:15	7	<
FIELD	419:17	419:22	6	tif -> tif_nfields
LEAF_NODE	419:17	419:17	7	tif
LEAF_NODE	419:20	419:20	7	->
LEAF_NODE	419:22	419:22	7	tif_nfields
LEAF_NODE	419:33	419:33	4	;
FOR_EXPR	419:35	419:35	4	i ++
EXPR	419:35	419:35	5	i ++
FIELD	419:35	419:36	6	i ++
LEAF_NODE	419:35	419:35	7	i
LEAF_NODE	419:36	419:36	7	++
LEAF_NODE	419:38	419:38	4	)
STATEMENTS	419:40	431:1	4	
LEAF_NODE	419:40	419:40	5	{
STATEMENTS	420:2	421:2	5	
SIMPLE_DECL	420:2	420:43	6	const TIFFField * fip ; fip = tif -> tif_fields [ i ] ;
VAR_DECL	420:2	420:19	7	const TIFFField * fip ; fip = tif -> tif_fields [ i ]
TYPE	420:2	420:17	8	const TIFFField *
TYPE_NAME	420:2	420:8	9	const TIFFField
LEAF_NODE	420:2	420:2	10	const
LEAF_NODE	420:8	420:8	10	TIFFField
POINTER	420:17	420:17	9	*
LEAF_NODE	420:17	420:17	10	*
NAME	420:19	420:19	8	fip
LEAF_NODE	420:19	420:19	9	fip
LEAF_NODE	0:0	0:0	8	;
INIT	420:19	420:19	8	fip = tif -> tif_fields [ i ]
ASSIGN	420:19	420:25	9	fip = tif -> tif_fields [ i ]
LVAL	420:19	420:19	10	fip
NAME	420:19	420:19	11	fip
LEAF_NODE	420:19	420:19	12	fip
ASSIGN_OP	420:23	420:23	10	=
LEAF_NODE	420:23	420:23	11	=
RVAL	420:25	420:25	10	tif -> tif_fields [ i ]
FIELD	420:25	420:42	11	tif -> tif_fields [ i ]
LEAF_NODE	420:25	420:25	12	tif
LEAF_NODE	420:28	420:28	12	->
LEAF_NODE	420:30	420:30	12	tif_fields
LEAF_NODE	420:40	420:40	12	[
EXPR	420:41	420:41	12	i
FIELD	420:41	420:41	13	i
LEAF_NODE	420:41	420:41	14	i
LEAF_NODE	420:42	420:42	12	]
LEAF_NODE	420:43	420:43	7	;
EXPR_STATEMENT	421:2	430:3	6	fprintf ( fd , "field[%2d] %5lu, %2d, %2d, %d, %2d, %5s, %5s, %s\n" , ( int ) i , ( unsigned long ) fip -> field_tag , fip -> field_readcount , fip -> field_writecount , fip -> field_type , fip -> field_bit , fip -> field_oktochange ? "TRUE" : "FALSE" , fip -> field_passcount ? "TRUE" : "FALSE" , fip -> field_name ) ;
EXPR	421:2	421:2	7	fprintf ( fd , "field[%2d] %5lu, %2d, %2d, %d, %2d, %5s, %5s, %s\n" , ( int ) i , ( unsigned long ) fip -> field_tag , fip -> field_readcount , fip -> field_writecount , fip -> field_type , fip -> field_bit , fip -> field_oktochange ? "TRUE" : "FALSE" , fip -> field_passcount ? "TRUE" : "FALSE" , fip -> field_name )
FUNCTION_CALL	421:2	430:2	8	fprintf ( fd , "field[%2d] %5lu, %2d, %2d, %d, %2d, %5s, %5s, %s\n" , ( int ) i , ( unsigned long ) fip -> field_tag , fip -> field_readcount , fip -> field_writecount , fip -> field_type , fip -> field_bit , fip -> field_oktochange ? "TRUE" : "FALSE" , fip -> field_passcount ? "TRUE" : "FALSE" , fip -> field_name )
CALLEE	421:2	421:2	9	fprintf
LEAF_NODE	421:2	421:2	10	fprintf
LEAF_NODE	421:9	421:9	9	(
ARGUMENT	421:10	421:10	9	fd
FIELD	421:10	421:10	10	fd
LEAF_NODE	421:10	421:10	11	fd
LEAF_NODE	421:12	421:12	9	,
ARGUMENT	421:14	421:14	9	"field[%2d] %5lu, %2d, %2d, %d, %2d, %5s, %5s, %s\n"
FIELD	421:14	421:14	10	"field[%2d] %5lu, %2d, %2d, %d, %2d, %5s, %5s, %s\n"
LEAF_NODE	421:14	421:14	11	"field[%2d] %5lu, %2d, %2d, %d, %2d, %5s, %5s, %s\n"
LEAF_NODE	422:3	422:3	9	,
ARGUMENT	422:5	422:10	9	( int ) i
LEAF_NODE	422:5	422:5	10	(
TYPE_NAME	422:6	422:6	10	int
LEAF_NODE	422:6	422:6	11	int
LEAF_NODE	422:9	422:9	10	)
FIELD	422:10	422:10	10	i
LEAF_NODE	422:10	422:10	11	i
LEAF_NODE	423:3	423:3	9	,
ARGUMENT	423:5	423:21	9	( unsigned long ) fip -> field_tag
LEAF_NODE	423:5	423:5	10	(
TYPE_NAME	423:6	423:15	10	unsigned long
LEAF_NODE	423:6	423:6	11	unsigned
LEAF_NODE	423:15	423:15	11	long
LEAF_NODE	423:19	423:19	10	)
FIELD	423:21	423:26	10	fip -> field_tag
LEAF_NODE	423:21	423:21	11	fip
LEAF_NODE	423:24	423:24	11	->
LEAF_NODE	423:26	423:26	11	field_tag
LEAF_NODE	424:3	424:3	9	,
ARGUMENT	424:5	424:5	9	fip -> field_readcount
FIELD	424:5	424:10	10	fip -> field_readcount
LEAF_NODE	424:5	424:5	11	fip
LEAF_NODE	424:8	424:8	11	->
LEAF_NODE	424:10	424:10	11	field_readcount
LEAF_NODE	424:25	424:25	9	,
ARGUMENT	424:27	424:27	9	fip -> field_writecount
FIELD	424:27	424:32	10	fip -> field_writecount
LEAF_NODE	424:27	424:27	11	fip
LEAF_NODE	424:30	424:30	11	->
LEAF_NODE	424:32	424:32	11	field_writecount
LEAF_NODE	425:3	425:3	9	,
ARGUMENT	425:5	425:5	9	fip -> field_type
FIELD	425:5	425:10	10	fip -> field_type
LEAF_NODE	425:5	425:5	11	fip
LEAF_NODE	425:8	425:8	11	->
LEAF_NODE	425:10	425:10	11	field_type
LEAF_NODE	426:3	426:3	9	,
ARGUMENT	426:5	426:5	9	fip -> field_bit
FIELD	426:5	426:10	10	fip -> field_bit
LEAF_NODE	426:5	426:5	11	fip
LEAF_NODE	426:8	426:8	11	->
LEAF_NODE	426:10	426:10	11	field_bit
LEAF_NODE	427:3	427:3	9	,
ARGUMENT	427:5	427:5	9	fip -> field_oktochange ? "TRUE" : "FALSE"
COND_EXPR	427:5	427:38	10	fip -> field_oktochange ? "TRUE" : "FALSE"
CONDITION	427:5	427:5	11	fip -> field_oktochange
FIELD	427:5	427:10	12	fip -> field_oktochange
LEAF_NODE	427:5	427:5	13	fip
LEAF_NODE	427:8	427:8	13	->
LEAF_NODE	427:10	427:10	13	field_oktochange
LEAF_NODE	427:27	427:27	11	?
EXPR	427:29	427:29	11	"TRUE"
FIELD	427:29	427:29	12	"TRUE"
LEAF_NODE	427:29	427:29	13	"TRUE"
LEAF_NODE	427:36	427:36	11	:
FIELD	427:38	427:38	11	"FALSE"
LEAF_NODE	427:38	427:38	12	"FALSE"
LEAF_NODE	428:3	428:3	9	,
ARGUMENT	428:5	428:5	9	fip -> field_passcount ? "TRUE" : "FALSE"
COND_EXPR	428:5	428:37	10	fip -> field_passcount ? "TRUE" : "FALSE"
CONDITION	428:5	428:5	11	fip -> field_passcount
FIELD	428:5	428:10	12	fip -> field_passcount
LEAF_NODE	428:5	428:5	13	fip
LEAF_NODE	428:8	428:8	13	->
LEAF_NODE	428:10	428:10	13	field_passcount
LEAF_NODE	428:26	428:26	11	?
EXPR	428:28	428:28	11	"TRUE"
FIELD	428:28	428:28	12	"TRUE"
LEAF_NODE	428:28	428:28	13	"TRUE"
LEAF_NODE	428:35	428:35	11	:
FIELD	428:37	428:37	11	"FALSE"
LEAF_NODE	428:37	428:37	12	"FALSE"
LEAF_NODE	429:3	429:3	9	,
ARGUMENT	429:5	429:5	9	fip -> field_name
FIELD	429:5	429:10	10	fip -> field_name
LEAF_NODE	429:5	429:5	11	fip
LEAF_NODE	429:8	429:8	11	->
LEAF_NODE	429:10	429:10	11	field_name
LEAF_NODE	430:2	430:2	9	)
LEAF_NODE	430:3	430:3	7	;
LEAF_NODE	431:1	431:1	5	}
LEAF_NODE	432:0	432:0	2	}
FUNCTION_DEF	437:0	466:0	1	
RETURN_TYPE	437:0	437:0	2	int
TYPE_NAME	437:0	437:0	3	int
LEAF_NODE	437:0	437:0	4	int
FUNCTION_NAME	438:0	438:0	2	TIFFDataWidth
LEAF_NODE	438:0	438:0	3	TIFFDataWidth
PARAMETER_LIST	438:13	438:31	2	( TIFFDataType type )
LEAF_NODE	438:13	438:13	3	(
PARAMETER_DECL	438:14	438:27	3	TIFFDataType type
TYPE	438:14	438:14	4	TIFFDataType
TYPE_NAME	438:14	438:14	5	TIFFDataType
LEAF_NODE	438:14	438:14	6	TIFFDataType
NAME	438:27	438:27	4	type
LEAF_NODE	438:27	438:27	5	type
LEAF_NODE	438:31	438:31	3	)
LEAF_NODE	439:0	439:0	2	{
STATEMENTS	440:1	440:1	2	
SELECTION	440:1	441:1	3	
KEYWORD	440:1	440:1	4	switch
LEAF_NODE	440:1	440:1	5	switch
LEAF_NODE	440:7	440:7	4	(
CONDITION	440:8	440:8	4	type
EXPR	440:8	440:8	5	type
FIELD	440:8	440:8	6	type
LEAF_NODE	440:8	440:8	7	type
LEAF_NODE	440:12	440:12	4	)
STATEMENTS	441:1	465:1	4	
LEAF_NODE	441:1	441:1	5	{
STATEMENTS	442:2	464:3	5	
LABEL	442:2	442:8	6	case 0 :
LEAF_NODE	442:2	442:2	7	case
LEAF_NODE	442:7	442:7	7	0
LEAF_NODE	442:8	442:8	7	:
LABEL	443:2	443:16	6	case TIFF_BYTE :
LEAF_NODE	443:2	443:2	7	case
LEAF_NODE	443:7	443:7	7	TIFF_BYTE
LEAF_NODE	443:16	443:16	7	:
LABEL	444:2	444:17	6	case TIFF_ASCII :
LEAF_NODE	444:2	444:2	7	case
LEAF_NODE	444:7	444:7	7	TIFF_ASCII
LEAF_NODE	444:17	444:17	7	:
LABEL	445:2	445:17	6	case TIFF_SBYTE :
LEAF_NODE	445:2	445:2	7	case
LEAF_NODE	445:7	445:7	7	TIFF_SBYTE
LEAF_NODE	445:17	445:17	7	:
LABEL	446:2	446:21	6	case TIFF_UNDEFINED :
LEAF_NODE	446:2	446:2	7	case
LEAF_NODE	446:7	446:7	7	TIFF_UNDEFINED
LEAF_NODE	446:21	446:21	7	:
JUMP_STATEMENT	447:3	447:11	6	return 1 ;
KEYWORD	447:3	447:3	7	return
LEAF_NODE	447:3	447:3	8	return
DESTINATION	447:10	447:10	7	1
EXPR	447:10	447:10	8	1
FIELD	447:10	447:10	9	1
LEAF_NODE	447:10	447:10	10	1
LEAF_NODE	447:11	447:11	7	;
LABEL	448:2	448:17	6	case TIFF_SHORT :
LEAF_NODE	448:2	448:2	7	case
LEAF_NODE	448:7	448:7	7	TIFF_SHORT
LEAF_NODE	448:17	448:17	7	:
LABEL	449:2	449:18	6	case TIFF_SSHORT :
LEAF_NODE	449:2	449:2	7	case
LEAF_NODE	449:7	449:7	7	TIFF_SSHORT
LEAF_NODE	449:18	449:18	7	:
JUMP_STATEMENT	450:3	450:11	6	return 2 ;
KEYWORD	450:3	450:3	7	return
LEAF_NODE	450:3	450:3	8	return
DESTINATION	450:10	450:10	7	2
EXPR	450:10	450:10	8	2
FIELD	450:10	450:10	9	2
LEAF_NODE	450:10	450:10	10	2
LEAF_NODE	450:11	450:11	7	;
LABEL	451:2	451:16	6	case TIFF_LONG :
LEAF_NODE	451:2	451:2	7	case
LEAF_NODE	451:7	451:7	7	TIFF_LONG
LEAF_NODE	451:16	451:16	7	:
LABEL	452:2	452:17	6	case TIFF_SLONG :
LEAF_NODE	452:2	452:2	7	case
LEAF_NODE	452:7	452:7	7	TIFF_SLONG
LEAF_NODE	452:17	452:17	7	:
LABEL	453:2	453:17	6	case TIFF_FLOAT :
LEAF_NODE	453:2	453:2	7	case
LEAF_NODE	453:7	453:7	7	TIFF_FLOAT
LEAF_NODE	453:17	453:17	7	:
LABEL	454:2	454:15	6	case TIFF_IFD :
LEAF_NODE	454:2	454:2	7	case
LEAF_NODE	454:7	454:7	7	TIFF_IFD
LEAF_NODE	454:15	454:15	7	:
JUMP_STATEMENT	455:3	455:11	6	return 4 ;
KEYWORD	455:3	455:3	7	return
LEAF_NODE	455:3	455:3	8	return
DESTINATION	455:10	455:10	7	4
EXPR	455:10	455:10	8	4
FIELD	455:10	455:10	9	4
LEAF_NODE	455:10	455:10	10	4
LEAF_NODE	455:11	455:11	7	;
LABEL	456:2	456:20	6	case TIFF_RATIONAL :
LEAF_NODE	456:2	456:2	7	case
LEAF_NODE	456:7	456:7	7	TIFF_RATIONAL
LEAF_NODE	456:20	456:20	7	:
LABEL	457:2	457:21	6	case TIFF_SRATIONAL :
LEAF_NODE	457:2	457:2	7	case
LEAF_NODE	457:7	457:7	7	TIFF_SRATIONAL
LEAF_NODE	457:21	457:21	7	:
LABEL	458:2	458:18	6	case TIFF_DOUBLE :
LEAF_NODE	458:2	458:2	7	case
LEAF_NODE	458:7	458:7	7	TIFF_DOUBLE
LEAF_NODE	458:18	458:18	7	:
LABEL	459:2	459:17	6	case TIFF_LONG8 :
LEAF_NODE	459:2	459:2	7	case
LEAF_NODE	459:7	459:7	7	TIFF_LONG8
LEAF_NODE	459:17	459:17	7	:
LABEL	460:2	460:18	6	case TIFF_SLONG8 :
LEAF_NODE	460:2	460:2	7	case
LEAF_NODE	460:7	460:7	7	TIFF_SLONG8
LEAF_NODE	460:18	460:18	7	:
LABEL	461:2	461:16	6	case TIFF_IFD8 :
LEAF_NODE	461:2	461:2	7	case
LEAF_NODE	461:7	461:7	7	TIFF_IFD8
LEAF_NODE	461:16	461:16	7	:
JUMP_STATEMENT	462:3	462:11	6	return 8 ;
KEYWORD	462:3	462:3	7	return
LEAF_NODE	462:3	462:3	8	return
DESTINATION	462:10	462:10	7	8
EXPR	462:10	462:10	8	8
FIELD	462:10	462:10	9	8
LEAF_NODE	462:10	462:10	10	8
LEAF_NODE	462:11	462:11	7	;
LABEL	463:2	463:9	6	default :
LEAF_NODE	463:2	463:2	7	default
LEAF_NODE	463:9	463:9	7	:
JUMP_STATEMENT	464:3	464:11	6	return 0 ;
KEYWORD	464:3	464:3	7	return
LEAF_NODE	464:3	464:3	8	return
DESTINATION	464:10	464:10	7	0
EXPR	464:10	464:10	8	0
FIELD	464:10	464:10	9	0
LEAF_NODE	464:10	464:10	10	0
LEAF_NODE	464:11	464:11	7	;
LEAF_NODE	465:1	465:1	5	}
LEAF_NODE	466:0	466:0	2	}
FUNCTION_DEF	475:0	503:0	1	
RETURN_TYPE	475:0	475:0	2	int
TYPE_NAME	475:0	475:0	3	int
LEAF_NODE	475:0	475:0	4	int
FUNCTION_NAME	476:0	476:0	2	_TIFFDataSize
LEAF_NODE	476:0	476:0	3	_TIFFDataSize
PARAMETER_LIST	476:13	476:31	2	( TIFFDataType type )
LEAF_NODE	476:13	476:13	3	(
PARAMETER_DECL	476:14	476:27	3	TIFFDataType type
TYPE	476:14	476:14	4	TIFFDataType
TYPE_NAME	476:14	476:14	5	TIFFDataType
LEAF_NODE	476:14	476:14	6	TIFFDataType
NAME	476:27	476:27	4	type
LEAF_NODE	476:27	476:27	5	type
LEAF_NODE	476:31	476:31	3	)
LEAF_NODE	477:0	477:0	2	{
STATEMENTS	478:1	478:1	2	
SELECTION	478:1	479:1	3	
KEYWORD	478:1	478:1	4	switch
LEAF_NODE	478:1	478:1	5	switch
LEAF_NODE	478:8	478:8	4	(
CONDITION	478:9	478:9	4	type
EXPR	478:9	478:9	5	type
FIELD	478:9	478:9	6	type
LEAF_NODE	478:9	478:9	7	type
LEAF_NODE	478:13	478:13	4	)
STATEMENTS	479:1	502:1	4	
LEAF_NODE	479:1	479:1	5	{
STATEMENTS	480:2	501:6	5	
LABEL	480:2	480:16	6	case TIFF_BYTE :
LEAF_NODE	480:2	480:2	7	case
LEAF_NODE	480:7	480:7	7	TIFF_BYTE
LEAF_NODE	480:16	480:16	7	:
LABEL	481:2	481:17	6	case TIFF_SBYTE :
LEAF_NODE	481:2	481:2	7	case
LEAF_NODE	481:7	481:7	7	TIFF_SBYTE
LEAF_NODE	481:17	481:17	7	:
LABEL	482:2	482:17	6	case TIFF_ASCII :
LEAF_NODE	482:2	482:2	7	case
LEAF_NODE	482:7	482:7	7	TIFF_ASCII
LEAF_NODE	482:17	482:17	7	:
LABEL	483:2	483:21	6	case TIFF_UNDEFINED :
LEAF_NODE	483:2	483:2	7	case
LEAF_NODE	483:7	483:7	7	TIFF_UNDEFINED
LEAF_NODE	483:21	483:21	7	:
JUMP_STATEMENT	484:6	484:14	6	return 1 ;
KEYWORD	484:6	484:6	7	return
LEAF_NODE	484:6	484:6	8	return
DESTINATION	484:13	484:13	7	1
EXPR	484:13	484:13	8	1
FIELD	484:13	484:13	9	1
LEAF_NODE	484:13	484:13	10	1
LEAF_NODE	484:14	484:14	7	;
LABEL	485:2	485:17	6	case TIFF_SHORT :
LEAF_NODE	485:2	485:2	7	case
LEAF_NODE	485:7	485:7	7	TIFF_SHORT
LEAF_NODE	485:17	485:17	7	:
LABEL	486:2	486:18	6	case TIFF_SSHORT :
LEAF_NODE	486:2	486:2	7	case
LEAF_NODE	486:7	486:7	7	TIFF_SSHORT
LEAF_NODE	486:18	486:18	7	:
JUMP_STATEMENT	487:6	487:14	6	return 2 ;
KEYWORD	487:6	487:6	7	return
LEAF_NODE	487:6	487:6	8	return
DESTINATION	487:13	487:13	7	2
EXPR	487:13	487:13	8	2
FIELD	487:13	487:13	9	2
LEAF_NODE	487:13	487:13	10	2
LEAF_NODE	487:14	487:14	7	;
LABEL	488:2	488:16	6	case TIFF_LONG :
LEAF_NODE	488:2	488:2	7	case
LEAF_NODE	488:7	488:7	7	TIFF_LONG
LEAF_NODE	488:16	488:16	7	:
LABEL	489:2	489:17	6	case TIFF_SLONG :
LEAF_NODE	489:2	489:2	7	case
LEAF_NODE	489:7	489:7	7	TIFF_SLONG
LEAF_NODE	489:17	489:17	7	:
LABEL	490:2	490:17	6	case TIFF_FLOAT :
LEAF_NODE	490:2	490:2	7	case
LEAF_NODE	490:7	490:7	7	TIFF_FLOAT
LEAF_NODE	490:17	490:17	7	:
LABEL	491:2	491:15	6	case TIFF_IFD :
LEAF_NODE	491:2	491:2	7	case
LEAF_NODE	491:7	491:7	7	TIFF_IFD
LEAF_NODE	491:15	491:15	7	:
LABEL	492:2	492:20	6	case TIFF_RATIONAL :
LEAF_NODE	492:2	492:2	7	case
LEAF_NODE	492:7	492:7	7	TIFF_RATIONAL
LEAF_NODE	492:20	492:20	7	:
LABEL	493:2	493:21	6	case TIFF_SRATIONAL :
LEAF_NODE	493:2	493:2	7	case
LEAF_NODE	493:7	493:7	7	TIFF_SRATIONAL
LEAF_NODE	493:21	493:21	7	:
JUMP_STATEMENT	494:6	494:14	6	return 4 ;
KEYWORD	494:6	494:6	7	return
LEAF_NODE	494:6	494:6	8	return
DESTINATION	494:13	494:13	7	4
EXPR	494:13	494:13	8	4
FIELD	494:13	494:13	9	4
LEAF_NODE	494:13	494:13	10	4
LEAF_NODE	494:14	494:14	7	;
LABEL	495:2	495:18	6	case TIFF_DOUBLE :
LEAF_NODE	495:2	495:2	7	case
LEAF_NODE	495:7	495:7	7	TIFF_DOUBLE
LEAF_NODE	495:18	495:18	7	:
LABEL	496:2	496:17	6	case TIFF_LONG8 :
LEAF_NODE	496:2	496:2	7	case
LEAF_NODE	496:7	496:7	7	TIFF_LONG8
LEAF_NODE	496:17	496:17	7	:
LABEL	497:2	497:18	6	case TIFF_SLONG8 :
LEAF_NODE	497:2	497:2	7	case
LEAF_NODE	497:7	497:7	7	TIFF_SLONG8
LEAF_NODE	497:18	497:18	7	:
LABEL	498:2	498:16	6	case TIFF_IFD8 :
LEAF_NODE	498:2	498:2	7	case
LEAF_NODE	498:7	498:7	7	TIFF_IFD8
LEAF_NODE	498:16	498:16	7	:
JUMP_STATEMENT	499:6	499:14	6	return 8 ;
KEYWORD	499:6	499:6	7	return
LEAF_NODE	499:6	499:6	8	return
DESTINATION	499:13	499:13	7	8
EXPR	499:13	499:13	8	8
FIELD	499:13	499:13	9	8
LEAF_NODE	499:13	499:13	10	8
LEAF_NODE	499:14	499:14	7	;
LABEL	500:2	500:9	6	default :
LEAF_NODE	500:2	500:2	7	default
LEAF_NODE	500:9	500:9	7	:
JUMP_STATEMENT	501:6	501:14	6	return 0 ;
KEYWORD	501:6	501:6	7	return
LEAF_NODE	501:6	501:6	8	return
DESTINATION	501:13	501:13	7	0
EXPR	501:13	501:13	8	0
FIELD	501:13	501:13	9	0
LEAF_NODE	501:13	501:13	10	0
LEAF_NODE	501:14	501:14	7	;
LEAF_NODE	502:1	502:1	5	}
LEAF_NODE	503:0	503:0	2	}
FUNCTION_DEF	505:0	528:0	1	
RETURN_TYPE	505:0	505:15	2	const TIFFField *
TYPE_NAME	505:0	505:6	3	const TIFFField
LEAF_NODE	505:0	505:0	4	const
LEAF_NODE	505:6	505:6	4	TIFFField
LEAF_NODE	505:15	505:15	3	*
FUNCTION_NAME	506:0	506:0	2	TIFFFindField
LEAF_NODE	506:0	506:0	3	TIFFFindField
PARAMETER_LIST	506:13	506:52	2	( TIFF * tif , uint32 tag , TIFFDataType dt )
LEAF_NODE	506:13	506:13	3	(
PARAMETER_DECL	506:14	506:20	3	TIFF * tif
TYPE	506:14	506:18	4	TIFF *
TYPE_NAME	506:14	506:14	5	TIFF
LEAF_NODE	506:14	506:14	6	TIFF
POINTER	506:18	506:18	5	*
LEAF_NODE	506:18	506:18	6	*
NAME	506:20	506:20	4	tif
LEAF_NODE	506:20	506:20	5	tif
LEAF_NODE	506:23	506:23	3	,
PARAMETER_DECL	506:25	506:32	3	uint32 tag
TYPE	506:25	506:25	4	uint32
TYPE_NAME	506:25	506:25	5	uint32
LEAF_NODE	506:25	506:25	6	uint32
NAME	506:32	506:32	4	tag
LEAF_NODE	506:32	506:32	5	tag
LEAF_NODE	506:35	506:35	3	,
PARAMETER_DECL	506:37	506:50	3	TIFFDataType dt
TYPE	506:37	506:37	4	TIFFDataType
TYPE_NAME	506:37	506:37	5	TIFFDataType
LEAF_NODE	506:37	506:37	6	TIFFDataType
NAME	506:50	506:50	4	dt
LEAF_NODE	506:50	506:50	5	dt
LEAF_NODE	506:52	506:52	3	)
LEAF_NODE	507:0	507:0	2	{
STATEMENTS	508:1	527:1	2	
LEAF_NODE	508:1	508:1	3	TIFFField
LEAF_NODE	508:11	508:11	3	key
LEAF_NODE	508:15	508:15	3	=
LEAF_NODE	508:17	508:17	3	{
STATEMENTS	508:18	508:64	3	
LEAF_NODE	508:18	508:18	4	0
LEAF_NODE	508:19	508:19	4	,
LEAF_NODE	508:21	508:21	4	0
LEAF_NODE	508:22	508:22	4	,
LEAF_NODE	508:24	508:24	4	0
LEAF_NODE	508:25	508:25	4	,
LEAF_NODE	508:27	508:27	4	TIFF_NOTYPE
LEAF_NODE	508:38	508:38	4	,
LEAF_NODE	508:40	508:40	4	0
LEAF_NODE	508:41	508:41	4	,
LEAF_NODE	508:43	508:43	4	0
LEAF_NODE	508:44	508:44	4	,
LEAF_NODE	508:46	508:46	4	0
LEAF_NODE	508:47	508:47	4	,
LEAF_NODE	508:49	508:49	4	0
LEAF_NODE	508:50	508:50	4	,
LEAF_NODE	508:52	508:52	4	0
LEAF_NODE	508:53	508:53	4	,
LEAF_NODE	508:55	508:55	4	0
LEAF_NODE	508:56	508:56	4	,
LEAF_NODE	508:58	508:58	4	NULL
LEAF_NODE	508:62	508:62	4	,
LEAF_NODE	508:64	508:64	4	NULL
LEAF_NODE	508:68	508:68	3	}
LEAF_NODE	508:69	508:69	3	;
SIMPLE_DECL	509:1	509:23	3	TIFFField * pkey ; pkey = & key ;
VAR_DECL	509:1	509:12	4	TIFFField * pkey ; pkey = & key
TYPE	509:1	509:10	5	TIFFField *
TYPE_NAME	509:1	509:1	6	TIFFField
LEAF_NODE	509:1	509:1	7	TIFFField
POINTER	509:10	509:10	6	*
LEAF_NODE	509:10	509:10	7	*
NAME	509:12	509:12	5	pkey
LEAF_NODE	509:12	509:12	6	pkey
LEAF_NODE	0:0	0:0	5	;
INIT	509:12	509:12	5	pkey = & key
ASSIGN	509:12	509:19	6	pkey = & key
LVAL	509:12	509:12	7	pkey
NAME	509:12	509:12	8	pkey
LEAF_NODE	509:12	509:12	9	pkey
ASSIGN_OP	509:17	509:17	7	=
LEAF_NODE	509:17	509:17	8	=
RVAL	509:19	509:19	7	& key
UNARY_EXPR	509:19	509:20	8	& key
UNARY_OPERATOR	509:19	509:19	9	&
LEAF_NODE	509:19	509:19	10	&
FIELD	509:20	509:20	9	key
LEAF_NODE	509:20	509:20	10	key
LEAF_NODE	509:23	509:23	4	;
SIMPLE_DECL	510:1	510:22	3	const TIFFField * ret ;
VAR_DECL	510:1	510:19	4	const TIFFField * ret
TYPE	510:1	510:18	5	const TIFFField *
TYPE_NAME	510:1	510:7	6	const TIFFField
LEAF_NODE	510:1	510:1	7	const
LEAF_NODE	510:7	510:7	7	TIFFField
POINTER	510:18	510:18	6	*
LEAF_NODE	510:18	510:18	7	*
NAME	510:19	510:19	5	ret
LEAF_NODE	510:19	510:19	6	ret
LEAF_NODE	510:22	510:22	4	;
SELECTION	511:1	513:2	3	
KEYWORD	511:1	511:1	4	if
LEAF_NODE	511:1	511:1	5	if
LEAF_NODE	511:4	511:4	4	(
CONDITION	511:5	511:5	4	tif -> tif_foundfield && tif -> tif_foundfield -> field_tag == tag && ( dt == TIFF_ANY || dt == tif -> tif_foundfield -> field_type )
EXPR	511:5	511:5	5	tif -> tif_foundfield && tif -> tif_foundfield -> field_tag == tag && ( dt == TIFF_ANY || dt == tif -> tif_foundfield -> field_type )
AND	511:5	511:28	6	tif -> tif_foundfield && tif -> tif_foundfield -> field_tag == tag && ( dt == TIFF_ANY || dt == tif -> tif_foundfield -> field_type )
EXPR	511:5	511:5	7	tif -> tif_foundfield
FIELD	511:5	511:10	8	tif -> tif_foundfield
LEAF_NODE	511:5	511:5	9	tif
LEAF_NODE	511:8	511:8	9	->
LEAF_NODE	511:10	511:10	9	tif_foundfield
LEAF_NODE	511:25	511:25	7	&&
EXPR	511:28	511:28	7	tif -> tif_foundfield -> field_tag == tag && ( dt == TIFF_ANY || dt == tif -> tif_foundfield -> field_type )
AND	511:28	512:5	8	tif -> tif_foundfield -> field_tag == tag && ( dt == TIFF_ANY || dt == tif -> tif_foundfield -> field_type )
EXPR	511:28	511:62	9	tif -> tif_foundfield -> field_tag == tag
FIELD	511:28	511:49	10	tif -> tif_foundfield -> field_tag
LEAF_NODE	511:28	511:28	11	tif
LEAF_NODE	511:31	511:31	11	->
LEAF_NODE	511:33	511:33	11	tif_foundfield
LEAF_NODE	511:47	511:47	11	->
LEAF_NODE	511:49	511:49	11	field_tag
EQ_OPERATOR	511:59	511:59	10	==
LEAF_NODE	511:59	511:59	11	==
FIELD	511:62	511:62	10	tag
LEAF_NODE	511:62	511:62	11	tag
LEAF_NODE	511:66	511:66	9	&&
EXPR	512:5	512:61	9	( dt == TIFF_ANY || dt == tif -> tif_foundfield -> field_type )
LEAF_NODE	512:5	512:5	10	(
OR	512:6	512:24	10	dt == TIFF_ANY || dt == tif -> tif_foundfield -> field_type
EXPR	512:6	512:12	11	dt == TIFF_ANY
FIELD	512:6	512:6	12	dt
LEAF_NODE	512:6	512:6	13	dt
EQ_OPERATOR	512:9	512:9	12	==
LEAF_NODE	512:9	512:9	13	==
FIELD	512:12	512:12	12	TIFF_ANY
LEAF_NODE	512:12	512:12	13	TIFF_ANY
LEAF_NODE	512:21	512:21	11	||
EXPR	512:24	512:30	11	dt == tif -> tif_foundfield -> field_type
FIELD	512:24	512:24	12	dt
LEAF_NODE	512:24	512:24	13	dt
EQ_OPERATOR	512:27	512:27	12	==
LEAF_NODE	512:27	512:27	13	==
FIELD	512:30	512:51	12	tif -> tif_foundfield -> field_type
LEAF_NODE	512:30	512:30	13	tif
LEAF_NODE	512:33	512:33	13	->
LEAF_NODE	512:35	512:35	13	tif_foundfield
LEAF_NODE	512:49	512:49	13	->
LEAF_NODE	512:51	512:51	13	field_type
LEAF_NODE	512:61	512:61	10	)
LEAF_NODE	512:62	512:62	4	)
STATEMENTS	513:2	513:2	4	
JUMP_STATEMENT	513:2	513:28	5	return tif -> tif_foundfield ;
KEYWORD	513:2	513:2	6	return
LEAF_NODE	513:2	513:2	7	return
DESTINATION	513:9	513:9	6	tif -> tif_foundfield
EXPR	513:9	513:9	7	tif -> tif_foundfield
FIELD	513:9	513:14	8	tif -> tif_foundfield
LEAF_NODE	513:9	513:9	9	tif
LEAF_NODE	513:12	513:12	9	->
LEAF_NODE	513:14	513:14	9	tif_foundfield
LEAF_NODE	513:28	513:28	6	;
SELECTION	516:1	517:2	3	
KEYWORD	516:1	516:1	4	if
LEAF_NODE	516:1	516:1	5	if
LEAF_NODE	516:4	516:4	4	(
CONDITION	516:5	516:5	4	! tif -> tif_fields
EXPR	516:5	516:5	5	! tif -> tif_fields
UNARY_EXPR	516:5	516:6	6	! tif -> tif_fields
UNARY_OPERATOR	516:5	516:5	7	!
LEAF_NODE	516:5	516:5	8	!
FIELD	516:6	516:11	7	tif -> tif_fields
LEAF_NODE	516:6	516:6	8	tif
LEAF_NODE	516:9	516:9	8	->
LEAF_NODE	516:11	516:11	8	tif_fields
LEAF_NODE	516:21	516:21	4	)
STATEMENTS	517:2	517:2	4	
JUMP_STATEMENT	517:2	517:13	5	return NULL ;
KEYWORD	517:2	517:2	6	return
LEAF_NODE	517:2	517:2	7	return
DESTINATION	517:9	517:9	6	NULL
EXPR	517:9	517:9	7	NULL
FIELD	517:9	517:9	8	NULL
LEAF_NODE	517:9	517:9	9	NULL
LEAF_NODE	517:13	517:13	6	;
EXPR_STATEMENT	521:1	521:20	3	key . field_tag = tag ;
EXPR	521:1	521:1	4	key . field_tag = tag
ASSIGN	521:1	521:17	5	key . field_tag = tag
LVAL	521:1	521:1	6	key . field_tag
FIELD	521:1	521:5	7	key . field_tag
LEAF_NODE	521:1	521:1	8	key
LEAF_NODE	521:4	521:4	8	.
LEAF_NODE	521:5	521:5	8	field_tag
ASSIGN_OP	521:15	521:15	6	=
LEAF_NODE	521:15	521:15	7	=
RVAL	521:17	521:17	6	tag
FIELD	521:17	521:17	7	tag
LEAF_NODE	521:17	521:17	8	tag
LEAF_NODE	521:20	521:20	4	;
EXPR_STATEMENT	522:1	522:20	3	key . field_type = dt ;
EXPR	522:1	522:1	4	key . field_type = dt
ASSIGN	522:1	522:18	5	key . field_type = dt
LVAL	522:1	522:1	6	key . field_type
FIELD	522:1	522:5	7	key . field_type
LEAF_NODE	522:1	522:1	8	key
LEAF_NODE	522:4	522:4	8	.
LEAF_NODE	522:5	522:5	8	field_type
ASSIGN_OP	522:16	522:16	6	=
LEAF_NODE	522:16	522:16	7	=
RVAL	522:18	522:18	6	dt
FIELD	522:18	522:18	7	dt
LEAF_NODE	522:18	522:18	8	dt
LEAF_NODE	522:20	522:20	4	;
LEAF_NODE	524:1	524:1	3	ret
LEAF_NODE	524:5	524:5	3	=
LEAF_NODE	524:7	524:7	3	(
LEAF_NODE	524:8	524:8	3	const
LEAF_NODE	524:14	524:14	3	TIFFField
LEAF_NODE	524:24	524:24	3	*
LEAF_NODE	524:25	524:25	3	*
LEAF_NODE	524:26	524:26	3	)
LEAF_NODE	524:28	524:28	3	bsearch
LEAF_NODE	524:35	524:35	3	(
LEAF_NODE	524:36	524:36	3	&
LEAF_NODE	524:37	524:37	3	pkey
LEAF_NODE	524:41	524:41	3	,
LEAF_NODE	524:43	524:43	3	tif
LEAF_NODE	524:46	524:46	3	->
LEAF_NODE	524:48	524:48	3	tif_fields
LEAF_NODE	524:58	524:58	3	,
LEAF_NODE	525:8	525:8	3	tif
LEAF_NODE	525:11	525:11	3	->
LEAF_NODE	525:13	525:13	3	tif_nfields
LEAF_NODE	525:24	525:24	3	,
LEAF_NODE	526:8	526:8	3	sizeof
LEAF_NODE	526:14	526:14	3	(
LEAF_NODE	526:15	526:15	3	TIFFField
LEAF_NODE	526:25	526:25	3	*
LEAF_NODE	526:26	526:26	3	)
LEAF_NODE	526:27	526:27	3	,
LEAF_NODE	526:29	526:29	3	tagCompare
LEAF_NODE	526:39	526:39	3	)
LEAF_NODE	526:40	526:40	3	;
JUMP_STATEMENT	527:1	527:49	3	return tif -> tif_foundfield = ( ret ? * ret : NULL ) ;
KEYWORD	527:1	527:1	4	return
LEAF_NODE	527:1	527:1	5	return
DESTINATION	527:8	527:8	4	tif -> tif_foundfield = ( ret ? * ret : NULL )
EXPR	527:8	527:8	5	tif -> tif_foundfield = ( ret ? * ret : NULL )
ASSIGN	527:8	527:30	6	tif -> tif_foundfield = ( ret ? * ret : NULL )
LVAL	527:8	527:8	7	tif -> tif_foundfield
FIELD	527:8	527:13	8	tif -> tif_foundfield
LEAF_NODE	527:8	527:8	9	tif
LEAF_NODE	527:11	527:11	9	->
LEAF_NODE	527:13	527:13	9	tif_foundfield
ASSIGN_OP	527:28	527:28	7	=
LEAF_NODE	527:28	527:28	8	=
RVAL	527:30	527:48	7	( ret ? * ret : NULL )
LEAF_NODE	527:30	527:30	8	(
COND_EXPR	527:31	527:44	8	ret ? * ret : NULL
CONDITION	527:31	527:31	9	ret
FIELD	527:31	527:31	10	ret
LEAF_NODE	527:31	527:31	11	ret
LEAF_NODE	527:35	527:35	9	?
EXPR	527:37	527:37	9	* ret
UNARY_EXPR	527:37	527:38	10	* ret
UNARY_OPERATOR	527:37	527:37	11	*
LEAF_NODE	527:37	527:37	12	*
FIELD	527:38	527:38	11	ret
LEAF_NODE	527:38	527:38	12	ret
LEAF_NODE	527:42	527:42	9	:
FIELD	527:44	527:44	9	NULL
LEAF_NODE	527:44	527:44	10	NULL
LEAF_NODE	527:48	527:48	8	)
LEAF_NODE	527:49	527:49	4	;
LEAF_NODE	528:0	528:0	2	}
FUNCTION_DEF	530:0	555:0	1	
RETURN_TYPE	530:0	530:22	2	static const TIFFField *
LEAF_NODE	530:0	530:0	3	static
TYPE_NAME	530:7	530:13	3	const TIFFField
LEAF_NODE	530:7	530:7	4	const
LEAF_NODE	530:13	530:13	4	TIFFField
LEAF_NODE	530:22	530:22	3	*
FUNCTION_NAME	531:0	531:0	2	_TIFFFindFieldByName
LEAF_NODE	531:0	531:0	3	_TIFFFindFieldByName
PARAMETER_LIST	531:20	531:71	2	( TIFF * tif , const char * field_name , TIFFDataType dt )
LEAF_NODE	531:20	531:20	3	(
PARAMETER_DECL	531:21	531:27	3	TIFF * tif
TYPE	531:21	531:25	4	TIFF *
TYPE_NAME	531:21	531:21	5	TIFF
LEAF_NODE	531:21	531:21	6	TIFF
POINTER	531:25	531:25	5	*
LEAF_NODE	531:25	531:25	6	*
NAME	531:27	531:27	4	tif
LEAF_NODE	531:27	531:27	5	tif
LEAF_NODE	531:30	531:30	3	,
PARAMETER_DECL	531:32	531:44	3	const char * field_name
TYPE	531:32	531:43	4	const char *
TYPE_NAME	531:32	531:38	5	const char
LEAF_NODE	531:32	531:32	6	const
LEAF_NODE	531:38	531:38	6	char
POINTER	531:43	531:43	5	*
LEAF_NODE	531:43	531:43	6	*
NAME	531:44	531:44	4	field_name
LEAF_NODE	531:44	531:44	5	field_name
LEAF_NODE	531:54	531:54	3	,
PARAMETER_DECL	531:56	531:69	3	TIFFDataType dt
TYPE	531:56	531:56	4	TIFFDataType
TYPE_NAME	531:56	531:56	5	TIFFDataType
LEAF_NODE	531:56	531:56	6	TIFFDataType
NAME	531:69	531:69	4	dt
LEAF_NODE	531:69	531:69	5	dt
LEAF_NODE	531:71	531:71	3	)
LEAF_NODE	532:0	532:0	2	{
STATEMENTS	533:1	554:1	2	
LEAF_NODE	533:1	533:1	3	TIFFField
LEAF_NODE	533:11	533:11	3	key
LEAF_NODE	533:15	533:15	3	=
LEAF_NODE	533:17	533:17	3	{
STATEMENTS	533:18	533:64	3	
LEAF_NODE	533:18	533:18	4	0
LEAF_NODE	533:19	533:19	4	,
LEAF_NODE	533:21	533:21	4	0
LEAF_NODE	533:22	533:22	4	,
LEAF_NODE	533:24	533:24	4	0
LEAF_NODE	533:25	533:25	4	,
LEAF_NODE	533:27	533:27	4	TIFF_NOTYPE
LEAF_NODE	533:38	533:38	4	,
LEAF_NODE	533:40	533:40	4	0
LEAF_NODE	533:41	533:41	4	,
LEAF_NODE	533:43	533:43	4	0
LEAF_NODE	533:44	533:44	4	,
LEAF_NODE	533:46	533:46	4	0
LEAF_NODE	533:47	533:47	4	,
LEAF_NODE	533:49	533:49	4	0
LEAF_NODE	533:50	533:50	4	,
LEAF_NODE	533:52	533:52	4	0
LEAF_NODE	533:53	533:53	4	,
LEAF_NODE	533:55	533:55	4	0
LEAF_NODE	533:56	533:56	4	,
LEAF_NODE	533:58	533:58	4	NULL
LEAF_NODE	533:62	533:62	4	,
LEAF_NODE	533:64	533:64	4	NULL
LEAF_NODE	533:68	533:68	3	}
LEAF_NODE	533:69	533:69	3	;
SIMPLE_DECL	534:1	534:23	3	TIFFField * pkey ; pkey = & key ;
VAR_DECL	534:1	534:12	4	TIFFField * pkey ; pkey = & key
TYPE	534:1	534:10	5	TIFFField *
TYPE_NAME	534:1	534:1	6	TIFFField
LEAF_NODE	534:1	534:1	7	TIFFField
POINTER	534:10	534:10	6	*
LEAF_NODE	534:10	534:10	7	*
NAME	534:12	534:12	5	pkey
LEAF_NODE	534:12	534:12	6	pkey
LEAF_NODE	0:0	0:0	5	;
INIT	534:12	534:12	5	pkey = & key
ASSIGN	534:12	534:19	6	pkey = & key
LVAL	534:12	534:12	7	pkey
NAME	534:12	534:12	8	pkey
LEAF_NODE	534:12	534:12	9	pkey
ASSIGN_OP	534:17	534:17	7	=
LEAF_NODE	534:17	534:17	8	=
RVAL	534:19	534:19	7	& key
UNARY_EXPR	534:19	534:20	8	& key
UNARY_OPERATOR	534:19	534:19	9	&
LEAF_NODE	534:19	534:19	10	&
FIELD	534:20	534:20	9	key
LEAF_NODE	534:20	534:20	10	key
LEAF_NODE	534:23	534:23	4	;
SIMPLE_DECL	535:1	535:22	3	const TIFFField * ret ;
VAR_DECL	535:1	535:19	4	const TIFFField * ret
TYPE	535:1	535:18	5	const TIFFField *
TYPE_NAME	535:1	535:7	6	const TIFFField
LEAF_NODE	535:1	535:1	7	const
LEAF_NODE	535:7	535:7	7	TIFFField
POINTER	535:18	535:18	6	*
LEAF_NODE	535:18	535:18	7	*
NAME	535:19	535:19	5	ret
LEAF_NODE	535:19	535:19	6	ret
LEAF_NODE	535:22	535:22	4	;
SELECTION	536:1	539:2	3	
KEYWORD	536:1	536:1	4	if
LEAF_NODE	536:1	536:1	5	if
LEAF_NODE	536:4	536:4	4	(
CONDITION	536:5	536:5	4	tif -> tif_foundfield && streq ( tif -> tif_foundfield -> field_name , field_name ) && ( dt == TIFF_ANY || dt == tif -> tif_foundfield -> field_type )
EXPR	536:5	536:5	5	tif -> tif_foundfield && streq ( tif -> tif_foundfield -> field_name , field_name ) && ( dt == TIFF_ANY || dt == tif -> tif_foundfield -> field_type )
AND	536:5	537:8	6	tif -> tif_foundfield && streq ( tif -> tif_foundfield -> field_name , field_name ) && ( dt == TIFF_ANY || dt == tif -> tif_foundfield -> field_type )
EXPR	536:5	536:5	7	tif -> tif_foundfield
FIELD	536:5	536:10	8	tif -> tif_foundfield
LEAF_NODE	536:5	536:5	9	tif
LEAF_NODE	536:8	536:8	9	->
LEAF_NODE	536:10	536:10	9	tif_foundfield
LEAF_NODE	537:5	537:5	7	&&
EXPR	537:8	537:8	7	streq ( tif -> tif_foundfield -> field_name , field_name ) && ( dt == TIFF_ANY || dt == tif -> tif_foundfield -> field_type )
AND	537:8	538:8	8	streq ( tif -> tif_foundfield -> field_name , field_name ) && ( dt == TIFF_ANY || dt == tif -> tif_foundfield -> field_type )
EXPR	537:8	537:8	9	streq ( tif -> tif_foundfield -> field_name , field_name )
FUNCTION_CALL	537:8	537:57	10	streq ( tif -> tif_foundfield -> field_name , field_name )
CALLEE	537:8	537:8	11	streq
LEAF_NODE	537:8	537:8	12	streq
LEAF_NODE	537:13	537:13	11	(
ARGUMENT	537:14	537:14	11	tif -> tif_foundfield -> field_name
FIELD	537:14	537:35	12	tif -> tif_foundfield -> field_name
LEAF_NODE	537:14	537:14	13	tif
LEAF_NODE	537:17	537:17	13	->
LEAF_NODE	537:19	537:19	13	tif_foundfield
LEAF_NODE	537:33	537:33	13	->
LEAF_NODE	537:35	537:35	13	field_name
LEAF_NODE	537:45	537:45	11	,
ARGUMENT	537:47	537:47	11	field_name
FIELD	537:47	537:47	12	field_name
LEAF_NODE	537:47	537:47	13	field_name
LEAF_NODE	537:57	537:57	11	)
LEAF_NODE	538:5	538:5	9	&&
EXPR	538:8	538:64	9	( dt == TIFF_ANY || dt == tif -> tif_foundfield -> field_type )
LEAF_NODE	538:8	538:8	10	(
OR	538:9	538:27	10	dt == TIFF_ANY || dt == tif -> tif_foundfield -> field_type
EXPR	538:9	538:15	11	dt == TIFF_ANY
FIELD	538:9	538:9	12	dt
LEAF_NODE	538:9	538:9	13	dt
EQ_OPERATOR	538:12	538:12	12	==
LEAF_NODE	538:12	538:12	13	==
FIELD	538:15	538:15	12	TIFF_ANY
LEAF_NODE	538:15	538:15	13	TIFF_ANY
LEAF_NODE	538:24	538:24	11	||
EXPR	538:27	538:33	11	dt == tif -> tif_foundfield -> field_type
FIELD	538:27	538:27	12	dt
LEAF_NODE	538:27	538:27	13	dt
EQ_OPERATOR	538:30	538:30	12	==
LEAF_NODE	538:30	538:30	13	==
FIELD	538:33	538:54	12	tif -> tif_foundfield -> field_type
LEAF_NODE	538:33	538:33	13	tif
LEAF_NODE	538:36	538:36	13	->
LEAF_NODE	538:38	538:38	13	tif_foundfield
LEAF_NODE	538:52	538:52	13	->
LEAF_NODE	538:54	538:54	13	field_type
LEAF_NODE	538:64	538:64	10	)
LEAF_NODE	538:65	538:65	4	)
STATEMENTS	539:2	539:2	4	
JUMP_STATEMENT	539:2	539:30	5	return ( tif -> tif_foundfield ) ;
KEYWORD	539:2	539:2	6	return
LEAF_NODE	539:2	539:2	7	return
DESTINATION	539:9	539:9	6	( tif -> tif_foundfield )
EXPR	539:9	539:29	7	( tif -> tif_foundfield )
LEAF_NODE	539:9	539:9	8	(
FIELD	539:10	539:15	8	tif -> tif_foundfield
LEAF_NODE	539:10	539:10	9	tif
LEAF_NODE	539:13	539:13	9	->
LEAF_NODE	539:15	539:15	9	tif_foundfield
LEAF_NODE	539:29	539:29	8	)
LEAF_NODE	539:30	539:30	6	;
SELECTION	542:1	543:2	3	
KEYWORD	542:1	542:1	4	if
LEAF_NODE	542:1	542:1	5	if
LEAF_NODE	542:4	542:4	4	(
CONDITION	542:5	542:5	4	! tif -> tif_fields
EXPR	542:5	542:5	5	! tif -> tif_fields
UNARY_EXPR	542:5	542:6	6	! tif -> tif_fields
UNARY_OPERATOR	542:5	542:5	7	!
LEAF_NODE	542:5	542:5	8	!
FIELD	542:6	542:11	7	tif -> tif_fields
LEAF_NODE	542:6	542:6	8	tif
LEAF_NODE	542:9	542:9	8	->
LEAF_NODE	542:11	542:11	8	tif_fields
LEAF_NODE	542:21	542:21	4	)
STATEMENTS	543:2	543:2	4	
JUMP_STATEMENT	543:2	543:13	5	return NULL ;
KEYWORD	543:2	543:2	6	return
LEAF_NODE	543:2	543:2	7	return
DESTINATION	543:9	543:9	6	NULL
EXPR	543:9	543:9	7	NULL
FIELD	543:9	543:9	8	NULL
LEAF_NODE	543:9	543:9	9	NULL
LEAF_NODE	543:13	543:13	6	;
EXPR_STATEMENT	547:1	547:36	3	key . field_name = ( char * ) field_name ;
EXPR	547:1	547:1	4	key . field_name = ( char * ) field_name
ASSIGN	547:1	547:18	5	key . field_name = ( char * ) field_name
LVAL	547:1	547:1	6	key . field_name
FIELD	547:1	547:5	7	key . field_name
LEAF_NODE	547:1	547:1	8	key
LEAF_NODE	547:4	547:4	8	.
LEAF_NODE	547:5	547:5	8	field_name
ASSIGN_OP	547:16	547:16	6	=
LEAF_NODE	547:16	547:16	7	=
RVAL	547:18	547:26	6	( char * ) field_name
LEAF_NODE	547:18	547:18	7	(
TYPE_NAME	547:19	547:19	7	char
LEAF_NODE	547:19	547:19	8	char
LEAF_NODE	547:24	547:24	7	*
LEAF_NODE	547:25	547:25	7	)
FIELD	547:26	547:26	7	field_name
LEAF_NODE	547:26	547:26	8	field_name
LEAF_NODE	547:36	547:36	4	;
EXPR_STATEMENT	548:1	548:20	3	key . field_type = dt ;
EXPR	548:1	548:1	4	key . field_type = dt
ASSIGN	548:1	548:18	5	key . field_type = dt
LVAL	548:1	548:1	6	key . field_type
FIELD	548:1	548:5	7	key . field_type
LEAF_NODE	548:1	548:1	8	key
LEAF_NODE	548:4	548:4	8	.
LEAF_NODE	548:5	548:5	8	field_type
ASSIGN_OP	548:16	548:16	6	=
LEAF_NODE	548:16	548:16	7	=
RVAL	548:18	548:18	6	dt
FIELD	548:18	548:18	7	dt
LEAF_NODE	548:18	548:18	8	dt
LEAF_NODE	548:20	548:20	4	;
LEAF_NODE	550:1	550:1	3	ret
LEAF_NODE	550:5	550:5	3	=
LEAF_NODE	550:7	550:7	3	(
LEAF_NODE	550:8	550:8	3	const
LEAF_NODE	550:14	550:14	3	TIFFField
LEAF_NODE	550:24	550:24	3	*
LEAF_NODE	550:25	550:25	3	*
LEAF_NODE	550:26	550:26	3	)
LEAF_NODE	551:12	551:12	3	td_lfind
LEAF_NODE	551:20	551:20	3	(
LEAF_NODE	551:21	551:21	3	&
LEAF_NODE	551:22	551:22	3	pkey
LEAF_NODE	551:26	551:26	3	,
LEAF_NODE	551:28	551:28	3	tif
LEAF_NODE	551:31	551:31	3	->
LEAF_NODE	551:33	551:33	3	tif_fields
LEAF_NODE	551:43	551:43	3	,
LEAF_NODE	551:45	551:45	3	&
LEAF_NODE	551:46	551:46	3	tif
LEAF_NODE	551:49	551:49	3	->
LEAF_NODE	551:51	551:51	3	tif_nfields
LEAF_NODE	551:62	551:62	3	,
LEAF_NODE	552:21	552:21	3	sizeof
LEAF_NODE	552:27	552:27	3	(
LEAF_NODE	552:28	552:28	3	TIFFField
LEAF_NODE	552:38	552:38	3	*
LEAF_NODE	552:39	552:39	3	)
LEAF_NODE	552:40	552:40	3	,
LEAF_NODE	552:42	552:42	3	tagNameCompare
LEAF_NODE	552:56	552:56	3	)
LEAF_NODE	552:57	552:57	3	;
JUMP_STATEMENT	554:1	554:49	3	return tif -> tif_foundfield = ( ret ? * ret : NULL ) ;
KEYWORD	554:1	554:1	4	return
LEAF_NODE	554:1	554:1	5	return
DESTINATION	554:8	554:8	4	tif -> tif_foundfield = ( ret ? * ret : NULL )
EXPR	554:8	554:8	5	tif -> tif_foundfield = ( ret ? * ret : NULL )
ASSIGN	554:8	554:30	6	tif -> tif_foundfield = ( ret ? * ret : NULL )
LVAL	554:8	554:8	7	tif -> tif_foundfield
FIELD	554:8	554:13	8	tif -> tif_foundfield
LEAF_NODE	554:8	554:8	9	tif
LEAF_NODE	554:11	554:11	9	->
LEAF_NODE	554:13	554:13	9	tif_foundfield
ASSIGN_OP	554:28	554:28	7	=
LEAF_NODE	554:28	554:28	8	=
RVAL	554:30	554:48	7	( ret ? * ret : NULL )
LEAF_NODE	554:30	554:30	8	(
COND_EXPR	554:31	554:44	8	ret ? * ret : NULL
CONDITION	554:31	554:31	9	ret
FIELD	554:31	554:31	10	ret
LEAF_NODE	554:31	554:31	11	ret
LEAF_NODE	554:35	554:35	9	?
EXPR	554:37	554:37	9	* ret
UNARY_EXPR	554:37	554:38	10	* ret
UNARY_OPERATOR	554:37	554:37	11	*
LEAF_NODE	554:37	554:37	12	*
FIELD	554:38	554:38	11	ret
LEAF_NODE	554:38	554:38	12	ret
LEAF_NODE	554:42	554:42	9	:
FIELD	554:44	554:44	9	NULL
LEAF_NODE	554:44	554:44	10	NULL
LEAF_NODE	554:48	554:48	8	)
LEAF_NODE	554:49	554:49	4	;
LEAF_NODE	555:0	555:0	2	}
FUNCTION_DEF	557:0	567:0	1	
RETURN_TYPE	557:0	557:15	2	const TIFFField *
TYPE_NAME	557:0	557:6	3	const TIFFField
LEAF_NODE	557:0	557:0	4	const
LEAF_NODE	557:6	557:6	4	TIFFField
LEAF_NODE	557:15	557:15	3	*
FUNCTION_NAME	558:0	558:0	2	TIFFFieldWithTag
LEAF_NODE	558:0	558:0	3	TIFFFieldWithTag
PARAMETER_LIST	558:16	558:38	2	( TIFF * tif , uint32 tag )
LEAF_NODE	558:16	558:16	3	(
PARAMETER_DECL	558:17	558:23	3	TIFF * tif
TYPE	558:17	558:21	4	TIFF *
TYPE_NAME	558:17	558:17	5	TIFF
LEAF_NODE	558:17	558:17	6	TIFF
POINTER	558:21	558:21	5	*
LEAF_NODE	558:21	558:21	6	*
NAME	558:23	558:23	4	tif
LEAF_NODE	558:23	558:23	5	tif
LEAF_NODE	558:26	558:26	3	,
PARAMETER_DECL	558:28	558:35	3	uint32 tag
TYPE	558:28	558:28	4	uint32
TYPE_NAME	558:28	558:28	5	uint32
LEAF_NODE	558:28	558:28	6	uint32
NAME	558:35	558:35	4	tag
LEAF_NODE	558:35	558:35	5	tag
LEAF_NODE	558:38	558:38	3	)
LEAF_NODE	559:0	559:0	2	{
STATEMENTS	560:1	566:13	2	
SIMPLE_DECL	560:1	560:57	3	const TIFFField * fip ; fip = TIFFFindField ( tif , tag , TIFF_ANY ) ;
VAR_DECL	560:1	560:18	4	const TIFFField * fip ; fip = TIFFFindField ( tif , tag , TIFF_ANY )
TYPE	560:1	560:16	5	const TIFFField *
TYPE_NAME	560:1	560:7	6	const TIFFField
LEAF_NODE	560:1	560:1	7	const
LEAF_NODE	560:7	560:7	7	TIFFField
POINTER	560:16	560:16	6	*
LEAF_NODE	560:16	560:16	7	*
NAME	560:18	560:18	5	fip
LEAF_NODE	560:18	560:18	6	fip
LEAF_NODE	0:0	0:0	5	;
INIT	560:18	560:18	5	fip = TIFFFindField ( tif , tag , TIFF_ANY )
ASSIGN	560:18	560:24	6	fip = TIFFFindField ( tif , tag , TIFF_ANY )
LVAL	560:18	560:18	7	fip
NAME	560:18	560:18	8	fip
LEAF_NODE	560:18	560:18	9	fip
ASSIGN_OP	560:22	560:22	7	=
LEAF_NODE	560:22	560:22	8	=
RVAL	560:24	560:24	7	TIFFFindField ( tif , tag , TIFF_ANY )
FUNCTION_CALL	560:24	560:56	8	TIFFFindField ( tif , tag , TIFF_ANY )
CALLEE	560:24	560:24	9	TIFFFindField
LEAF_NODE	560:24	560:24	10	TIFFFindField
LEAF_NODE	560:37	560:37	9	(
ARGUMENT	560:38	560:38	9	tif
FIELD	560:38	560:38	10	tif
LEAF_NODE	560:38	560:38	11	tif
LEAF_NODE	560:41	560:41	9	,
ARGUMENT	560:43	560:43	9	tag
FIELD	560:43	560:43	10	tag
LEAF_NODE	560:43	560:43	11	tag
LEAF_NODE	560:46	560:46	9	,
ARGUMENT	560:48	560:48	9	TIFF_ANY
FIELD	560:48	560:48	10	TIFF_ANY
LEAF_NODE	560:48	560:48	11	TIFF_ANY
LEAF_NODE	560:56	560:56	9	)
LEAF_NODE	560:57	560:57	4	;
SELECTION	561:1	561:11	3	
KEYWORD	561:1	561:1	4	if
LEAF_NODE	561:1	561:1	5	if
LEAF_NODE	561:4	561:4	4	(
CONDITION	561:5	561:5	4	! fip
EXPR	561:5	561:5	5	! fip
UNARY_EXPR	561:5	561:6	6	! fip
UNARY_OPERATOR	561:5	561:5	7	!
LEAF_NODE	561:5	561:5	8	!
FIELD	561:6	561:6	7	fip
LEAF_NODE	561:6	561:6	8	fip
LEAF_NODE	561:9	561:9	4	)
STATEMENTS	561:11	565:1	4	
LEAF_NODE	561:11	561:11	5	{
STATEMENTS	562:2	562:2	5	
EXPR_STATEMENT	562:2	564:27	6	TIFFErrorExt ( tif -> tif_clientdata , "TIFFFieldWithTag" , "Internal error, unknown tag 0x%x" , ( unsigned int ) tag ) ;
EXPR	562:2	562:2	7	TIFFErrorExt ( tif -> tif_clientdata , "TIFFFieldWithTag" , "Internal error, unknown tag 0x%x" , ( unsigned int ) tag )
FUNCTION_CALL	562:2	564:26	8	TIFFErrorExt ( tif -> tif_clientdata , "TIFFFieldWithTag" , "Internal error, unknown tag 0x%x" , ( unsigned int ) tag )
CALLEE	562:2	562:2	9	TIFFErrorExt
LEAF_NODE	562:2	562:2	10	TIFFErrorExt
LEAF_NODE	562:14	562:14	9	(
ARGUMENT	562:15	562:15	9	tif -> tif_clientdata
FIELD	562:15	562:20	10	tif -> tif_clientdata
LEAF_NODE	562:15	562:15	11	tif
LEAF_NODE	562:18	562:18	11	->
LEAF_NODE	562:20	562:20	11	tif_clientdata
LEAF_NODE	562:34	562:34	9	,
ARGUMENT	562:36	562:36	9	"TIFFFieldWithTag"
FIELD	562:36	562:36	10	"TIFFFieldWithTag"
LEAF_NODE	562:36	562:36	11	"TIFFFieldWithTag"
LEAF_NODE	562:54	562:54	9	,
ARGUMENT	563:8	563:8	9	"Internal error, unknown tag 0x%x"
FIELD	563:8	563:8	10	"Internal error, unknown tag 0x%x"
LEAF_NODE	563:8	563:8	11	"Internal error, unknown tag 0x%x"
LEAF_NODE	563:42	563:42	9	,
ARGUMENT	564:8	564:23	9	( unsigned int ) tag
LEAF_NODE	564:8	564:8	10	(
TYPE_NAME	564:9	564:18	10	unsigned int
LEAF_NODE	564:9	564:9	11	unsigned
LEAF_NODE	564:18	564:18	11	int
LEAF_NODE	564:21	564:21	10	)
FIELD	564:23	564:23	10	tag
LEAF_NODE	564:23	564:23	11	tag
LEAF_NODE	564:26	564:26	9	)
LEAF_NODE	564:27	564:27	7	;
LEAF_NODE	565:1	565:1	5	}
LEAF_NODE	566:1	566:1	3	return
LEAF_NODE	566:8	566:8	3	(
LEAF_NODE	566:9	566:9	3	fip
LEAF_NODE	566:12	566:12	3	)
LEAF_NODE	566:13	566:13	3	;
LEAF_NODE	567:0	567:0	2	}
FUNCTION_DEF	569:0	579:0	1	
RETURN_TYPE	569:0	569:15	2	const TIFFField *
TYPE_NAME	569:0	569:6	3	const TIFFField
LEAF_NODE	569:0	569:0	4	const
LEAF_NODE	569:6	569:6	4	TIFFField
LEAF_NODE	569:15	569:15	3	*
FUNCTION_NAME	570:0	570:0	2	TIFFFieldWithName
LEAF_NODE	570:0	570:0	3	TIFFFieldWithName
PARAMETER_LIST	570:17	570:51	2	( TIFF * tif , const char * field_name )
LEAF_NODE	570:17	570:17	3	(
PARAMETER_DECL	570:18	570:24	3	TIFF * tif
TYPE	570:18	570:22	4	TIFF *
TYPE_NAME	570:18	570:18	5	TIFF
LEAF_NODE	570:18	570:18	6	TIFF
POINTER	570:22	570:22	5	*
LEAF_NODE	570:22	570:22	6	*
NAME	570:24	570:24	4	tif
LEAF_NODE	570:24	570:24	5	tif
LEAF_NODE	570:27	570:27	3	,
PARAMETER_DECL	570:29	570:41	3	const char * field_name
TYPE	570:29	570:40	4	const char *
TYPE_NAME	570:29	570:35	5	const char
LEAF_NODE	570:29	570:29	6	const
LEAF_NODE	570:35	570:35	6	char
POINTER	570:40	570:40	5	*
LEAF_NODE	570:40	570:40	6	*
NAME	570:41	570:41	4	field_name
LEAF_NODE	570:41	570:41	5	field_name
LEAF_NODE	570:51	570:51	3	)
LEAF_NODE	571:0	571:0	2	{
STATEMENTS	572:1	578:13	2	
SIMPLE_DECL	572:1	573:49	3	const TIFFField * fip ; fip = _TIFFFindFieldByName ( tif , field_name , TIFF_ANY ) ;
VAR_DECL	572:1	572:18	4	const TIFFField * fip ; fip = _TIFFFindFieldByName ( tif , field_name , TIFF_ANY )
TYPE	572:1	572:16	5	const TIFFField *
TYPE_NAME	572:1	572:7	6	const TIFFField
LEAF_NODE	572:1	572:1	7	const
LEAF_NODE	572:7	572:7	7	TIFFField
POINTER	572:16	572:16	6	*
LEAF_NODE	572:16	572:16	7	*
NAME	572:18	572:18	5	fip
LEAF_NODE	572:18	572:18	6	fip
LEAF_NODE	0:0	0:0	5	;
INIT	572:18	572:18	5	fip = _TIFFFindFieldByName ( tif , field_name , TIFF_ANY )
ASSIGN	572:18	573:2	6	fip = _TIFFFindFieldByName ( tif , field_name , TIFF_ANY )
LVAL	572:18	572:18	7	fip
NAME	572:18	572:18	8	fip
LEAF_NODE	572:18	572:18	9	fip
ASSIGN_OP	572:22	572:22	7	=
LEAF_NODE	572:22	572:22	8	=
RVAL	573:2	573:2	7	_TIFFFindFieldByName ( tif , field_name , TIFF_ANY )
FUNCTION_CALL	573:2	573:48	8	_TIFFFindFieldByName ( tif , field_name , TIFF_ANY )
CALLEE	573:2	573:2	9	_TIFFFindFieldByName
LEAF_NODE	573:2	573:2	10	_TIFFFindFieldByName
LEAF_NODE	573:22	573:22	9	(
ARGUMENT	573:23	573:23	9	tif
FIELD	573:23	573:23	10	tif
LEAF_NODE	573:23	573:23	11	tif
LEAF_NODE	573:26	573:26	9	,
ARGUMENT	573:28	573:28	9	field_name
FIELD	573:28	573:28	10	field_name
LEAF_NODE	573:28	573:28	11	field_name
LEAF_NODE	573:38	573:38	9	,
ARGUMENT	573:40	573:40	9	TIFF_ANY
FIELD	573:40	573:40	10	TIFF_ANY
LEAF_NODE	573:40	573:40	11	TIFF_ANY
LEAF_NODE	573:48	573:48	9	)
LEAF_NODE	573:49	573:49	4	;
SELECTION	574:1	574:11	3	
KEYWORD	574:1	574:1	4	if
LEAF_NODE	574:1	574:1	5	if
LEAF_NODE	574:4	574:4	4	(
CONDITION	574:5	574:5	4	! fip
EXPR	574:5	574:5	5	! fip
UNARY_EXPR	574:5	574:6	6	! fip
UNARY_OPERATOR	574:5	574:5	7	!
LEAF_NODE	574:5	574:5	8	!
FIELD	574:6	574:6	7	fip
LEAF_NODE	574:6	574:6	8	fip
LEAF_NODE	574:9	574:9	4	)
STATEMENTS	574:11	577:1	4	
LEAF_NODE	574:11	574:11	5	{
STATEMENTS	575:2	575:2	5	
EXPR_STATEMENT	575:2	576:53	6	TIFFErrorExt ( tif -> tif_clientdata , "TIFFFieldWithName" , "Internal error, unknown tag %s" , field_name ) ;
EXPR	575:2	575:2	7	TIFFErrorExt ( tif -> tif_clientdata , "TIFFFieldWithName" , "Internal error, unknown tag %s" , field_name )
FUNCTION_CALL	575:2	576:52	8	TIFFErrorExt ( tif -> tif_clientdata , "TIFFFieldWithName" , "Internal error, unknown tag %s" , field_name )
CALLEE	575:2	575:2	9	TIFFErrorExt
LEAF_NODE	575:2	575:2	10	TIFFErrorExt
LEAF_NODE	575:14	575:14	9	(
ARGUMENT	575:15	575:15	9	tif -> tif_clientdata
FIELD	575:15	575:20	10	tif -> tif_clientdata
LEAF_NODE	575:15	575:15	11	tif
LEAF_NODE	575:18	575:18	11	->
LEAF_NODE	575:20	575:20	11	tif_clientdata
LEAF_NODE	575:34	575:34	9	,
ARGUMENT	575:36	575:36	9	"TIFFFieldWithName"
FIELD	575:36	575:36	10	"TIFFFieldWithName"
LEAF_NODE	575:36	575:36	11	"TIFFFieldWithName"
LEAF_NODE	575:55	575:55	9	,
ARGUMENT	576:8	576:8	9	"Internal error, unknown tag %s"
FIELD	576:8	576:8	10	"Internal error, unknown tag %s"
LEAF_NODE	576:8	576:8	11	"Internal error, unknown tag %s"
LEAF_NODE	576:40	576:40	9	,
ARGUMENT	576:42	576:42	9	field_name
FIELD	576:42	576:42	10	field_name
LEAF_NODE	576:42	576:42	11	field_name
LEAF_NODE	576:52	576:52	9	)
LEAF_NODE	576:53	576:53	7	;
LEAF_NODE	577:1	577:1	5	}
LEAF_NODE	578:1	578:1	3	return
LEAF_NODE	578:8	578:8	3	(
LEAF_NODE	578:9	578:9	3	fip
LEAF_NODE	578:12	578:12	3	)
LEAF_NODE	578:13	578:13	3	;
LEAF_NODE	579:0	579:0	2	}
FUNCTION_DEF	581:0	585:0	1	
RETURN_TYPE	581:0	581:0	2	uint32
TYPE_NAME	581:0	581:0	3	uint32
LEAF_NODE	581:0	581:0	4	uint32
FUNCTION_NAME	582:0	582:0	2	TIFFFieldTag
LEAF_NODE	582:0	582:0	3	TIFFFieldTag
PARAMETER_LIST	582:12	582:33	2	( const TIFFField * fip )
LEAF_NODE	582:12	582:12	3	(
PARAMETER_DECL	582:13	582:30	3	const TIFFField * fip
TYPE	582:13	582:28	4	const TIFFField *
TYPE_NAME	582:13	582:19	5	const TIFFField
LEAF_NODE	582:13	582:13	6	const
LEAF_NODE	582:19	582:19	6	TIFFField
POINTER	582:28	582:28	5	*
LEAF_NODE	582:28	582:28	6	*
NAME	582:30	582:30	4	fip
LEAF_NODE	582:30	582:30	5	fip
LEAF_NODE	582:33	582:33	3	)
LEAF_NODE	583:0	583:0	2	{
STATEMENTS	584:1	584:1	2	
JUMP_STATEMENT	584:1	584:22	3	return fip -> field_tag ;
KEYWORD	584:1	584:1	4	return
LEAF_NODE	584:1	584:1	5	return
DESTINATION	584:8	584:8	4	fip -> field_tag
EXPR	584:8	584:8	5	fip -> field_tag
FIELD	584:8	584:13	6	fip -> field_tag
LEAF_NODE	584:8	584:8	7	fip
LEAF_NODE	584:11	584:11	7	->
LEAF_NODE	584:13	584:13	7	field_tag
LEAF_NODE	584:22	584:22	4	;
LEAF_NODE	585:0	585:0	2	}
FUNCTION_DEF	587:0	591:0	1	
RETURN_TYPE	587:0	587:11	2	const char *
TYPE_NAME	587:0	587:6	3	const char
LEAF_NODE	587:0	587:0	4	const
LEAF_NODE	587:6	587:6	4	char
LEAF_NODE	587:11	587:11	3	*
FUNCTION_NAME	588:0	588:0	2	TIFFFieldName
LEAF_NODE	588:0	588:0	3	TIFFFieldName
PARAMETER_LIST	588:13	588:34	2	( const TIFFField * fip )
LEAF_NODE	588:13	588:13	3	(
PARAMETER_DECL	588:14	588:31	3	const TIFFField * fip
TYPE	588:14	588:29	4	const TIFFField *
TYPE_NAME	588:14	588:20	5	const TIFFField
LEAF_NODE	588:14	588:14	6	const
LEAF_NODE	588:20	588:20	6	TIFFField
POINTER	588:29	588:29	5	*
LEAF_NODE	588:29	588:29	6	*
NAME	588:31	588:31	4	fip
LEAF_NODE	588:31	588:31	5	fip
LEAF_NODE	588:34	588:34	3	)
LEAF_NODE	589:0	589:0	2	{
STATEMENTS	590:1	590:1	2	
JUMP_STATEMENT	590:1	590:23	3	return fip -> field_name ;
KEYWORD	590:1	590:1	4	return
LEAF_NODE	590:1	590:1	5	return
DESTINATION	590:8	590:8	4	fip -> field_name
EXPR	590:8	590:8	5	fip -> field_name
FIELD	590:8	590:13	6	fip -> field_name
LEAF_NODE	590:8	590:8	7	fip
LEAF_NODE	590:11	590:11	7	->
LEAF_NODE	590:13	590:13	7	field_name
LEAF_NODE	590:23	590:23	4	;
LEAF_NODE	591:0	591:0	2	}
FUNCTION_DEF	593:0	597:0	1	
RETURN_TYPE	593:0	593:0	2	TIFFDataType
TYPE_NAME	593:0	593:0	3	TIFFDataType
LEAF_NODE	593:0	593:0	4	TIFFDataType
FUNCTION_NAME	594:0	594:0	2	TIFFFieldDataType
LEAF_NODE	594:0	594:0	3	TIFFFieldDataType
PARAMETER_LIST	594:17	594:38	2	( const TIFFField * fip )
LEAF_NODE	594:17	594:17	3	(
PARAMETER_DECL	594:18	594:35	3	const TIFFField * fip
TYPE	594:18	594:33	4	const TIFFField *
TYPE_NAME	594:18	594:24	5	const TIFFField
LEAF_NODE	594:18	594:18	6	const
LEAF_NODE	594:24	594:24	6	TIFFField
POINTER	594:33	594:33	5	*
LEAF_NODE	594:33	594:33	6	*
NAME	594:35	594:35	4	fip
LEAF_NODE	594:35	594:35	5	fip
LEAF_NODE	594:38	594:38	3	)
LEAF_NODE	595:0	595:0	2	{
STATEMENTS	596:1	596:1	2	
JUMP_STATEMENT	596:1	596:23	3	return fip -> field_type ;
KEYWORD	596:1	596:1	4	return
LEAF_NODE	596:1	596:1	5	return
DESTINATION	596:8	596:8	4	fip -> field_type
EXPR	596:8	596:8	5	fip -> field_type
FIELD	596:8	596:13	6	fip -> field_type
LEAF_NODE	596:8	596:8	7	fip
LEAF_NODE	596:11	596:11	7	->
LEAF_NODE	596:13	596:13	7	field_type
LEAF_NODE	596:23	596:23	4	;
LEAF_NODE	597:0	597:0	2	}
FUNCTION_DEF	599:0	603:0	1	
RETURN_TYPE	599:0	599:0	2	int
TYPE_NAME	599:0	599:0	3	int
LEAF_NODE	599:0	599:0	4	int
FUNCTION_NAME	600:0	600:0	2	TIFFFieldPassCount
LEAF_NODE	600:0	600:0	3	TIFFFieldPassCount
PARAMETER_LIST	600:18	600:39	2	( const TIFFField * fip )
LEAF_NODE	600:18	600:18	3	(
PARAMETER_DECL	600:19	600:36	3	const TIFFField * fip
TYPE	600:19	600:34	4	const TIFFField *
TYPE_NAME	600:19	600:25	5	const TIFFField
LEAF_NODE	600:19	600:19	6	const
LEAF_NODE	600:25	600:25	6	TIFFField
POINTER	600:34	600:34	5	*
LEAF_NODE	600:34	600:34	6	*
NAME	600:36	600:36	4	fip
LEAF_NODE	600:36	600:36	5	fip
LEAF_NODE	600:39	600:39	3	)
LEAF_NODE	601:0	601:0	2	{
STATEMENTS	602:1	602:1	2	
JUMP_STATEMENT	602:1	602:28	3	return fip -> field_passcount ;
KEYWORD	602:1	602:1	4	return
LEAF_NODE	602:1	602:1	5	return
DESTINATION	602:8	602:8	4	fip -> field_passcount
EXPR	602:8	602:8	5	fip -> field_passcount
FIELD	602:8	602:13	6	fip -> field_passcount
LEAF_NODE	602:8	602:8	7	fip
LEAF_NODE	602:11	602:11	7	->
LEAF_NODE	602:13	602:13	7	field_passcount
LEAF_NODE	602:28	602:28	4	;
LEAF_NODE	603:0	603:0	2	}
FUNCTION_DEF	605:0	609:0	1	
RETURN_TYPE	605:0	605:0	2	int
TYPE_NAME	605:0	605:0	3	int
LEAF_NODE	605:0	605:0	4	int
FUNCTION_NAME	606:0	606:0	2	TIFFFieldReadCount
LEAF_NODE	606:0	606:0	3	TIFFFieldReadCount
PARAMETER_LIST	606:18	606:39	2	( const TIFFField * fip )
LEAF_NODE	606:18	606:18	3	(
PARAMETER_DECL	606:19	606:36	3	const TIFFField * fip
TYPE	606:19	606:34	4	const TIFFField *
TYPE_NAME	606:19	606:25	5	const TIFFField
LEAF_NODE	606:19	606:19	6	const
LEAF_NODE	606:25	606:25	6	TIFFField
POINTER	606:34	606:34	5	*
LEAF_NODE	606:34	606:34	6	*
NAME	606:36	606:36	4	fip
LEAF_NODE	606:36	606:36	5	fip
LEAF_NODE	606:39	606:39	3	)
LEAF_NODE	607:0	607:0	2	{
STATEMENTS	608:1	608:1	2	
JUMP_STATEMENT	608:1	608:28	3	return fip -> field_readcount ;
KEYWORD	608:1	608:1	4	return
LEAF_NODE	608:1	608:1	5	return
DESTINATION	608:8	608:8	4	fip -> field_readcount
EXPR	608:8	608:8	5	fip -> field_readcount
FIELD	608:8	608:13	6	fip -> field_readcount
LEAF_NODE	608:8	608:8	7	fip
LEAF_NODE	608:11	608:11	7	->
LEAF_NODE	608:13	608:13	7	field_readcount
LEAF_NODE	608:28	608:28	4	;
LEAF_NODE	609:0	609:0	2	}
FUNCTION_DEF	611:0	615:0	1	
RETURN_TYPE	611:0	611:0	2	int
TYPE_NAME	611:0	611:0	3	int
LEAF_NODE	611:0	611:0	4	int
FUNCTION_NAME	612:0	612:0	2	TIFFFieldWriteCount
LEAF_NODE	612:0	612:0	3	TIFFFieldWriteCount
PARAMETER_LIST	612:19	612:40	2	( const TIFFField * fip )
LEAF_NODE	612:19	612:19	3	(
PARAMETER_DECL	612:20	612:37	3	const TIFFField * fip
TYPE	612:20	612:35	4	const TIFFField *
TYPE_NAME	612:20	612:26	5	const TIFFField
LEAF_NODE	612:20	612:20	6	const
LEAF_NODE	612:26	612:26	6	TIFFField
POINTER	612:35	612:35	5	*
LEAF_NODE	612:35	612:35	6	*
NAME	612:37	612:37	4	fip
LEAF_NODE	612:37	612:37	5	fip
LEAF_NODE	612:40	612:40	3	)
LEAF_NODE	613:0	613:0	2	{
STATEMENTS	614:1	614:1	2	
JUMP_STATEMENT	614:1	614:29	3	return fip -> field_writecount ;
KEYWORD	614:1	614:1	4	return
LEAF_NODE	614:1	614:1	5	return
DESTINATION	614:8	614:8	4	fip -> field_writecount
EXPR	614:8	614:8	5	fip -> field_writecount
FIELD	614:8	614:13	6	fip -> field_writecount
LEAF_NODE	614:8	614:8	7	fip
LEAF_NODE	614:11	614:11	7	->
LEAF_NODE	614:13	614:13	7	field_writecount
LEAF_NODE	614:29	614:29	4	;
LEAF_NODE	615:0	615:0	2	}
FUNCTION_DEF	617:0	631:0	1	
RETURN_TYPE	617:0	617:15	2	const TIFFField *
TYPE_NAME	617:0	617:6	3	const TIFFField
LEAF_NODE	617:0	617:0	4	const
LEAF_NODE	617:6	617:6	4	TIFFField
LEAF_NODE	617:15	617:15	3	*
FUNCTION_NAME	618:0	618:0	2	_TIFFFindOrRegisterField
LEAF_NODE	618:0	618:0	3	_TIFFFindOrRegisterField
PARAMETER_LIST	618:24	618:63	2	( TIFF * tif , uint32 tag , TIFFDataType dt )
LEAF_NODE	618:24	618:24	3	(
PARAMETER_DECL	618:25	618:31	3	TIFF * tif
TYPE	618:25	618:30	4	TIFF *
TYPE_NAME	618:25	618:25	5	TIFF
LEAF_NODE	618:25	618:25	6	TIFF
POINTER	618:30	618:30	5	*
LEAF_NODE	618:30	618:30	6	*
NAME	618:31	618:31	4	tif
LEAF_NODE	618:31	618:31	5	tif
LEAF_NODE	618:34	618:34	3	,
PARAMETER_DECL	618:36	618:43	3	uint32 tag
TYPE	618:36	618:36	4	uint32
TYPE_NAME	618:36	618:36	5	uint32
LEAF_NODE	618:36	618:36	6	uint32
NAME	618:43	618:43	4	tag
LEAF_NODE	618:43	618:43	5	tag
LEAF_NODE	618:46	618:46	3	,
PARAMETER_DECL	618:48	618:61	3	TIFFDataType dt
TYPE	618:48	618:48	4	TIFFDataType
TYPE_NAME	618:48	618:48	5	TIFFDataType
LEAF_NODE	618:48	618:48	6	TIFFDataType
NAME	618:61	618:61	4	dt
LEAF_NODE	618:61	618:61	5	dt
LEAF_NODE	618:63	618:63	3	)
LEAF_NODE	620:0	620:0	2	{
STATEMENTS	621:1	630:1	2	
SIMPLE_DECL	621:1	621:21	3	const TIFFField * fld ;
VAR_DECL	621:1	621:18	4	const TIFFField * fld
TYPE	621:1	621:17	5	const TIFFField *
TYPE_NAME	621:1	621:7	6	const TIFFField
LEAF_NODE	621:1	621:1	7	const
LEAF_NODE	621:7	621:7	7	TIFFField
POINTER	621:17	621:17	6	*
LEAF_NODE	621:17	621:17	7	*
NAME	621:18	621:18	5	fld
LEAF_NODE	621:18	621:18	6	fld
LEAF_NODE	621:21	621:21	4	;
EXPR_STATEMENT	623:1	623:34	3	fld = TIFFFindField ( tif , tag , dt ) ;
EXPR	623:1	623:1	4	fld = TIFFFindField ( tif , tag , dt )
ASSIGN	623:1	623:7	5	fld = TIFFFindField ( tif , tag , dt )
LVAL	623:1	623:1	6	fld
FIELD	623:1	623:1	7	fld
LEAF_NODE	623:1	623:1	8	fld
ASSIGN_OP	623:5	623:5	6	=
LEAF_NODE	623:5	623:5	7	=
RVAL	623:7	623:7	6	TIFFFindField ( tif , tag , dt )
FUNCTION_CALL	623:7	623:33	7	TIFFFindField ( tif , tag , dt )
CALLEE	623:7	623:7	8	TIFFFindField
LEAF_NODE	623:7	623:7	9	TIFFFindField
LEAF_NODE	623:20	623:20	8	(
ARGUMENT	623:21	623:21	8	tif
FIELD	623:21	623:21	9	tif
LEAF_NODE	623:21	623:21	10	tif
LEAF_NODE	623:24	623:24	8	,
ARGUMENT	623:26	623:26	8	tag
FIELD	623:26	623:26	9	tag
LEAF_NODE	623:26	623:26	10	tag
LEAF_NODE	623:29	623:29	8	,
ARGUMENT	623:31	623:31	8	dt
FIELD	623:31	623:31	9	dt
LEAF_NODE	623:31	623:31	10	dt
LEAF_NODE	623:33	623:33	8	)
LEAF_NODE	623:34	623:34	4	;
SELECTION	624:1	624:18	3	
KEYWORD	624:1	624:1	4	if
LEAF_NODE	624:1	624:1	5	if
LEAF_NODE	624:4	624:4	4	(
CONDITION	624:5	624:5	4	fld == NULL
EXPR	624:5	624:12	5	fld == NULL
FIELD	624:5	624:5	6	fld
LEAF_NODE	624:5	624:5	7	fld
EQ_OPERATOR	624:9	624:9	6	==
LEAF_NODE	624:9	624:9	7	==
FIELD	624:12	624:12	6	NULL
LEAF_NODE	624:12	624:12	7	NULL
LEAF_NODE	624:16	624:16	4	)
STATEMENTS	624:18	628:1	4	
LEAF_NODE	624:18	624:18	5	{
STATEMENTS	625:2	626:2	5	
EXPR_STATEMENT	625:2	625:42	6	fld = _TIFFCreateAnonField ( tif , tag , dt ) ;
EXPR	625:2	625:2	7	fld = _TIFFCreateAnonField ( tif , tag , dt )
ASSIGN	625:2	625:8	8	fld = _TIFFCreateAnonField ( tif , tag , dt )
LVAL	625:2	625:2	9	fld
FIELD	625:2	625:2	10	fld
LEAF_NODE	625:2	625:2	11	fld
ASSIGN_OP	625:6	625:6	9	=
LEAF_NODE	625:6	625:6	10	=
RVAL	625:8	625:8	9	_TIFFCreateAnonField ( tif , tag , dt )
FUNCTION_CALL	625:8	625:41	10	_TIFFCreateAnonField ( tif , tag , dt )
CALLEE	625:8	625:8	11	_TIFFCreateAnonField
LEAF_NODE	625:8	625:8	12	_TIFFCreateAnonField
LEAF_NODE	625:28	625:28	11	(
ARGUMENT	625:29	625:29	11	tif
FIELD	625:29	625:29	12	tif
LEAF_NODE	625:29	625:29	13	tif
LEAF_NODE	625:32	625:32	11	,
ARGUMENT	625:34	625:34	11	tag
FIELD	625:34	625:34	12	tag
LEAF_NODE	625:34	625:34	13	tag
LEAF_NODE	625:37	625:37	11	,
ARGUMENT	625:39	625:39	11	dt
FIELD	625:39	625:39	12	dt
LEAF_NODE	625:39	625:39	13	dt
LEAF_NODE	625:41	625:41	11	)
LEAF_NODE	625:42	625:42	7	;
SELECTION	626:2	627:3	6	
KEYWORD	626:2	626:2	7	if
LEAF_NODE	626:2	626:2	8	if
LEAF_NODE	626:5	626:5	7	(
CONDITION	626:6	626:6	7	! _TIFFMergeFields ( tif , fld , 1 )
EXPR	626:6	626:6	8	! _TIFFMergeFields ( tif , fld , 1 )
UNARY_EXPR	626:6	626:7	9	! _TIFFMergeFields ( tif , fld , 1 )
UNARY_OPERATOR	626:6	626:6	10	!
LEAF_NODE	626:6	626:6	11	!
FUNCTION_CALL	626:7	626:35	10	_TIFFMergeFields ( tif , fld , 1 )
CALLEE	626:7	626:7	11	_TIFFMergeFields
LEAF_NODE	626:7	626:7	12	_TIFFMergeFields
LEAF_NODE	626:23	626:23	11	(
ARGUMENT	626:24	626:24	11	tif
FIELD	626:24	626:24	12	tif
LEAF_NODE	626:24	626:24	13	tif
LEAF_NODE	626:27	626:27	11	,
ARGUMENT	626:29	626:29	11	fld
FIELD	626:29	626:29	12	fld
LEAF_NODE	626:29	626:29	13	fld
LEAF_NODE	626:32	626:32	11	,
ARGUMENT	626:34	626:34	11	1
FIELD	626:34	626:34	12	1
LEAF_NODE	626:34	626:34	13	1
LEAF_NODE	626:35	626:35	11	)
LEAF_NODE	626:36	626:36	7	)
STATEMENTS	627:3	627:3	7	
JUMP_STATEMENT	627:3	627:14	8	return NULL ;
KEYWORD	627:3	627:3	9	return
LEAF_NODE	627:3	627:3	10	return
DESTINATION	627:10	627:10	9	NULL
EXPR	627:10	627:10	10	NULL
FIELD	627:10	627:10	11	NULL
LEAF_NODE	627:10	627:10	12	NULL
LEAF_NODE	627:14	627:14	9	;
LEAF_NODE	628:1	628:1	5	}
JUMP_STATEMENT	630:1	630:11	3	return fld ;
KEYWORD	630:1	630:1	4	return
LEAF_NODE	630:1	630:1	5	return
DESTINATION	630:8	630:8	4	fld
EXPR	630:8	630:8	5	fld
FIELD	630:8	630:8	6	fld
LEAF_NODE	630:8	630:8	7	fld
LEAF_NODE	630:11	630:11	4	;
LEAF_NODE	631:0	631:0	2	}
FUNCTION_DEF	633:0	725:0	1	
RETURN_TYPE	633:0	633:9	2	TIFFField *
TYPE_NAME	633:0	633:0	3	TIFFField
LEAF_NODE	633:0	633:0	4	TIFFField
LEAF_NODE	633:9	633:9	3	*
FUNCTION_NAME	634:0	634:0	2	_TIFFCreateAnonField
LEAF_NODE	634:0	634:0	3	_TIFFCreateAnonField
PARAMETER_LIST	634:20	634:67	2	( TIFF * tif , uint32 tag , TIFFDataType field_type )
LEAF_NODE	634:20	634:20	3	(
PARAMETER_DECL	634:21	634:27	3	TIFF * tif
TYPE	634:21	634:26	4	TIFF *
TYPE_NAME	634:21	634:21	5	TIFF
LEAF_NODE	634:21	634:21	6	TIFF
POINTER	634:26	634:26	5	*
LEAF_NODE	634:26	634:26	6	*
NAME	634:27	634:27	4	tif
LEAF_NODE	634:27	634:27	5	tif
LEAF_NODE	634:30	634:30	3	,
PARAMETER_DECL	634:32	634:39	3	uint32 tag
TYPE	634:32	634:32	4	uint32
TYPE_NAME	634:32	634:32	5	uint32
LEAF_NODE	634:32	634:32	6	uint32
NAME	634:39	634:39	4	tag
LEAF_NODE	634:39	634:39	5	tag
LEAF_NODE	634:42	634:42	3	,
PARAMETER_DECL	634:44	634:57	3	TIFFDataType field_type
TYPE	634:44	634:44	4	TIFFDataType
TYPE_NAME	634:44	634:44	5	TIFFDataType
LEAF_NODE	634:44	634:44	6	TIFFDataType
NAME	634:57	634:57	4	field_type
LEAF_NODE	634:57	634:57	5	field_type
LEAF_NODE	634:67	634:67	3	)
LEAF_NODE	635:0	635:0	2	{
STATEMENTS	636:1	724:1	2	
SIMPLE_DECL	636:1	636:15	3	TIFFField * fld ;
VAR_DECL	636:1	636:12	4	TIFFField * fld
TYPE	636:1	636:11	5	TIFFField *
TYPE_NAME	636:1	636:1	6	TIFFField
LEAF_NODE	636:1	636:1	7	TIFFField
POINTER	636:11	636:11	6	*
LEAF_NODE	636:11	636:11	7	*
NAME	636:12	636:12	5	fld
LEAF_NODE	636:12	636:12	6	fld
LEAF_NODE	636:15	636:15	4	;
EXPR_STATEMENT	637:1	637:11	3	( void ) tif ;
EXPR	637:1	637:8	4	( void ) tif
LEAF_NODE	637:1	637:1	5	(
TYPE_NAME	637:2	637:2	5	void
LEAF_NODE	637:2	637:2	6	void
LEAF_NODE	637:6	637:6	5	)
FIELD	637:8	637:8	5	tif
LEAF_NODE	637:8	637:8	6	tif
LEAF_NODE	637:11	637:11	4	;
EXPR_STATEMENT	639:1	639:52	3	fld = ( TIFFField * ) _TIFFmalloc ( sizeof ( TIFFField ) ) ;
EXPR	639:1	639:1	4	fld = ( TIFFField * ) _TIFFmalloc ( sizeof ( TIFFField ) )
ASSIGN	639:1	639:7	5	fld = ( TIFFField * ) _TIFFmalloc ( sizeof ( TIFFField ) )
LVAL	639:1	639:1	6	fld
FIELD	639:1	639:1	7	fld
LEAF_NODE	639:1	639:1	8	fld
ASSIGN_OP	639:5	639:5	6	=
LEAF_NODE	639:5	639:5	7	=
RVAL	639:7	639:21	6	( TIFFField * ) _TIFFmalloc ( sizeof ( TIFFField ) )
LEAF_NODE	639:7	639:7	7	(
TYPE_NAME	639:8	639:8	7	TIFFField
LEAF_NODE	639:8	639:8	8	TIFFField
LEAF_NODE	639:18	639:18	7	*
LEAF_NODE	639:19	639:19	7	)
FUNCTION_CALL	639:21	639:51	7	_TIFFmalloc ( sizeof ( TIFFField ) )
CALLEE	639:21	639:21	8	_TIFFmalloc
LEAF_NODE	639:21	639:21	9	_TIFFmalloc
LEAF_NODE	639:32	639:32	8	(
ARGUMENT	639:33	639:33	8	sizeof ( TIFFField )
FUNCTION_CALL	639:33	639:50	9	sizeof ( TIFFField )
CALLEE	639:33	639:33	10	sizeof
LEAF_NODE	639:33	639:33	11	sizeof
LEAF_NODE	639:40	639:40	10	(
ARGUMENT	639:41	639:41	10	TIFFField
FIELD	639:41	639:41	11	TIFFField
LEAF_NODE	639:41	639:41	12	TIFFField
LEAF_NODE	639:50	639:50	10	)
LEAF_NODE	639:51	639:51	8	)
LEAF_NODE	639:52	639:52	4	;
SELECTION	640:1	641:5	3	
KEYWORD	640:1	640:1	4	if
LEAF_NODE	640:1	640:1	5	if
LEAF_NODE	640:4	640:4	4	(
CONDITION	640:5	640:5	4	fld == NULL
EXPR	640:5	640:12	5	fld == NULL
FIELD	640:5	640:5	6	fld
LEAF_NODE	640:5	640:5	7	fld
EQ_OPERATOR	640:9	640:9	6	==
LEAF_NODE	640:9	640:9	7	==
FIELD	640:12	640:12	6	NULL
LEAF_NODE	640:12	640:12	7	NULL
LEAF_NODE	640:16	640:16	4	)
STATEMENTS	641:5	641:5	4	
JUMP_STATEMENT	641:5	641:16	5	return NULL ;
KEYWORD	641:5	641:5	6	return
LEAF_NODE	641:5	641:5	7	return
DESTINATION	641:12	641:12	6	NULL
EXPR	641:12	641:12	7	NULL
FIELD	641:12	641:12	8	NULL
LEAF_NODE	641:12	641:12	9	NULL
LEAF_NODE	641:16	641:16	6	;
EXPR_STATEMENT	642:1	642:39	3	_TIFFmemset ( fld , 0 , sizeof ( TIFFField ) ) ;
EXPR	642:1	642:1	4	_TIFFmemset ( fld , 0 , sizeof ( TIFFField ) )
FUNCTION_CALL	642:1	642:38	5	_TIFFmemset ( fld , 0 , sizeof ( TIFFField ) )
CALLEE	642:1	642:1	6	_TIFFmemset
LEAF_NODE	642:1	642:1	7	_TIFFmemset
LEAF_NODE	642:12	642:12	6	(
ARGUMENT	642:13	642:13	6	fld
FIELD	642:13	642:13	7	fld
LEAF_NODE	642:13	642:13	8	fld
LEAF_NODE	642:16	642:16	6	,
ARGUMENT	642:18	642:18	6	0
FIELD	642:18	642:18	7	0
LEAF_NODE	642:18	642:18	8	0
LEAF_NODE	642:19	642:19	6	,
ARGUMENT	642:21	642:21	6	sizeof ( TIFFField )
FUNCTION_CALL	642:21	642:37	7	sizeof ( TIFFField )
CALLEE	642:21	642:21	8	sizeof
LEAF_NODE	642:21	642:21	9	sizeof
LEAF_NODE	642:27	642:27	8	(
ARGUMENT	642:28	642:28	8	TIFFField
FIELD	642:28	642:28	9	TIFFField
LEAF_NODE	642:28	642:28	10	TIFFField
LEAF_NODE	642:37	642:37	8	)
LEAF_NODE	642:38	642:38	6	)
LEAF_NODE	642:39	642:39	4	;
EXPR_STATEMENT	644:1	644:21	3	fld -> field_tag = tag ;
EXPR	644:1	644:1	4	fld -> field_tag = tag
ASSIGN	644:1	644:18	5	fld -> field_tag = tag
LVAL	644:1	644:1	6	fld -> field_tag
FIELD	644:1	644:6	7	fld -> field_tag
LEAF_NODE	644:1	644:1	8	fld
LEAF_NODE	644:4	644:4	8	->
LEAF_NODE	644:6	644:6	8	field_tag
ASSIGN_OP	644:16	644:16	6	=
LEAF_NODE	644:16	644:16	7	=
RVAL	644:18	644:18	6	tag
FIELD	644:18	644:18	7	tag
LEAF_NODE	644:18	644:18	8	tag
LEAF_NODE	644:21	644:21	4	;
EXPR_STATEMENT	645:1	645:38	3	fld -> field_readcount = TIFF_VARIABLE2 ;
EXPR	645:1	645:1	4	fld -> field_readcount = TIFF_VARIABLE2
ASSIGN	645:1	645:24	5	fld -> field_readcount = TIFF_VARIABLE2
LVAL	645:1	645:1	6	fld -> field_readcount
FIELD	645:1	645:6	7	fld -> field_readcount
LEAF_NODE	645:1	645:1	8	fld
LEAF_NODE	645:4	645:4	8	->
LEAF_NODE	645:6	645:6	8	field_readcount
ASSIGN_OP	645:22	645:22	6	=
LEAF_NODE	645:22	645:22	7	=
RVAL	645:24	645:24	6	TIFF_VARIABLE2
FIELD	645:24	645:24	7	TIFF_VARIABLE2
LEAF_NODE	645:24	645:24	8	TIFF_VARIABLE2
LEAF_NODE	645:38	645:38	4	;
EXPR_STATEMENT	646:1	646:39	3	fld -> field_writecount = TIFF_VARIABLE2 ;
EXPR	646:1	646:1	4	fld -> field_writecount = TIFF_VARIABLE2
ASSIGN	646:1	646:25	5	fld -> field_writecount = TIFF_VARIABLE2
LVAL	646:1	646:1	6	fld -> field_writecount
FIELD	646:1	646:6	7	fld -> field_writecount
LEAF_NODE	646:1	646:1	8	fld
LEAF_NODE	646:4	646:4	8	->
LEAF_NODE	646:6	646:6	8	field_writecount
ASSIGN_OP	646:23	646:23	6	=
LEAF_NODE	646:23	646:23	7	=
RVAL	646:25	646:25	6	TIFF_VARIABLE2
FIELD	646:25	646:25	7	TIFF_VARIABLE2
LEAF_NODE	646:25	646:25	8	TIFF_VARIABLE2
LEAF_NODE	646:39	646:39	4	;
EXPR_STATEMENT	647:1	647:29	3	fld -> field_type = field_type ;
EXPR	647:1	647:1	4	fld -> field_type = field_type
ASSIGN	647:1	647:19	5	fld -> field_type = field_type
LVAL	647:1	647:1	6	fld -> field_type
FIELD	647:1	647:6	7	fld -> field_type
LEAF_NODE	647:1	647:1	8	fld
LEAF_NODE	647:4	647:4	8	->
LEAF_NODE	647:6	647:6	8	field_type
ASSIGN_OP	647:17	647:17	6	=
LEAF_NODE	647:17	647:17	7	=
RVAL	647:19	647:19	6	field_type
FIELD	647:19	647:19	7	field_type
LEAF_NODE	647:19	647:19	8	field_type
LEAF_NODE	647:29	647:29	4	;
EXPR_STATEMENT	648:1	648:18	3	fld -> reserved = 0 ;
EXPR	648:1	648:1	4	fld -> reserved = 0
ASSIGN	648:1	648:17	5	fld -> reserved = 0
LVAL	648:1	648:1	6	fld -> reserved
FIELD	648:1	648:6	7	fld -> reserved
LEAF_NODE	648:1	648:1	8	fld
LEAF_NODE	648:4	648:4	8	->
LEAF_NODE	648:6	648:6	8	reserved
ASSIGN_OP	648:15	648:15	6	=
LEAF_NODE	648:15	648:15	7	=
RVAL	648:17	648:17	6	0
FIELD	648:17	648:17	7	0
LEAF_NODE	648:17	648:17	8	0
LEAF_NODE	648:18	648:18	4	;
SELECTION	649:1	650:1	3	
KEYWORD	649:1	649:1	4	switch
LEAF_NODE	649:1	649:1	5	switch
LEAF_NODE	649:8	649:8	4	(
CONDITION	649:9	649:9	4	field_type
EXPR	649:9	649:9	5	field_type
FIELD	649:9	649:9	6	field_type
LEAF_NODE	649:9	649:9	7	field_type
LEAF_NODE	649:19	649:19	4	)
STATEMENTS	650:1	707:1	4	
LEAF_NODE	650:1	650:1	5	{
STATEMENTS	651:2	706:3	5	
LABEL	651:2	651:16	6	case TIFF_BYTE :
LEAF_NODE	651:2	651:2	7	case
LEAF_NODE	651:7	651:7	7	TIFF_BYTE
LEAF_NODE	651:16	651:16	7	:
LABEL	652:2	652:21	6	case TIFF_UNDEFINED :
LEAF_NODE	652:2	652:2	7	case
LEAF_NODE	652:7	652:7	7	TIFF_UNDEFINED
LEAF_NODE	652:21	652:21	7	:
EXPR_STATEMENT	653:3	653:46	6	fld -> set_field_type = TIFF_SETGET_C32_UINT8 ;
EXPR	653:3	653:3	7	fld -> set_field_type = TIFF_SETGET_C32_UINT8
ASSIGN	653:3	653:25	8	fld -> set_field_type = TIFF_SETGET_C32_UINT8
LVAL	653:3	653:3	9	fld -> set_field_type
FIELD	653:3	653:8	10	fld -> set_field_type
LEAF_NODE	653:3	653:3	11	fld
LEAF_NODE	653:6	653:6	11	->
LEAF_NODE	653:8	653:8	11	set_field_type
ASSIGN_OP	653:23	653:23	9	=
LEAF_NODE	653:23	653:23	10	=
RVAL	653:25	653:25	9	TIFF_SETGET_C32_UINT8
FIELD	653:25	653:25	10	TIFF_SETGET_C32_UINT8
LEAF_NODE	653:25	653:25	11	TIFF_SETGET_C32_UINT8
LEAF_NODE	653:46	653:46	7	;
EXPR_STATEMENT	654:3	654:46	6	fld -> get_field_type = TIFF_SETGET_C32_UINT8 ;
EXPR	654:3	654:3	7	fld -> get_field_type = TIFF_SETGET_C32_UINT8
ASSIGN	654:3	654:25	8	fld -> get_field_type = TIFF_SETGET_C32_UINT8
LVAL	654:3	654:3	9	fld -> get_field_type
FIELD	654:3	654:8	10	fld -> get_field_type
LEAF_NODE	654:3	654:3	11	fld
LEAF_NODE	654:6	654:6	11	->
LEAF_NODE	654:8	654:8	11	get_field_type
ASSIGN_OP	654:23	654:23	9	=
LEAF_NODE	654:23	654:23	10	=
RVAL	654:25	654:25	9	TIFF_SETGET_C32_UINT8
FIELD	654:25	654:25	10	TIFF_SETGET_C32_UINT8
LEAF_NODE	654:25	654:25	11	TIFF_SETGET_C32_UINT8
LEAF_NODE	654:46	654:46	7	;
JUMP_STATEMENT	655:3	655:8	6	break DESTINATION ;
KEYWORD	655:3	655:3	7	break
LEAF_NODE	655:3	655:3	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	655:8	655:8	7	;
LABEL	656:2	656:17	6	case TIFF_ASCII :
LEAF_NODE	656:2	656:2	7	case
LEAF_NODE	656:7	656:7	7	TIFF_ASCII
LEAF_NODE	656:17	656:17	7	:
EXPR_STATEMENT	657:3	657:46	6	fld -> set_field_type = TIFF_SETGET_C32_ASCII ;
EXPR	657:3	657:3	7	fld -> set_field_type = TIFF_SETGET_C32_ASCII
ASSIGN	657:3	657:25	8	fld -> set_field_type = TIFF_SETGET_C32_ASCII
LVAL	657:3	657:3	9	fld -> set_field_type
FIELD	657:3	657:8	10	fld -> set_field_type
LEAF_NODE	657:3	657:3	11	fld
LEAF_NODE	657:6	657:6	11	->
LEAF_NODE	657:8	657:8	11	set_field_type
ASSIGN_OP	657:23	657:23	9	=
LEAF_NODE	657:23	657:23	10	=
RVAL	657:25	657:25	9	TIFF_SETGET_C32_ASCII
FIELD	657:25	657:25	10	TIFF_SETGET_C32_ASCII
LEAF_NODE	657:25	657:25	11	TIFF_SETGET_C32_ASCII
LEAF_NODE	657:46	657:46	7	;
EXPR_STATEMENT	658:3	658:46	6	fld -> get_field_type = TIFF_SETGET_C32_ASCII ;
EXPR	658:3	658:3	7	fld -> get_field_type = TIFF_SETGET_C32_ASCII
ASSIGN	658:3	658:25	8	fld -> get_field_type = TIFF_SETGET_C32_ASCII
LVAL	658:3	658:3	9	fld -> get_field_type
FIELD	658:3	658:8	10	fld -> get_field_type
LEAF_NODE	658:3	658:3	11	fld
LEAF_NODE	658:6	658:6	11	->
LEAF_NODE	658:8	658:8	11	get_field_type
ASSIGN_OP	658:23	658:23	9	=
LEAF_NODE	658:23	658:23	10	=
RVAL	658:25	658:25	9	TIFF_SETGET_C32_ASCII
FIELD	658:25	658:25	10	TIFF_SETGET_C32_ASCII
LEAF_NODE	658:25	658:25	11	TIFF_SETGET_C32_ASCII
LEAF_NODE	658:46	658:46	7	;
JUMP_STATEMENT	659:3	659:8	6	break DESTINATION ;
KEYWORD	659:3	659:3	7	break
LEAF_NODE	659:3	659:3	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	659:8	659:8	7	;
LABEL	660:2	660:17	6	case TIFF_SHORT :
LEAF_NODE	660:2	660:2	7	case
LEAF_NODE	660:7	660:7	7	TIFF_SHORT
LEAF_NODE	660:17	660:17	7	:
EXPR_STATEMENT	661:3	661:47	6	fld -> set_field_type = TIFF_SETGET_C32_UINT16 ;
EXPR	661:3	661:3	7	fld -> set_field_type = TIFF_SETGET_C32_UINT16
ASSIGN	661:3	661:25	8	fld -> set_field_type = TIFF_SETGET_C32_UINT16
LVAL	661:3	661:3	9	fld -> set_field_type
FIELD	661:3	661:8	10	fld -> set_field_type
LEAF_NODE	661:3	661:3	11	fld
LEAF_NODE	661:6	661:6	11	->
LEAF_NODE	661:8	661:8	11	set_field_type
ASSIGN_OP	661:23	661:23	9	=
LEAF_NODE	661:23	661:23	10	=
RVAL	661:25	661:25	9	TIFF_SETGET_C32_UINT16
FIELD	661:25	661:25	10	TIFF_SETGET_C32_UINT16
LEAF_NODE	661:25	661:25	11	TIFF_SETGET_C32_UINT16
LEAF_NODE	661:47	661:47	7	;
EXPR_STATEMENT	662:3	662:47	6	fld -> get_field_type = TIFF_SETGET_C32_UINT16 ;
EXPR	662:3	662:3	7	fld -> get_field_type = TIFF_SETGET_C32_UINT16
ASSIGN	662:3	662:25	8	fld -> get_field_type = TIFF_SETGET_C32_UINT16
LVAL	662:3	662:3	9	fld -> get_field_type
FIELD	662:3	662:8	10	fld -> get_field_type
LEAF_NODE	662:3	662:3	11	fld
LEAF_NODE	662:6	662:6	11	->
LEAF_NODE	662:8	662:8	11	get_field_type
ASSIGN_OP	662:23	662:23	9	=
LEAF_NODE	662:23	662:23	10	=
RVAL	662:25	662:25	9	TIFF_SETGET_C32_UINT16
FIELD	662:25	662:25	10	TIFF_SETGET_C32_UINT16
LEAF_NODE	662:25	662:25	11	TIFF_SETGET_C32_UINT16
LEAF_NODE	662:47	662:47	7	;
JUMP_STATEMENT	663:3	663:8	6	break DESTINATION ;
KEYWORD	663:3	663:3	7	break
LEAF_NODE	663:3	663:3	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	663:8	663:8	7	;
LABEL	664:2	664:16	6	case TIFF_LONG :
LEAF_NODE	664:2	664:2	7	case
LEAF_NODE	664:7	664:7	7	TIFF_LONG
LEAF_NODE	664:16	664:16	7	:
EXPR_STATEMENT	665:3	665:47	6	fld -> set_field_type = TIFF_SETGET_C32_UINT32 ;
EXPR	665:3	665:3	7	fld -> set_field_type = TIFF_SETGET_C32_UINT32
ASSIGN	665:3	665:25	8	fld -> set_field_type = TIFF_SETGET_C32_UINT32
LVAL	665:3	665:3	9	fld -> set_field_type
FIELD	665:3	665:8	10	fld -> set_field_type
LEAF_NODE	665:3	665:3	11	fld
LEAF_NODE	665:6	665:6	11	->
LEAF_NODE	665:8	665:8	11	set_field_type
ASSIGN_OP	665:23	665:23	9	=
LEAF_NODE	665:23	665:23	10	=
RVAL	665:25	665:25	9	TIFF_SETGET_C32_UINT32
FIELD	665:25	665:25	10	TIFF_SETGET_C32_UINT32
LEAF_NODE	665:25	665:25	11	TIFF_SETGET_C32_UINT32
LEAF_NODE	665:47	665:47	7	;
EXPR_STATEMENT	666:3	666:47	6	fld -> get_field_type = TIFF_SETGET_C32_UINT32 ;
EXPR	666:3	666:3	7	fld -> get_field_type = TIFF_SETGET_C32_UINT32
ASSIGN	666:3	666:25	8	fld -> get_field_type = TIFF_SETGET_C32_UINT32
LVAL	666:3	666:3	9	fld -> get_field_type
FIELD	666:3	666:8	10	fld -> get_field_type
LEAF_NODE	666:3	666:3	11	fld
LEAF_NODE	666:6	666:6	11	->
LEAF_NODE	666:8	666:8	11	get_field_type
ASSIGN_OP	666:23	666:23	9	=
LEAF_NODE	666:23	666:23	10	=
RVAL	666:25	666:25	9	TIFF_SETGET_C32_UINT32
FIELD	666:25	666:25	10	TIFF_SETGET_C32_UINT32
LEAF_NODE	666:25	666:25	11	TIFF_SETGET_C32_UINT32
LEAF_NODE	666:47	666:47	7	;
JUMP_STATEMENT	667:3	667:8	6	break DESTINATION ;
KEYWORD	667:3	667:3	7	break
LEAF_NODE	667:3	667:3	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	667:8	667:8	7	;
LABEL	668:2	668:20	6	case TIFF_RATIONAL :
LEAF_NODE	668:2	668:2	7	case
LEAF_NODE	668:7	668:7	7	TIFF_RATIONAL
LEAF_NODE	668:20	668:20	7	:
LABEL	669:2	669:21	6	case TIFF_SRATIONAL :
LEAF_NODE	669:2	669:2	7	case
LEAF_NODE	669:7	669:7	7	TIFF_SRATIONAL
LEAF_NODE	669:21	669:21	7	:
LABEL	670:2	670:17	6	case TIFF_FLOAT :
LEAF_NODE	670:2	670:2	7	case
LEAF_NODE	670:7	670:7	7	TIFF_FLOAT
LEAF_NODE	670:17	670:17	7	:
EXPR_STATEMENT	671:3	671:46	6	fld -> set_field_type = TIFF_SETGET_C32_FLOAT ;
EXPR	671:3	671:3	7	fld -> set_field_type = TIFF_SETGET_C32_FLOAT
ASSIGN	671:3	671:25	8	fld -> set_field_type = TIFF_SETGET_C32_FLOAT
LVAL	671:3	671:3	9	fld -> set_field_type
FIELD	671:3	671:8	10	fld -> set_field_type
LEAF_NODE	671:3	671:3	11	fld
LEAF_NODE	671:6	671:6	11	->
LEAF_NODE	671:8	671:8	11	set_field_type
ASSIGN_OP	671:23	671:23	9	=
LEAF_NODE	671:23	671:23	10	=
RVAL	671:25	671:25	9	TIFF_SETGET_C32_FLOAT
FIELD	671:25	671:25	10	TIFF_SETGET_C32_FLOAT
LEAF_NODE	671:25	671:25	11	TIFF_SETGET_C32_FLOAT
LEAF_NODE	671:46	671:46	7	;
EXPR_STATEMENT	672:3	672:46	6	fld -> get_field_type = TIFF_SETGET_C32_FLOAT ;
EXPR	672:3	672:3	7	fld -> get_field_type = TIFF_SETGET_C32_FLOAT
ASSIGN	672:3	672:25	8	fld -> get_field_type = TIFF_SETGET_C32_FLOAT
LVAL	672:3	672:3	9	fld -> get_field_type
FIELD	672:3	672:8	10	fld -> get_field_type
LEAF_NODE	672:3	672:3	11	fld
LEAF_NODE	672:6	672:6	11	->
LEAF_NODE	672:8	672:8	11	get_field_type
ASSIGN_OP	672:23	672:23	9	=
LEAF_NODE	672:23	672:23	10	=
RVAL	672:25	672:25	9	TIFF_SETGET_C32_FLOAT
FIELD	672:25	672:25	10	TIFF_SETGET_C32_FLOAT
LEAF_NODE	672:25	672:25	11	TIFF_SETGET_C32_FLOAT
LEAF_NODE	672:46	672:46	7	;
JUMP_STATEMENT	673:3	673:8	6	break DESTINATION ;
KEYWORD	673:3	673:3	7	break
LEAF_NODE	673:3	673:3	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	673:8	673:8	7	;
LABEL	674:2	674:17	6	case TIFF_SBYTE :
LEAF_NODE	674:2	674:2	7	case
LEAF_NODE	674:7	674:7	7	TIFF_SBYTE
LEAF_NODE	674:17	674:17	7	:
EXPR_STATEMENT	675:3	675:46	6	fld -> set_field_type = TIFF_SETGET_C32_SINT8 ;
EXPR	675:3	675:3	7	fld -> set_field_type = TIFF_SETGET_C32_SINT8
ASSIGN	675:3	675:25	8	fld -> set_field_type = TIFF_SETGET_C32_SINT8
LVAL	675:3	675:3	9	fld -> set_field_type
FIELD	675:3	675:8	10	fld -> set_field_type
LEAF_NODE	675:3	675:3	11	fld
LEAF_NODE	675:6	675:6	11	->
LEAF_NODE	675:8	675:8	11	set_field_type
ASSIGN_OP	675:23	675:23	9	=
LEAF_NODE	675:23	675:23	10	=
RVAL	675:25	675:25	9	TIFF_SETGET_C32_SINT8
FIELD	675:25	675:25	10	TIFF_SETGET_C32_SINT8
LEAF_NODE	675:25	675:25	11	TIFF_SETGET_C32_SINT8
LEAF_NODE	675:46	675:46	7	;
EXPR_STATEMENT	676:3	676:46	6	fld -> get_field_type = TIFF_SETGET_C32_SINT8 ;
EXPR	676:3	676:3	7	fld -> get_field_type = TIFF_SETGET_C32_SINT8
ASSIGN	676:3	676:25	8	fld -> get_field_type = TIFF_SETGET_C32_SINT8
LVAL	676:3	676:3	9	fld -> get_field_type
FIELD	676:3	676:8	10	fld -> get_field_type
LEAF_NODE	676:3	676:3	11	fld
LEAF_NODE	676:6	676:6	11	->
LEAF_NODE	676:8	676:8	11	get_field_type
ASSIGN_OP	676:23	676:23	9	=
LEAF_NODE	676:23	676:23	10	=
RVAL	676:25	676:25	9	TIFF_SETGET_C32_SINT8
FIELD	676:25	676:25	10	TIFF_SETGET_C32_SINT8
LEAF_NODE	676:25	676:25	11	TIFF_SETGET_C32_SINT8
LEAF_NODE	676:46	676:46	7	;
JUMP_STATEMENT	677:3	677:8	6	break DESTINATION ;
KEYWORD	677:3	677:3	7	break
LEAF_NODE	677:3	677:3	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	677:8	677:8	7	;
LABEL	678:2	678:18	6	case TIFF_SSHORT :
LEAF_NODE	678:2	678:2	7	case
LEAF_NODE	678:7	678:7	7	TIFF_SSHORT
LEAF_NODE	678:18	678:18	7	:
EXPR_STATEMENT	679:3	679:47	6	fld -> set_field_type = TIFF_SETGET_C32_SINT16 ;
EXPR	679:3	679:3	7	fld -> set_field_type = TIFF_SETGET_C32_SINT16
ASSIGN	679:3	679:25	8	fld -> set_field_type = TIFF_SETGET_C32_SINT16
LVAL	679:3	679:3	9	fld -> set_field_type
FIELD	679:3	679:8	10	fld -> set_field_type
LEAF_NODE	679:3	679:3	11	fld
LEAF_NODE	679:6	679:6	11	->
LEAF_NODE	679:8	679:8	11	set_field_type
ASSIGN_OP	679:23	679:23	9	=
LEAF_NODE	679:23	679:23	10	=
RVAL	679:25	679:25	9	TIFF_SETGET_C32_SINT16
FIELD	679:25	679:25	10	TIFF_SETGET_C32_SINT16
LEAF_NODE	679:25	679:25	11	TIFF_SETGET_C32_SINT16
LEAF_NODE	679:47	679:47	7	;
EXPR_STATEMENT	680:3	680:47	6	fld -> get_field_type = TIFF_SETGET_C32_SINT16 ;
EXPR	680:3	680:3	7	fld -> get_field_type = TIFF_SETGET_C32_SINT16
ASSIGN	680:3	680:25	8	fld -> get_field_type = TIFF_SETGET_C32_SINT16
LVAL	680:3	680:3	9	fld -> get_field_type
FIELD	680:3	680:8	10	fld -> get_field_type
LEAF_NODE	680:3	680:3	11	fld
LEAF_NODE	680:6	680:6	11	->
LEAF_NODE	680:8	680:8	11	get_field_type
ASSIGN_OP	680:23	680:23	9	=
LEAF_NODE	680:23	680:23	10	=
RVAL	680:25	680:25	9	TIFF_SETGET_C32_SINT16
FIELD	680:25	680:25	10	TIFF_SETGET_C32_SINT16
LEAF_NODE	680:25	680:25	11	TIFF_SETGET_C32_SINT16
LEAF_NODE	680:47	680:47	7	;
JUMP_STATEMENT	681:3	681:8	6	break DESTINATION ;
KEYWORD	681:3	681:3	7	break
LEAF_NODE	681:3	681:3	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	681:8	681:8	7	;
LABEL	682:2	682:17	6	case TIFF_SLONG :
LEAF_NODE	682:2	682:2	7	case
LEAF_NODE	682:7	682:7	7	TIFF_SLONG
LEAF_NODE	682:17	682:17	7	:
EXPR_STATEMENT	683:3	683:47	6	fld -> set_field_type = TIFF_SETGET_C32_SINT32 ;
EXPR	683:3	683:3	7	fld -> set_field_type = TIFF_SETGET_C32_SINT32
ASSIGN	683:3	683:25	8	fld -> set_field_type = TIFF_SETGET_C32_SINT32
LVAL	683:3	683:3	9	fld -> set_field_type
FIELD	683:3	683:8	10	fld -> set_field_type
LEAF_NODE	683:3	683:3	11	fld
LEAF_NODE	683:6	683:6	11	->
LEAF_NODE	683:8	683:8	11	set_field_type
ASSIGN_OP	683:23	683:23	9	=
LEAF_NODE	683:23	683:23	10	=
RVAL	683:25	683:25	9	TIFF_SETGET_C32_SINT32
FIELD	683:25	683:25	10	TIFF_SETGET_C32_SINT32
LEAF_NODE	683:25	683:25	11	TIFF_SETGET_C32_SINT32
LEAF_NODE	683:47	683:47	7	;
EXPR_STATEMENT	684:3	684:47	6	fld -> get_field_type = TIFF_SETGET_C32_SINT32 ;
EXPR	684:3	684:3	7	fld -> get_field_type = TIFF_SETGET_C32_SINT32
ASSIGN	684:3	684:25	8	fld -> get_field_type = TIFF_SETGET_C32_SINT32
LVAL	684:3	684:3	9	fld -> get_field_type
FIELD	684:3	684:8	10	fld -> get_field_type
LEAF_NODE	684:3	684:3	11	fld
LEAF_NODE	684:6	684:6	11	->
LEAF_NODE	684:8	684:8	11	get_field_type
ASSIGN_OP	684:23	684:23	9	=
LEAF_NODE	684:23	684:23	10	=
RVAL	684:25	684:25	9	TIFF_SETGET_C32_SINT32
FIELD	684:25	684:25	10	TIFF_SETGET_C32_SINT32
LEAF_NODE	684:25	684:25	11	TIFF_SETGET_C32_SINT32
LEAF_NODE	684:47	684:47	7	;
JUMP_STATEMENT	685:3	685:8	6	break DESTINATION ;
KEYWORD	685:3	685:3	7	break
LEAF_NODE	685:3	685:3	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	685:8	685:8	7	;
LABEL	686:2	686:18	6	case TIFF_DOUBLE :
LEAF_NODE	686:2	686:2	7	case
LEAF_NODE	686:7	686:7	7	TIFF_DOUBLE
LEAF_NODE	686:18	686:18	7	:
EXPR_STATEMENT	687:3	687:47	6	fld -> set_field_type = TIFF_SETGET_C32_DOUBLE ;
EXPR	687:3	687:3	7	fld -> set_field_type = TIFF_SETGET_C32_DOUBLE
ASSIGN	687:3	687:25	8	fld -> set_field_type = TIFF_SETGET_C32_DOUBLE
LVAL	687:3	687:3	9	fld -> set_field_type
FIELD	687:3	687:8	10	fld -> set_field_type
LEAF_NODE	687:3	687:3	11	fld
LEAF_NODE	687:6	687:6	11	->
LEAF_NODE	687:8	687:8	11	set_field_type
ASSIGN_OP	687:23	687:23	9	=
LEAF_NODE	687:23	687:23	10	=
RVAL	687:25	687:25	9	TIFF_SETGET_C32_DOUBLE
FIELD	687:25	687:25	10	TIFF_SETGET_C32_DOUBLE
LEAF_NODE	687:25	687:25	11	TIFF_SETGET_C32_DOUBLE
LEAF_NODE	687:47	687:47	7	;
EXPR_STATEMENT	688:3	688:47	6	fld -> get_field_type = TIFF_SETGET_C32_DOUBLE ;
EXPR	688:3	688:3	7	fld -> get_field_type = TIFF_SETGET_C32_DOUBLE
ASSIGN	688:3	688:25	8	fld -> get_field_type = TIFF_SETGET_C32_DOUBLE
LVAL	688:3	688:3	9	fld -> get_field_type
FIELD	688:3	688:8	10	fld -> get_field_type
LEAF_NODE	688:3	688:3	11	fld
LEAF_NODE	688:6	688:6	11	->
LEAF_NODE	688:8	688:8	11	get_field_type
ASSIGN_OP	688:23	688:23	9	=
LEAF_NODE	688:23	688:23	10	=
RVAL	688:25	688:25	9	TIFF_SETGET_C32_DOUBLE
FIELD	688:25	688:25	10	TIFF_SETGET_C32_DOUBLE
LEAF_NODE	688:25	688:25	11	TIFF_SETGET_C32_DOUBLE
LEAF_NODE	688:47	688:47	7	;
JUMP_STATEMENT	689:3	689:8	6	break DESTINATION ;
KEYWORD	689:3	689:3	7	break
LEAF_NODE	689:3	689:3	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	689:8	689:8	7	;
LABEL	690:2	690:15	6	case TIFF_IFD :
LEAF_NODE	690:2	690:2	7	case
LEAF_NODE	690:7	690:7	7	TIFF_IFD
LEAF_NODE	690:15	690:15	7	:
LABEL	691:2	691:16	6	case TIFF_IFD8 :
LEAF_NODE	691:2	691:2	7	case
LEAF_NODE	691:7	691:7	7	TIFF_IFD8
LEAF_NODE	691:16	691:16	7	:
EXPR_STATEMENT	692:3	692:45	6	fld -> set_field_type = TIFF_SETGET_C32_IFD8 ;
EXPR	692:3	692:3	7	fld -> set_field_type = TIFF_SETGET_C32_IFD8
ASSIGN	692:3	692:25	8	fld -> set_field_type = TIFF_SETGET_C32_IFD8
LVAL	692:3	692:3	9	fld -> set_field_type
FIELD	692:3	692:8	10	fld -> set_field_type
LEAF_NODE	692:3	692:3	11	fld
LEAF_NODE	692:6	692:6	11	->
LEAF_NODE	692:8	692:8	11	set_field_type
ASSIGN_OP	692:23	692:23	9	=
LEAF_NODE	692:23	692:23	10	=
RVAL	692:25	692:25	9	TIFF_SETGET_C32_IFD8
FIELD	692:25	692:25	10	TIFF_SETGET_C32_IFD8
LEAF_NODE	692:25	692:25	11	TIFF_SETGET_C32_IFD8
LEAF_NODE	692:45	692:45	7	;
EXPR_STATEMENT	693:3	693:45	6	fld -> get_field_type = TIFF_SETGET_C32_IFD8 ;
EXPR	693:3	693:3	7	fld -> get_field_type = TIFF_SETGET_C32_IFD8
ASSIGN	693:3	693:25	8	fld -> get_field_type = TIFF_SETGET_C32_IFD8
LVAL	693:3	693:3	9	fld -> get_field_type
FIELD	693:3	693:8	10	fld -> get_field_type
LEAF_NODE	693:3	693:3	11	fld
LEAF_NODE	693:6	693:6	11	->
LEAF_NODE	693:8	693:8	11	get_field_type
ASSIGN_OP	693:23	693:23	9	=
LEAF_NODE	693:23	693:23	10	=
RVAL	693:25	693:25	9	TIFF_SETGET_C32_IFD8
FIELD	693:25	693:25	10	TIFF_SETGET_C32_IFD8
LEAF_NODE	693:25	693:25	11	TIFF_SETGET_C32_IFD8
LEAF_NODE	693:45	693:45	7	;
JUMP_STATEMENT	694:3	694:8	6	break DESTINATION ;
KEYWORD	694:3	694:3	7	break
LEAF_NODE	694:3	694:3	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	694:8	694:8	7	;
LABEL	695:2	695:17	6	case TIFF_LONG8 :
LEAF_NODE	695:2	695:2	7	case
LEAF_NODE	695:7	695:7	7	TIFF_LONG8
LEAF_NODE	695:17	695:17	7	:
EXPR_STATEMENT	696:3	696:47	6	fld -> set_field_type = TIFF_SETGET_C32_UINT64 ;
EXPR	696:3	696:3	7	fld -> set_field_type = TIFF_SETGET_C32_UINT64
ASSIGN	696:3	696:25	8	fld -> set_field_type = TIFF_SETGET_C32_UINT64
LVAL	696:3	696:3	9	fld -> set_field_type
FIELD	696:3	696:8	10	fld -> set_field_type
LEAF_NODE	696:3	696:3	11	fld
LEAF_NODE	696:6	696:6	11	->
LEAF_NODE	696:8	696:8	11	set_field_type
ASSIGN_OP	696:23	696:23	9	=
LEAF_NODE	696:23	696:23	10	=
RVAL	696:25	696:25	9	TIFF_SETGET_C32_UINT64
FIELD	696:25	696:25	10	TIFF_SETGET_C32_UINT64
LEAF_NODE	696:25	696:25	11	TIFF_SETGET_C32_UINT64
LEAF_NODE	696:47	696:47	7	;
EXPR_STATEMENT	697:3	697:47	6	fld -> get_field_type = TIFF_SETGET_C32_UINT64 ;
EXPR	697:3	697:3	7	fld -> get_field_type = TIFF_SETGET_C32_UINT64
ASSIGN	697:3	697:25	8	fld -> get_field_type = TIFF_SETGET_C32_UINT64
LVAL	697:3	697:3	9	fld -> get_field_type
FIELD	697:3	697:8	10	fld -> get_field_type
LEAF_NODE	697:3	697:3	11	fld
LEAF_NODE	697:6	697:6	11	->
LEAF_NODE	697:8	697:8	11	get_field_type
ASSIGN_OP	697:23	697:23	9	=
LEAF_NODE	697:23	697:23	10	=
RVAL	697:25	697:25	9	TIFF_SETGET_C32_UINT64
FIELD	697:25	697:25	10	TIFF_SETGET_C32_UINT64
LEAF_NODE	697:25	697:25	11	TIFF_SETGET_C32_UINT64
LEAF_NODE	697:47	697:47	7	;
JUMP_STATEMENT	698:3	698:8	6	break DESTINATION ;
KEYWORD	698:3	698:3	7	break
LEAF_NODE	698:3	698:3	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	698:8	698:8	7	;
LABEL	699:2	699:18	6	case TIFF_SLONG8 :
LEAF_NODE	699:2	699:2	7	case
LEAF_NODE	699:7	699:7	7	TIFF_SLONG8
LEAF_NODE	699:18	699:18	7	:
EXPR_STATEMENT	700:3	700:47	6	fld -> set_field_type = TIFF_SETGET_C32_SINT64 ;
EXPR	700:3	700:3	7	fld -> set_field_type = TIFF_SETGET_C32_SINT64
ASSIGN	700:3	700:25	8	fld -> set_field_type = TIFF_SETGET_C32_SINT64
LVAL	700:3	700:3	9	fld -> set_field_type
FIELD	700:3	700:8	10	fld -> set_field_type
LEAF_NODE	700:3	700:3	11	fld
LEAF_NODE	700:6	700:6	11	->
LEAF_NODE	700:8	700:8	11	set_field_type
ASSIGN_OP	700:23	700:23	9	=
LEAF_NODE	700:23	700:23	10	=
RVAL	700:25	700:25	9	TIFF_SETGET_C32_SINT64
FIELD	700:25	700:25	10	TIFF_SETGET_C32_SINT64
LEAF_NODE	700:25	700:25	11	TIFF_SETGET_C32_SINT64
LEAF_NODE	700:47	700:47	7	;
EXPR_STATEMENT	701:3	701:47	6	fld -> get_field_type = TIFF_SETGET_C32_SINT64 ;
EXPR	701:3	701:3	7	fld -> get_field_type = TIFF_SETGET_C32_SINT64
ASSIGN	701:3	701:25	8	fld -> get_field_type = TIFF_SETGET_C32_SINT64
LVAL	701:3	701:3	9	fld -> get_field_type
FIELD	701:3	701:8	10	fld -> get_field_type
LEAF_NODE	701:3	701:3	11	fld
LEAF_NODE	701:6	701:6	11	->
LEAF_NODE	701:8	701:8	11	get_field_type
ASSIGN_OP	701:23	701:23	9	=
LEAF_NODE	701:23	701:23	10	=
RVAL	701:25	701:25	9	TIFF_SETGET_C32_SINT64
FIELD	701:25	701:25	10	TIFF_SETGET_C32_SINT64
LEAF_NODE	701:25	701:25	11	TIFF_SETGET_C32_SINT64
LEAF_NODE	701:47	701:47	7	;
JUMP_STATEMENT	702:3	702:8	6	break DESTINATION ;
KEYWORD	702:3	702:3	7	break
LEAF_NODE	702:3	702:3	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	702:8	702:8	7	;
LABEL	703:2	703:9	6	default :
LEAF_NODE	703:2	703:2	7	default
LEAF_NODE	703:9	703:9	7	:
EXPR_STATEMENT	704:3	704:46	6	fld -> set_field_type = TIFF_SETGET_UNDEFINED ;
EXPR	704:3	704:3	7	fld -> set_field_type = TIFF_SETGET_UNDEFINED
ASSIGN	704:3	704:25	8	fld -> set_field_type = TIFF_SETGET_UNDEFINED
LVAL	704:3	704:3	9	fld -> set_field_type
FIELD	704:3	704:8	10	fld -> set_field_type
LEAF_NODE	704:3	704:3	11	fld
LEAF_NODE	704:6	704:6	11	->
LEAF_NODE	704:8	704:8	11	set_field_type
ASSIGN_OP	704:23	704:23	9	=
LEAF_NODE	704:23	704:23	10	=
RVAL	704:25	704:25	9	TIFF_SETGET_UNDEFINED
FIELD	704:25	704:25	10	TIFF_SETGET_UNDEFINED
LEAF_NODE	704:25	704:25	11	TIFF_SETGET_UNDEFINED
LEAF_NODE	704:46	704:46	7	;
EXPR_STATEMENT	705:3	705:46	6	fld -> get_field_type = TIFF_SETGET_UNDEFINED ;
EXPR	705:3	705:3	7	fld -> get_field_type = TIFF_SETGET_UNDEFINED
ASSIGN	705:3	705:25	8	fld -> get_field_type = TIFF_SETGET_UNDEFINED
LVAL	705:3	705:3	9	fld -> get_field_type
FIELD	705:3	705:8	10	fld -> get_field_type
LEAF_NODE	705:3	705:3	11	fld
LEAF_NODE	705:6	705:6	11	->
LEAF_NODE	705:8	705:8	11	get_field_type
ASSIGN_OP	705:23	705:23	9	=
LEAF_NODE	705:23	705:23	10	=
RVAL	705:25	705:25	9	TIFF_SETGET_UNDEFINED
FIELD	705:25	705:25	10	TIFF_SETGET_UNDEFINED
LEAF_NODE	705:25	705:25	11	TIFF_SETGET_UNDEFINED
LEAF_NODE	705:46	705:46	7	;
JUMP_STATEMENT	706:3	706:8	6	break DESTINATION ;
KEYWORD	706:3	706:3	7	break
LEAF_NODE	706:3	706:3	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	706:8	706:8	7	;
LEAF_NODE	707:1	707:1	5	}
EXPR_STATEMENT	708:1	708:30	3	fld -> field_bit = FIELD_CUSTOM ;
EXPR	708:1	708:1	4	fld -> field_bit = FIELD_CUSTOM
ASSIGN	708:1	708:18	5	fld -> field_bit = FIELD_CUSTOM
LVAL	708:1	708:1	6	fld -> field_bit
FIELD	708:1	708:6	7	fld -> field_bit
LEAF_NODE	708:1	708:1	8	fld
LEAF_NODE	708:4	708:4	8	->
LEAF_NODE	708:6	708:6	8	field_bit
ASSIGN_OP	708:16	708:16	6	=
LEAF_NODE	708:16	708:16	7	=
RVAL	708:18	708:18	6	FIELD_CUSTOM
FIELD	708:18	708:18	7	FIELD_CUSTOM
LEAF_NODE	708:18	708:18	8	FIELD_CUSTOM
LEAF_NODE	708:30	708:30	4	;
EXPR_STATEMENT	709:1	709:29	3	fld -> field_oktochange = TRUE ;
EXPR	709:1	709:1	4	fld -> field_oktochange = TRUE
ASSIGN	709:1	709:25	5	fld -> field_oktochange = TRUE
LVAL	709:1	709:1	6	fld -> field_oktochange
FIELD	709:1	709:6	7	fld -> field_oktochange
LEAF_NODE	709:1	709:1	8	fld
LEAF_NODE	709:4	709:4	8	->
LEAF_NODE	709:6	709:6	8	field_oktochange
ASSIGN_OP	709:23	709:23	6	=
LEAF_NODE	709:23	709:23	7	=
RVAL	709:25	709:25	6	TRUE
FIELD	709:25	709:25	7	TRUE
LEAF_NODE	709:25	709:25	8	TRUE
LEAF_NODE	709:29	709:29	4	;
EXPR_STATEMENT	710:1	710:28	3	fld -> field_passcount = TRUE ;
EXPR	710:1	710:1	4	fld -> field_passcount = TRUE
ASSIGN	710:1	710:24	5	fld -> field_passcount = TRUE
LVAL	710:1	710:1	6	fld -> field_passcount
FIELD	710:1	710:6	7	fld -> field_passcount
LEAF_NODE	710:1	710:1	8	fld
LEAF_NODE	710:4	710:4	8	->
LEAF_NODE	710:6	710:6	8	field_passcount
ASSIGN_OP	710:22	710:22	6	=
LEAF_NODE	710:22	710:22	7	=
RVAL	710:24	710:24	6	TRUE
FIELD	710:24	710:24	7	TRUE
LEAF_NODE	710:24	710:24	8	TRUE
LEAF_NODE	710:28	710:28	4	;
EXPR_STATEMENT	711:1	711:43	3	fld -> field_name = ( char * ) _TIFFmalloc ( 32 ) ;
EXPR	711:1	711:1	4	fld -> field_name = ( char * ) _TIFFmalloc ( 32 )
ASSIGN	711:1	711:19	5	fld -> field_name = ( char * ) _TIFFmalloc ( 32 )
LVAL	711:1	711:1	6	fld -> field_name
FIELD	711:1	711:6	7	fld -> field_name
LEAF_NODE	711:1	711:1	8	fld
LEAF_NODE	711:4	711:4	8	->
LEAF_NODE	711:6	711:6	8	field_name
ASSIGN_OP	711:17	711:17	6	=
LEAF_NODE	711:17	711:17	7	=
RVAL	711:19	711:28	6	( char * ) _TIFFmalloc ( 32 )
LEAF_NODE	711:19	711:19	7	(
TYPE_NAME	711:20	711:20	7	char
LEAF_NODE	711:20	711:20	8	char
LEAF_NODE	711:25	711:25	7	*
LEAF_NODE	711:26	711:26	7	)
FUNCTION_CALL	711:28	711:42	7	_TIFFmalloc ( 32 )
CALLEE	711:28	711:28	8	_TIFFmalloc
LEAF_NODE	711:28	711:28	9	_TIFFmalloc
LEAF_NODE	711:39	711:39	8	(
ARGUMENT	711:40	711:40	8	32
FIELD	711:40	711:40	9	32
LEAF_NODE	711:40	711:40	10	32
LEAF_NODE	711:42	711:42	8	)
LEAF_NODE	711:43	711:43	4	;
SELECTION	712:1	712:30	3	
KEYWORD	712:1	712:1	4	if
LEAF_NODE	712:1	712:1	5	if
LEAF_NODE	712:4	712:4	4	(
CONDITION	712:5	712:5	4	fld -> field_name == NULL
EXPR	712:5	712:24	5	fld -> field_name == NULL
FIELD	712:5	712:10	6	fld -> field_name
LEAF_NODE	712:5	712:5	7	fld
LEAF_NODE	712:8	712:8	7	->
LEAF_NODE	712:10	712:10	7	field_name
EQ_OPERATOR	712:21	712:21	6	==
LEAF_NODE	712:21	712:21	7	==
FIELD	712:24	712:24	6	NULL
LEAF_NODE	712:24	712:24	7	NULL
LEAF_NODE	712:28	712:28	4	)
STATEMENTS	712:30	715:1	4	
LEAF_NODE	712:30	712:30	5	{
STATEMENTS	713:5	714:5	5	
EXPR_STATEMENT	713:5	713:19	6	_TIFFfree ( fld ) ;
EXPR	713:5	713:5	7	_TIFFfree ( fld )
FUNCTION_CALL	713:5	713:18	8	_TIFFfree ( fld )
CALLEE	713:5	713:5	9	_TIFFfree
LEAF_NODE	713:5	713:5	10	_TIFFfree
LEAF_NODE	713:14	713:14	9	(
ARGUMENT	713:15	713:15	9	fld
FIELD	713:15	713:15	10	fld
LEAF_NODE	713:15	713:15	11	fld
LEAF_NODE	713:18	713:18	9	)
LEAF_NODE	713:19	713:19	7	;
JUMP_STATEMENT	714:5	714:16	6	return NULL ;
KEYWORD	714:5	714:5	7	return
LEAF_NODE	714:5	714:5	8	return
DESTINATION	714:12	714:12	7	NULL
EXPR	714:12	714:12	8	NULL
FIELD	714:12	714:12	9	NULL
LEAF_NODE	714:12	714:12	10	NULL
LEAF_NODE	714:16	714:16	7	;
LEAF_NODE	715:1	715:1	5	}
EXPR_STATEMENT	716:1	716:28	3	fld -> field_subfields = NULL ;
EXPR	716:1	716:1	4	fld -> field_subfields = NULL
ASSIGN	716:1	716:24	5	fld -> field_subfields = NULL
LVAL	716:1	716:1	6	fld -> field_subfields
FIELD	716:1	716:6	7	fld -> field_subfields
LEAF_NODE	716:1	716:1	8	fld
LEAF_NODE	716:4	716:4	8	->
LEAF_NODE	716:6	716:6	8	field_subfields
ASSIGN_OP	716:22	716:22	6	=
LEAF_NODE	716:22	716:22	7	=
RVAL	716:24	716:24	6	NULL
FIELD	716:24	716:24	7	NULL
LEAF_NODE	716:24	716:24	8	NULL
LEAF_NODE	716:28	716:28	4	;
EXPR_STATEMENT	722:1	722:58	3	( void ) snprintf ( fld -> field_name , 32 , "Tag %d" , ( int ) tag ) ;
EXPR	722:1	722:8	4	( void ) snprintf ( fld -> field_name , 32 , "Tag %d" , ( int ) tag )
LEAF_NODE	722:1	722:1	5	(
TYPE_NAME	722:2	722:2	5	void
LEAF_NODE	722:2	722:2	6	void
LEAF_NODE	722:6	722:6	5	)
FUNCTION_CALL	722:8	722:57	5	snprintf ( fld -> field_name , 32 , "Tag %d" , ( int ) tag )
CALLEE	722:8	722:8	6	snprintf
LEAF_NODE	722:8	722:8	7	snprintf
LEAF_NODE	722:16	722:16	6	(
ARGUMENT	722:17	722:17	6	fld -> field_name
FIELD	722:17	722:22	7	fld -> field_name
LEAF_NODE	722:17	722:17	8	fld
LEAF_NODE	722:20	722:20	8	->
LEAF_NODE	722:22	722:22	8	field_name
LEAF_NODE	722:32	722:32	6	,
ARGUMENT	722:34	722:34	6	32
FIELD	722:34	722:34	7	32
LEAF_NODE	722:34	722:34	8	32
LEAF_NODE	722:36	722:36	6	,
ARGUMENT	722:38	722:38	6	"Tag %d"
FIELD	722:38	722:38	7	"Tag %d"
LEAF_NODE	722:38	722:38	8	"Tag %d"
LEAF_NODE	722:46	722:46	6	,
ARGUMENT	722:48	722:54	6	( int ) tag
LEAF_NODE	722:48	722:48	7	(
TYPE_NAME	722:49	722:49	7	int
LEAF_NODE	722:49	722:49	8	int
LEAF_NODE	722:52	722:52	7	)
FIELD	722:54	722:54	7	tag
LEAF_NODE	722:54	722:54	8	tag
LEAF_NODE	722:57	722:57	6	)
LEAF_NODE	722:58	722:58	4	;
JUMP_STATEMENT	724:1	724:11	3	return fld ;
KEYWORD	724:1	724:1	4	return
LEAF_NODE	724:1	724:1	5	return
DESTINATION	724:8	724:8	4	fld
EXPR	724:8	724:8	5	fld
FIELD	724:8	724:8	6	fld
LEAF_NODE	724:8	724:8	7	fld
LEAF_NODE	724:11	724:11	4	;
LEAF_NODE	725:0	725:0	2	}
FUNCTION_DEF	734:0	885:0	1	
RETURN_TYPE	734:0	734:7	2	static TIFFSetGetFieldType
LEAF_NODE	734:0	734:0	3	static
TYPE_NAME	734:7	734:7	3	TIFFSetGetFieldType
LEAF_NODE	734:7	734:7	4	TIFFSetGetFieldType
FUNCTION_NAME	735:0	735:0	2	_TIFFSetGetType
LEAF_NODE	735:0	735:0	3	_TIFFSetGetType
PARAMETER_LIST	735:15	735:71	2	( TIFFDataType type , short count , unsigned char passcount )
LEAF_NODE	735:15	735:15	3	(
PARAMETER_DECL	735:16	735:29	3	TIFFDataType type
TYPE	735:16	735:16	4	TIFFDataType
TYPE_NAME	735:16	735:16	5	TIFFDataType
LEAF_NODE	735:16	735:16	6	TIFFDataType
NAME	735:29	735:29	4	type
LEAF_NODE	735:29	735:29	5	type
LEAF_NODE	735:33	735:33	3	,
PARAMETER_DECL	735:35	735:41	3	short count
TYPE	735:35	735:35	4	short
TYPE_NAME	735:35	735:35	5	short
LEAF_NODE	735:35	735:35	6	short
NAME	735:41	735:41	4	count
LEAF_NODE	735:41	735:41	5	count
LEAF_NODE	735:46	735:46	3	,
PARAMETER_DECL	735:48	735:62	3	unsigned char passcount
TYPE	735:48	735:48	4	unsigned char
TYPE_NAME	735:48	735:57	5	unsigned char
LEAF_NODE	735:48	735:48	6	unsigned
LEAF_NODE	735:57	735:57	6	char
NAME	735:62	735:62	4	passcount
LEAF_NODE	735:62	735:62	5	passcount
LEAF_NODE	735:71	735:71	3	)
LEAF_NODE	736:0	736:0	2	{
STATEMENTS	737:1	884:1	2	
SELECTION	737:1	738:2	3	
KEYWORD	737:1	737:1	4	if
LEAF_NODE	737:1	737:1	5	if
LEAF_NODE	737:4	737:4	4	(
CONDITION	737:5	737:5	4	type == TIFF_ASCII && count == TIFF_VARIABLE && passcount == 0
EXPR	737:5	737:5	5	type == TIFF_ASCII && count == TIFF_VARIABLE && passcount == 0
AND	737:5	737:27	6	type == TIFF_ASCII && count == TIFF_VARIABLE && passcount == 0
EXPR	737:5	737:13	7	type == TIFF_ASCII
FIELD	737:5	737:5	8	type
LEAF_NODE	737:5	737:5	9	type
EQ_OPERATOR	737:10	737:10	8	==
LEAF_NODE	737:10	737:10	9	==
FIELD	737:13	737:13	8	TIFF_ASCII
LEAF_NODE	737:13	737:13	9	TIFF_ASCII
LEAF_NODE	737:24	737:24	7	&&
EXPR	737:27	737:27	7	count == TIFF_VARIABLE && passcount == 0
AND	737:27	737:53	8	count == TIFF_VARIABLE && passcount == 0
EXPR	737:27	737:36	9	count == TIFF_VARIABLE
FIELD	737:27	737:27	10	count
LEAF_NODE	737:27	737:27	11	count
EQ_OPERATOR	737:33	737:33	10	==
LEAF_NODE	737:33	737:33	11	==
FIELD	737:36	737:36	10	TIFF_VARIABLE
LEAF_NODE	737:36	737:36	11	TIFF_VARIABLE
LEAF_NODE	737:50	737:50	9	&&
EXPR	737:53	737:66	9	passcount == 0
FIELD	737:53	737:53	10	passcount
LEAF_NODE	737:53	737:53	11	passcount
EQ_OPERATOR	737:63	737:63	10	==
LEAF_NODE	737:63	737:63	11	==
FIELD	737:66	737:66	10	0
LEAF_NODE	737:66	737:66	11	0
LEAF_NODE	737:67	737:67	4	)
STATEMENTS	738:2	738:2	4	
JUMP_STATEMENT	738:2	738:26	5	return TIFF_SETGET_ASCII ;
KEYWORD	738:2	738:2	6	return
LEAF_NODE	738:2	738:2	7	return
DESTINATION	738:9	738:9	6	TIFF_SETGET_ASCII
EXPR	738:9	738:9	7	TIFF_SETGET_ASCII
FIELD	738:9	738:9	8	TIFF_SETGET_ASCII
LEAF_NODE	738:9	738:9	9	TIFF_SETGET_ASCII
LEAF_NODE	738:26	738:26	6	;
SELECTION	740:1	740:6	3	
KEYWORD	740:1	740:1	4	else
LEAF_NODE	740:1	740:1	5	else
STATEMENTS	740:6	740:6	4	
SELECTION	740:6	740:40	5	
KEYWORD	740:6	740:6	6	if
LEAF_NODE	740:6	740:6	7	if
LEAF_NODE	740:9	740:9	6	(
CONDITION	740:10	740:10	6	count == 1 && passcount == 0
EXPR	740:10	740:10	7	count == 1 && passcount == 0
AND	740:10	740:24	8	count == 1 && passcount == 0
EXPR	740:10	740:19	9	count == 1
FIELD	740:10	740:10	10	count
LEAF_NODE	740:10	740:10	11	count
EQ_OPERATOR	740:16	740:16	10	==
LEAF_NODE	740:16	740:16	11	==
FIELD	740:19	740:19	10	1
LEAF_NODE	740:19	740:19	11	1
LEAF_NODE	740:21	740:21	9	&&
EXPR	740:24	740:37	9	passcount == 0
FIELD	740:24	740:24	10	passcount
LEAF_NODE	740:24	740:24	11	passcount
EQ_OPERATOR	740:34	740:34	10	==
LEAF_NODE	740:34	740:34	11	==
FIELD	740:37	740:37	10	0
LEAF_NODE	740:37	740:37	11	0
LEAF_NODE	740:38	740:38	6	)
STATEMENTS	740:40	774:1	6	
LEAF_NODE	740:40	740:40	7	{
STATEMENTS	741:2	741:2	7	
SELECTION	741:2	742:2	8	
KEYWORD	741:2	741:2	9	switch
LEAF_NODE	741:2	741:2	10	switch
LEAF_NODE	741:9	741:9	9	(
CONDITION	741:10	741:10	9	type
EXPR	741:10	741:10	10	type
FIELD	741:10	741:10	11	type
LEAF_NODE	741:10	741:10	12	type
LEAF_NODE	741:14	741:14	9	)
STATEMENTS	742:2	773:2	9	
LEAF_NODE	742:2	742:2	10	{
STATEMENTS	743:3	772:4	10	
LABEL	743:3	743:17	11	case TIFF_BYTE :
LEAF_NODE	743:3	743:3	12	case
LEAF_NODE	743:8	743:8	12	TIFF_BYTE
LEAF_NODE	743:17	743:17	12	:
LABEL	744:3	744:22	11	case TIFF_UNDEFINED :
LEAF_NODE	744:3	744:3	12	case
LEAF_NODE	744:8	744:8	12	TIFF_UNDEFINED
LEAF_NODE	744:22	744:22	12	:
JUMP_STATEMENT	745:4	745:28	11	return TIFF_SETGET_UINT8 ;
KEYWORD	745:4	745:4	12	return
LEAF_NODE	745:4	745:4	13	return
DESTINATION	745:11	745:11	12	TIFF_SETGET_UINT8
EXPR	745:11	745:11	13	TIFF_SETGET_UINT8
FIELD	745:11	745:11	14	TIFF_SETGET_UINT8
LEAF_NODE	745:11	745:11	15	TIFF_SETGET_UINT8
LEAF_NODE	745:28	745:28	12	;
LABEL	746:3	746:18	11	case TIFF_ASCII :
LEAF_NODE	746:3	746:3	12	case
LEAF_NODE	746:8	746:8	12	TIFF_ASCII
LEAF_NODE	746:18	746:18	12	:
JUMP_STATEMENT	747:4	747:28	11	return TIFF_SETGET_ASCII ;
KEYWORD	747:4	747:4	12	return
LEAF_NODE	747:4	747:4	13	return
DESTINATION	747:11	747:11	12	TIFF_SETGET_ASCII
EXPR	747:11	747:11	13	TIFF_SETGET_ASCII
FIELD	747:11	747:11	14	TIFF_SETGET_ASCII
LEAF_NODE	747:11	747:11	15	TIFF_SETGET_ASCII
LEAF_NODE	747:28	747:28	12	;
LABEL	748:3	748:18	11	case TIFF_SHORT :
LEAF_NODE	748:3	748:3	12	case
LEAF_NODE	748:8	748:8	12	TIFF_SHORT
LEAF_NODE	748:18	748:18	12	:
JUMP_STATEMENT	749:4	749:29	11	return TIFF_SETGET_UINT16 ;
KEYWORD	749:4	749:4	12	return
LEAF_NODE	749:4	749:4	13	return
DESTINATION	749:11	749:11	12	TIFF_SETGET_UINT16
EXPR	749:11	749:11	13	TIFF_SETGET_UINT16
FIELD	749:11	749:11	14	TIFF_SETGET_UINT16
LEAF_NODE	749:11	749:11	15	TIFF_SETGET_UINT16
LEAF_NODE	749:29	749:29	12	;
LABEL	750:3	750:17	11	case TIFF_LONG :
LEAF_NODE	750:3	750:3	12	case
LEAF_NODE	750:8	750:8	12	TIFF_LONG
LEAF_NODE	750:17	750:17	12	:
JUMP_STATEMENT	751:4	751:29	11	return TIFF_SETGET_UINT32 ;
KEYWORD	751:4	751:4	12	return
LEAF_NODE	751:4	751:4	13	return
DESTINATION	751:11	751:11	12	TIFF_SETGET_UINT32
EXPR	751:11	751:11	13	TIFF_SETGET_UINT32
FIELD	751:11	751:11	14	TIFF_SETGET_UINT32
LEAF_NODE	751:11	751:11	15	TIFF_SETGET_UINT32
LEAF_NODE	751:29	751:29	12	;
LABEL	752:3	752:21	11	case TIFF_RATIONAL :
LEAF_NODE	752:3	752:3	12	case
LEAF_NODE	752:8	752:8	12	TIFF_RATIONAL
LEAF_NODE	752:21	752:21	12	:
LABEL	753:3	753:22	11	case TIFF_SRATIONAL :
LEAF_NODE	753:3	753:3	12	case
LEAF_NODE	753:8	753:8	12	TIFF_SRATIONAL
LEAF_NODE	753:22	753:22	12	:
LABEL	754:3	754:18	11	case TIFF_FLOAT :
LEAF_NODE	754:3	754:3	12	case
LEAF_NODE	754:8	754:8	12	TIFF_FLOAT
LEAF_NODE	754:18	754:18	12	:
JUMP_STATEMENT	755:4	755:28	11	return TIFF_SETGET_FLOAT ;
KEYWORD	755:4	755:4	12	return
LEAF_NODE	755:4	755:4	13	return
DESTINATION	755:11	755:11	12	TIFF_SETGET_FLOAT
EXPR	755:11	755:11	13	TIFF_SETGET_FLOAT
FIELD	755:11	755:11	14	TIFF_SETGET_FLOAT
LEAF_NODE	755:11	755:11	15	TIFF_SETGET_FLOAT
LEAF_NODE	755:28	755:28	12	;
LABEL	756:3	756:18	11	case TIFF_SBYTE :
LEAF_NODE	756:3	756:3	12	case
LEAF_NODE	756:8	756:8	12	TIFF_SBYTE
LEAF_NODE	756:18	756:18	12	:
JUMP_STATEMENT	757:4	757:28	11	return TIFF_SETGET_SINT8 ;
KEYWORD	757:4	757:4	12	return
LEAF_NODE	757:4	757:4	13	return
DESTINATION	757:11	757:11	12	TIFF_SETGET_SINT8
EXPR	757:11	757:11	13	TIFF_SETGET_SINT8
FIELD	757:11	757:11	14	TIFF_SETGET_SINT8
LEAF_NODE	757:11	757:11	15	TIFF_SETGET_SINT8
LEAF_NODE	757:28	757:28	12	;
LABEL	758:3	758:19	11	case TIFF_SSHORT :
LEAF_NODE	758:3	758:3	12	case
LEAF_NODE	758:8	758:8	12	TIFF_SSHORT
LEAF_NODE	758:19	758:19	12	:
JUMP_STATEMENT	759:4	759:29	11	return TIFF_SETGET_SINT16 ;
KEYWORD	759:4	759:4	12	return
LEAF_NODE	759:4	759:4	13	return
DESTINATION	759:11	759:11	12	TIFF_SETGET_SINT16
EXPR	759:11	759:11	13	TIFF_SETGET_SINT16
FIELD	759:11	759:11	14	TIFF_SETGET_SINT16
LEAF_NODE	759:11	759:11	15	TIFF_SETGET_SINT16
LEAF_NODE	759:29	759:29	12	;
LABEL	760:3	760:18	11	case TIFF_SLONG :
LEAF_NODE	760:3	760:3	12	case
LEAF_NODE	760:8	760:8	12	TIFF_SLONG
LEAF_NODE	760:18	760:18	12	:
JUMP_STATEMENT	761:4	761:29	11	return TIFF_SETGET_SINT32 ;
KEYWORD	761:4	761:4	12	return
LEAF_NODE	761:4	761:4	13	return
DESTINATION	761:11	761:11	12	TIFF_SETGET_SINT32
EXPR	761:11	761:11	13	TIFF_SETGET_SINT32
FIELD	761:11	761:11	14	TIFF_SETGET_SINT32
LEAF_NODE	761:11	761:11	15	TIFF_SETGET_SINT32
LEAF_NODE	761:29	761:29	12	;
LABEL	762:3	762:19	11	case TIFF_DOUBLE :
LEAF_NODE	762:3	762:3	12	case
LEAF_NODE	762:8	762:8	12	TIFF_DOUBLE
LEAF_NODE	762:19	762:19	12	:
JUMP_STATEMENT	763:4	763:29	11	return TIFF_SETGET_DOUBLE ;
KEYWORD	763:4	763:4	12	return
LEAF_NODE	763:4	763:4	13	return
DESTINATION	763:11	763:11	12	TIFF_SETGET_DOUBLE
EXPR	763:11	763:11	13	TIFF_SETGET_DOUBLE
FIELD	763:11	763:11	14	TIFF_SETGET_DOUBLE
LEAF_NODE	763:11	763:11	15	TIFF_SETGET_DOUBLE
LEAF_NODE	763:29	763:29	12	;
LABEL	764:3	764:16	11	case TIFF_IFD :
LEAF_NODE	764:3	764:3	12	case
LEAF_NODE	764:8	764:8	12	TIFF_IFD
LEAF_NODE	764:16	764:16	12	:
LABEL	765:3	765:17	11	case TIFF_IFD8 :
LEAF_NODE	765:3	765:3	12	case
LEAF_NODE	765:8	765:8	12	TIFF_IFD8
LEAF_NODE	765:17	765:17	12	:
JUMP_STATEMENT	766:4	766:27	11	return TIFF_SETGET_IFD8 ;
KEYWORD	766:4	766:4	12	return
LEAF_NODE	766:4	766:4	13	return
DESTINATION	766:11	766:11	12	TIFF_SETGET_IFD8
EXPR	766:11	766:11	13	TIFF_SETGET_IFD8
FIELD	766:11	766:11	14	TIFF_SETGET_IFD8
LEAF_NODE	766:11	766:11	15	TIFF_SETGET_IFD8
LEAF_NODE	766:27	766:27	12	;
LABEL	767:3	767:18	11	case TIFF_LONG8 :
LEAF_NODE	767:3	767:3	12	case
LEAF_NODE	767:8	767:8	12	TIFF_LONG8
LEAF_NODE	767:18	767:18	12	:
JUMP_STATEMENT	768:4	768:29	11	return TIFF_SETGET_UINT64 ;
KEYWORD	768:4	768:4	12	return
LEAF_NODE	768:4	768:4	13	return
DESTINATION	768:11	768:11	12	TIFF_SETGET_UINT64
EXPR	768:11	768:11	13	TIFF_SETGET_UINT64
FIELD	768:11	768:11	14	TIFF_SETGET_UINT64
LEAF_NODE	768:11	768:11	15	TIFF_SETGET_UINT64
LEAF_NODE	768:29	768:29	12	;
LABEL	769:3	769:19	11	case TIFF_SLONG8 :
LEAF_NODE	769:3	769:3	12	case
LEAF_NODE	769:8	769:8	12	TIFF_SLONG8
LEAF_NODE	769:19	769:19	12	:
JUMP_STATEMENT	770:4	770:29	11	return TIFF_SETGET_SINT64 ;
KEYWORD	770:4	770:4	12	return
LEAF_NODE	770:4	770:4	13	return
DESTINATION	770:11	770:11	12	TIFF_SETGET_SINT64
EXPR	770:11	770:11	13	TIFF_SETGET_SINT64
FIELD	770:11	770:11	14	TIFF_SETGET_SINT64
LEAF_NODE	770:11	770:11	15	TIFF_SETGET_SINT64
LEAF_NODE	770:29	770:29	12	;
LABEL	771:3	771:10	11	default :
LEAF_NODE	771:3	771:3	12	default
LEAF_NODE	771:10	771:10	12	:
JUMP_STATEMENT	772:4	772:32	11	return TIFF_SETGET_UNDEFINED ;
KEYWORD	772:4	772:4	12	return
LEAF_NODE	772:4	772:4	13	return
DESTINATION	772:11	772:11	12	TIFF_SETGET_UNDEFINED
EXPR	772:11	772:11	13	TIFF_SETGET_UNDEFINED
FIELD	772:11	772:11	14	TIFF_SETGET_UNDEFINED
LEAF_NODE	772:11	772:11	15	TIFF_SETGET_UNDEFINED
LEAF_NODE	772:32	772:32	12	;
LEAF_NODE	773:2	773:2	10	}
LEAF_NODE	774:1	774:1	7	}
SELECTION	776:1	776:6	3	
KEYWORD	776:1	776:1	4	else
LEAF_NODE	776:1	776:1	5	else
STATEMENTS	776:6	776:6	4	
SELECTION	776:6	776:40	5	
KEYWORD	776:6	776:6	6	if
LEAF_NODE	776:6	776:6	7	if
LEAF_NODE	776:9	776:9	6	(
CONDITION	776:10	776:10	6	count >= 1 && passcount == 0
EXPR	776:10	776:10	7	count >= 1 && passcount == 0
AND	776:10	776:24	8	count >= 1 && passcount == 0
EXPR	776:10	776:19	9	count >= 1
FIELD	776:10	776:10	10	count
LEAF_NODE	776:10	776:10	11	count
REL_OPERATOR	776:16	776:16	10	>=
LEAF_NODE	776:16	776:16	11	>=
FIELD	776:19	776:19	10	1
LEAF_NODE	776:19	776:19	11	1
LEAF_NODE	776:21	776:21	9	&&
EXPR	776:24	776:37	9	passcount == 0
FIELD	776:24	776:24	10	passcount
LEAF_NODE	776:24	776:24	11	passcount
EQ_OPERATOR	776:34	776:34	10	==
LEAF_NODE	776:34	776:34	11	==
FIELD	776:37	776:37	10	0
LEAF_NODE	776:37	776:37	11	0
LEAF_NODE	776:38	776:38	6	)
STATEMENTS	776:40	810:1	6	
LEAF_NODE	776:40	776:40	7	{
STATEMENTS	777:2	777:2	7	
SELECTION	777:2	778:2	8	
KEYWORD	777:2	777:2	9	switch
LEAF_NODE	777:2	777:2	10	switch
LEAF_NODE	777:9	777:9	9	(
CONDITION	777:10	777:10	9	type
EXPR	777:10	777:10	10	type
FIELD	777:10	777:10	11	type
LEAF_NODE	777:10	777:10	12	type
LEAF_NODE	777:14	777:14	9	)
STATEMENTS	778:2	809:2	9	
LEAF_NODE	778:2	778:2	10	{
STATEMENTS	779:3	808:4	10	
LABEL	779:3	779:17	11	case TIFF_BYTE :
LEAF_NODE	779:3	779:3	12	case
LEAF_NODE	779:8	779:8	12	TIFF_BYTE
LEAF_NODE	779:17	779:17	12	:
LABEL	780:3	780:22	11	case TIFF_UNDEFINED :
LEAF_NODE	780:3	780:3	12	case
LEAF_NODE	780:8	780:8	12	TIFF_UNDEFINED
LEAF_NODE	780:22	780:22	12	:
JUMP_STATEMENT	781:4	781:31	11	return TIFF_SETGET_C0_UINT8 ;
KEYWORD	781:4	781:4	12	return
LEAF_NODE	781:4	781:4	13	return
DESTINATION	781:11	781:11	12	TIFF_SETGET_C0_UINT8
EXPR	781:11	781:11	13	TIFF_SETGET_C0_UINT8
FIELD	781:11	781:11	14	TIFF_SETGET_C0_UINT8
LEAF_NODE	781:11	781:11	15	TIFF_SETGET_C0_UINT8
LEAF_NODE	781:31	781:31	12	;
LABEL	782:3	782:18	11	case TIFF_ASCII :
LEAF_NODE	782:3	782:3	12	case
LEAF_NODE	782:8	782:8	12	TIFF_ASCII
LEAF_NODE	782:18	782:18	12	:
JUMP_STATEMENT	783:4	783:31	11	return TIFF_SETGET_C0_ASCII ;
KEYWORD	783:4	783:4	12	return
LEAF_NODE	783:4	783:4	13	return
DESTINATION	783:11	783:11	12	TIFF_SETGET_C0_ASCII
EXPR	783:11	783:11	13	TIFF_SETGET_C0_ASCII
FIELD	783:11	783:11	14	TIFF_SETGET_C0_ASCII
LEAF_NODE	783:11	783:11	15	TIFF_SETGET_C0_ASCII
LEAF_NODE	783:31	783:31	12	;
LABEL	784:3	784:18	11	case TIFF_SHORT :
LEAF_NODE	784:3	784:3	12	case
LEAF_NODE	784:8	784:8	12	TIFF_SHORT
LEAF_NODE	784:18	784:18	12	:
JUMP_STATEMENT	785:4	785:32	11	return TIFF_SETGET_C0_UINT16 ;
KEYWORD	785:4	785:4	12	return
LEAF_NODE	785:4	785:4	13	return
DESTINATION	785:11	785:11	12	TIFF_SETGET_C0_UINT16
EXPR	785:11	785:11	13	TIFF_SETGET_C0_UINT16
FIELD	785:11	785:11	14	TIFF_SETGET_C0_UINT16
LEAF_NODE	785:11	785:11	15	TIFF_SETGET_C0_UINT16
LEAF_NODE	785:32	785:32	12	;
LABEL	786:3	786:17	11	case TIFF_LONG :
LEAF_NODE	786:3	786:3	12	case
LEAF_NODE	786:8	786:8	12	TIFF_LONG
LEAF_NODE	786:17	786:17	12	:
JUMP_STATEMENT	787:4	787:32	11	return TIFF_SETGET_C0_UINT32 ;
KEYWORD	787:4	787:4	12	return
LEAF_NODE	787:4	787:4	13	return
DESTINATION	787:11	787:11	12	TIFF_SETGET_C0_UINT32
EXPR	787:11	787:11	13	TIFF_SETGET_C0_UINT32
FIELD	787:11	787:11	14	TIFF_SETGET_C0_UINT32
LEAF_NODE	787:11	787:11	15	TIFF_SETGET_C0_UINT32
LEAF_NODE	787:32	787:32	12	;
LABEL	788:3	788:21	11	case TIFF_RATIONAL :
LEAF_NODE	788:3	788:3	12	case
LEAF_NODE	788:8	788:8	12	TIFF_RATIONAL
LEAF_NODE	788:21	788:21	12	:
LABEL	789:3	789:22	11	case TIFF_SRATIONAL :
LEAF_NODE	789:3	789:3	12	case
LEAF_NODE	789:8	789:8	12	TIFF_SRATIONAL
LEAF_NODE	789:22	789:22	12	:
LABEL	790:3	790:18	11	case TIFF_FLOAT :
LEAF_NODE	790:3	790:3	12	case
LEAF_NODE	790:8	790:8	12	TIFF_FLOAT
LEAF_NODE	790:18	790:18	12	:
JUMP_STATEMENT	791:4	791:31	11	return TIFF_SETGET_C0_FLOAT ;
KEYWORD	791:4	791:4	12	return
LEAF_NODE	791:4	791:4	13	return
DESTINATION	791:11	791:11	12	TIFF_SETGET_C0_FLOAT
EXPR	791:11	791:11	13	TIFF_SETGET_C0_FLOAT
FIELD	791:11	791:11	14	TIFF_SETGET_C0_FLOAT
LEAF_NODE	791:11	791:11	15	TIFF_SETGET_C0_FLOAT
LEAF_NODE	791:31	791:31	12	;
LABEL	792:3	792:18	11	case TIFF_SBYTE :
LEAF_NODE	792:3	792:3	12	case
LEAF_NODE	792:8	792:8	12	TIFF_SBYTE
LEAF_NODE	792:18	792:18	12	:
JUMP_STATEMENT	793:4	793:31	11	return TIFF_SETGET_C0_SINT8 ;
KEYWORD	793:4	793:4	12	return
LEAF_NODE	793:4	793:4	13	return
DESTINATION	793:11	793:11	12	TIFF_SETGET_C0_SINT8
EXPR	793:11	793:11	13	TIFF_SETGET_C0_SINT8
FIELD	793:11	793:11	14	TIFF_SETGET_C0_SINT8
LEAF_NODE	793:11	793:11	15	TIFF_SETGET_C0_SINT8
LEAF_NODE	793:31	793:31	12	;
LABEL	794:3	794:19	11	case TIFF_SSHORT :
LEAF_NODE	794:3	794:3	12	case
LEAF_NODE	794:8	794:8	12	TIFF_SSHORT
LEAF_NODE	794:19	794:19	12	:
JUMP_STATEMENT	795:4	795:32	11	return TIFF_SETGET_C0_SINT16 ;
KEYWORD	795:4	795:4	12	return
LEAF_NODE	795:4	795:4	13	return
DESTINATION	795:11	795:11	12	TIFF_SETGET_C0_SINT16
EXPR	795:11	795:11	13	TIFF_SETGET_C0_SINT16
FIELD	795:11	795:11	14	TIFF_SETGET_C0_SINT16
LEAF_NODE	795:11	795:11	15	TIFF_SETGET_C0_SINT16
LEAF_NODE	795:32	795:32	12	;
LABEL	796:3	796:18	11	case TIFF_SLONG :
LEAF_NODE	796:3	796:3	12	case
LEAF_NODE	796:8	796:8	12	TIFF_SLONG
LEAF_NODE	796:18	796:18	12	:
JUMP_STATEMENT	797:4	797:32	11	return TIFF_SETGET_C0_SINT32 ;
KEYWORD	797:4	797:4	12	return
LEAF_NODE	797:4	797:4	13	return
DESTINATION	797:11	797:11	12	TIFF_SETGET_C0_SINT32
EXPR	797:11	797:11	13	TIFF_SETGET_C0_SINT32
FIELD	797:11	797:11	14	TIFF_SETGET_C0_SINT32
LEAF_NODE	797:11	797:11	15	TIFF_SETGET_C0_SINT32
LEAF_NODE	797:32	797:32	12	;
LABEL	798:3	798:19	11	case TIFF_DOUBLE :
LEAF_NODE	798:3	798:3	12	case
LEAF_NODE	798:8	798:8	12	TIFF_DOUBLE
LEAF_NODE	798:19	798:19	12	:
JUMP_STATEMENT	799:4	799:32	11	return TIFF_SETGET_C0_DOUBLE ;
KEYWORD	799:4	799:4	12	return
LEAF_NODE	799:4	799:4	13	return
DESTINATION	799:11	799:11	12	TIFF_SETGET_C0_DOUBLE
EXPR	799:11	799:11	13	TIFF_SETGET_C0_DOUBLE
FIELD	799:11	799:11	14	TIFF_SETGET_C0_DOUBLE
LEAF_NODE	799:11	799:11	15	TIFF_SETGET_C0_DOUBLE
LEAF_NODE	799:32	799:32	12	;
LABEL	800:3	800:16	11	case TIFF_IFD :
LEAF_NODE	800:3	800:3	12	case
LEAF_NODE	800:8	800:8	12	TIFF_IFD
LEAF_NODE	800:16	800:16	12	:
LABEL	801:3	801:17	11	case TIFF_IFD8 :
LEAF_NODE	801:3	801:3	12	case
LEAF_NODE	801:8	801:8	12	TIFF_IFD8
LEAF_NODE	801:17	801:17	12	:
JUMP_STATEMENT	802:4	802:30	11	return TIFF_SETGET_C0_IFD8 ;
KEYWORD	802:4	802:4	12	return
LEAF_NODE	802:4	802:4	13	return
DESTINATION	802:11	802:11	12	TIFF_SETGET_C0_IFD8
EXPR	802:11	802:11	13	TIFF_SETGET_C0_IFD8
FIELD	802:11	802:11	14	TIFF_SETGET_C0_IFD8
LEAF_NODE	802:11	802:11	15	TIFF_SETGET_C0_IFD8
LEAF_NODE	802:30	802:30	12	;
LABEL	803:3	803:18	11	case TIFF_LONG8 :
LEAF_NODE	803:3	803:3	12	case
LEAF_NODE	803:8	803:8	12	TIFF_LONG8
LEAF_NODE	803:18	803:18	12	:
JUMP_STATEMENT	804:4	804:32	11	return TIFF_SETGET_C0_UINT64 ;
KEYWORD	804:4	804:4	12	return
LEAF_NODE	804:4	804:4	13	return
DESTINATION	804:11	804:11	12	TIFF_SETGET_C0_UINT64
EXPR	804:11	804:11	13	TIFF_SETGET_C0_UINT64
FIELD	804:11	804:11	14	TIFF_SETGET_C0_UINT64
LEAF_NODE	804:11	804:11	15	TIFF_SETGET_C0_UINT64
LEAF_NODE	804:32	804:32	12	;
LABEL	805:3	805:19	11	case TIFF_SLONG8 :
LEAF_NODE	805:3	805:3	12	case
LEAF_NODE	805:8	805:8	12	TIFF_SLONG8
LEAF_NODE	805:19	805:19	12	:
JUMP_STATEMENT	806:4	806:32	11	return TIFF_SETGET_C0_SINT64 ;
KEYWORD	806:4	806:4	12	return
LEAF_NODE	806:4	806:4	13	return
DESTINATION	806:11	806:11	12	TIFF_SETGET_C0_SINT64
EXPR	806:11	806:11	13	TIFF_SETGET_C0_SINT64
FIELD	806:11	806:11	14	TIFF_SETGET_C0_SINT64
LEAF_NODE	806:11	806:11	15	TIFF_SETGET_C0_SINT64
LEAF_NODE	806:32	806:32	12	;
LABEL	807:3	807:10	11	default :
LEAF_NODE	807:3	807:3	12	default
LEAF_NODE	807:10	807:10	12	:
JUMP_STATEMENT	808:4	808:32	11	return TIFF_SETGET_UNDEFINED ;
KEYWORD	808:4	808:4	12	return
LEAF_NODE	808:4	808:4	13	return
DESTINATION	808:11	808:11	12	TIFF_SETGET_UNDEFINED
EXPR	808:11	808:11	13	TIFF_SETGET_UNDEFINED
FIELD	808:11	808:11	14	TIFF_SETGET_UNDEFINED
LEAF_NODE	808:11	808:11	15	TIFF_SETGET_UNDEFINED
LEAF_NODE	808:32	808:32	12	;
LEAF_NODE	809:2	809:2	10	}
LEAF_NODE	810:1	810:1	7	}
SELECTION	812:1	812:6	3	
KEYWORD	812:1	812:1	4	else
LEAF_NODE	812:1	812:1	5	else
STATEMENTS	812:6	812:6	4	
SELECTION	812:6	812:52	5	
KEYWORD	812:6	812:6	6	if
LEAF_NODE	812:6	812:6	7	if
LEAF_NODE	812:9	812:9	6	(
CONDITION	812:10	812:10	6	count == TIFF_VARIABLE && passcount == 1
EXPR	812:10	812:10	7	count == TIFF_VARIABLE && passcount == 1
AND	812:10	812:36	8	count == TIFF_VARIABLE && passcount == 1
EXPR	812:10	812:19	9	count == TIFF_VARIABLE
FIELD	812:10	812:10	10	count
LEAF_NODE	812:10	812:10	11	count
EQ_OPERATOR	812:16	812:16	10	==
LEAF_NODE	812:16	812:16	11	==
FIELD	812:19	812:19	10	TIFF_VARIABLE
LEAF_NODE	812:19	812:19	11	TIFF_VARIABLE
LEAF_NODE	812:33	812:33	9	&&
EXPR	812:36	812:49	9	passcount == 1
FIELD	812:36	812:36	10	passcount
LEAF_NODE	812:36	812:36	11	passcount
EQ_OPERATOR	812:46	812:46	10	==
LEAF_NODE	812:46	812:46	11	==
FIELD	812:49	812:49	10	1
LEAF_NODE	812:49	812:49	11	1
LEAF_NODE	812:50	812:50	6	)
STATEMENTS	812:52	846:1	6	
LEAF_NODE	812:52	812:52	7	{
STATEMENTS	813:2	813:2	7	
SELECTION	813:2	814:2	8	
KEYWORD	813:2	813:2	9	switch
LEAF_NODE	813:2	813:2	10	switch
LEAF_NODE	813:9	813:9	9	(
CONDITION	813:10	813:10	9	type
EXPR	813:10	813:10	10	type
FIELD	813:10	813:10	11	type
LEAF_NODE	813:10	813:10	12	type
LEAF_NODE	813:14	813:14	9	)
STATEMENTS	814:2	845:2	9	
LEAF_NODE	814:2	814:2	10	{
STATEMENTS	815:3	844:4	10	
LABEL	815:3	815:17	11	case TIFF_BYTE :
LEAF_NODE	815:3	815:3	12	case
LEAF_NODE	815:8	815:8	12	TIFF_BYTE
LEAF_NODE	815:17	815:17	12	:
LABEL	816:3	816:22	11	case TIFF_UNDEFINED :
LEAF_NODE	816:3	816:3	12	case
LEAF_NODE	816:8	816:8	12	TIFF_UNDEFINED
LEAF_NODE	816:22	816:22	12	:
JUMP_STATEMENT	817:4	817:32	11	return TIFF_SETGET_C16_UINT8 ;
KEYWORD	817:4	817:4	12	return
LEAF_NODE	817:4	817:4	13	return
DESTINATION	817:11	817:11	12	TIFF_SETGET_C16_UINT8
EXPR	817:11	817:11	13	TIFF_SETGET_C16_UINT8
FIELD	817:11	817:11	14	TIFF_SETGET_C16_UINT8
LEAF_NODE	817:11	817:11	15	TIFF_SETGET_C16_UINT8
LEAF_NODE	817:32	817:32	12	;
LABEL	818:3	818:18	11	case TIFF_ASCII :
LEAF_NODE	818:3	818:3	12	case
LEAF_NODE	818:8	818:8	12	TIFF_ASCII
LEAF_NODE	818:18	818:18	12	:
JUMP_STATEMENT	819:4	819:32	11	return TIFF_SETGET_C16_ASCII ;
KEYWORD	819:4	819:4	12	return
LEAF_NODE	819:4	819:4	13	return
DESTINATION	819:11	819:11	12	TIFF_SETGET_C16_ASCII
EXPR	819:11	819:11	13	TIFF_SETGET_C16_ASCII
FIELD	819:11	819:11	14	TIFF_SETGET_C16_ASCII
LEAF_NODE	819:11	819:11	15	TIFF_SETGET_C16_ASCII
LEAF_NODE	819:32	819:32	12	;
LABEL	820:3	820:18	11	case TIFF_SHORT :
LEAF_NODE	820:3	820:3	12	case
LEAF_NODE	820:8	820:8	12	TIFF_SHORT
LEAF_NODE	820:18	820:18	12	:
JUMP_STATEMENT	821:4	821:33	11	return TIFF_SETGET_C16_UINT16 ;
KEYWORD	821:4	821:4	12	return
LEAF_NODE	821:4	821:4	13	return
DESTINATION	821:11	821:11	12	TIFF_SETGET_C16_UINT16
EXPR	821:11	821:11	13	TIFF_SETGET_C16_UINT16
FIELD	821:11	821:11	14	TIFF_SETGET_C16_UINT16
LEAF_NODE	821:11	821:11	15	TIFF_SETGET_C16_UINT16
LEAF_NODE	821:33	821:33	12	;
LABEL	822:3	822:17	11	case TIFF_LONG :
LEAF_NODE	822:3	822:3	12	case
LEAF_NODE	822:8	822:8	12	TIFF_LONG
LEAF_NODE	822:17	822:17	12	:
JUMP_STATEMENT	823:4	823:33	11	return TIFF_SETGET_C16_UINT32 ;
KEYWORD	823:4	823:4	12	return
LEAF_NODE	823:4	823:4	13	return
DESTINATION	823:11	823:11	12	TIFF_SETGET_C16_UINT32
EXPR	823:11	823:11	13	TIFF_SETGET_C16_UINT32
FIELD	823:11	823:11	14	TIFF_SETGET_C16_UINT32
LEAF_NODE	823:11	823:11	15	TIFF_SETGET_C16_UINT32
LEAF_NODE	823:33	823:33	12	;
LABEL	824:3	824:21	11	case TIFF_RATIONAL :
LEAF_NODE	824:3	824:3	12	case
LEAF_NODE	824:8	824:8	12	TIFF_RATIONAL
LEAF_NODE	824:21	824:21	12	:
LABEL	825:3	825:22	11	case TIFF_SRATIONAL :
LEAF_NODE	825:3	825:3	12	case
LEAF_NODE	825:8	825:8	12	TIFF_SRATIONAL
LEAF_NODE	825:22	825:22	12	:
LABEL	826:3	826:18	11	case TIFF_FLOAT :
LEAF_NODE	826:3	826:3	12	case
LEAF_NODE	826:8	826:8	12	TIFF_FLOAT
LEAF_NODE	826:18	826:18	12	:
JUMP_STATEMENT	827:4	827:32	11	return TIFF_SETGET_C16_FLOAT ;
KEYWORD	827:4	827:4	12	return
LEAF_NODE	827:4	827:4	13	return
DESTINATION	827:11	827:11	12	TIFF_SETGET_C16_FLOAT
EXPR	827:11	827:11	13	TIFF_SETGET_C16_FLOAT
FIELD	827:11	827:11	14	TIFF_SETGET_C16_FLOAT
LEAF_NODE	827:11	827:11	15	TIFF_SETGET_C16_FLOAT
LEAF_NODE	827:32	827:32	12	;
LABEL	828:3	828:18	11	case TIFF_SBYTE :
LEAF_NODE	828:3	828:3	12	case
LEAF_NODE	828:8	828:8	12	TIFF_SBYTE
LEAF_NODE	828:18	828:18	12	:
JUMP_STATEMENT	829:4	829:32	11	return TIFF_SETGET_C16_SINT8 ;
KEYWORD	829:4	829:4	12	return
LEAF_NODE	829:4	829:4	13	return
DESTINATION	829:11	829:11	12	TIFF_SETGET_C16_SINT8
EXPR	829:11	829:11	13	TIFF_SETGET_C16_SINT8
FIELD	829:11	829:11	14	TIFF_SETGET_C16_SINT8
LEAF_NODE	829:11	829:11	15	TIFF_SETGET_C16_SINT8
LEAF_NODE	829:32	829:32	12	;
LABEL	830:3	830:19	11	case TIFF_SSHORT :
LEAF_NODE	830:3	830:3	12	case
LEAF_NODE	830:8	830:8	12	TIFF_SSHORT
LEAF_NODE	830:19	830:19	12	:
JUMP_STATEMENT	831:4	831:33	11	return TIFF_SETGET_C16_SINT16 ;
KEYWORD	831:4	831:4	12	return
LEAF_NODE	831:4	831:4	13	return
DESTINATION	831:11	831:11	12	TIFF_SETGET_C16_SINT16
EXPR	831:11	831:11	13	TIFF_SETGET_C16_SINT16
FIELD	831:11	831:11	14	TIFF_SETGET_C16_SINT16
LEAF_NODE	831:11	831:11	15	TIFF_SETGET_C16_SINT16
LEAF_NODE	831:33	831:33	12	;
LABEL	832:3	832:18	11	case TIFF_SLONG :
LEAF_NODE	832:3	832:3	12	case
LEAF_NODE	832:8	832:8	12	TIFF_SLONG
LEAF_NODE	832:18	832:18	12	:
JUMP_STATEMENT	833:4	833:33	11	return TIFF_SETGET_C16_SINT32 ;
KEYWORD	833:4	833:4	12	return
LEAF_NODE	833:4	833:4	13	return
DESTINATION	833:11	833:11	12	TIFF_SETGET_C16_SINT32
EXPR	833:11	833:11	13	TIFF_SETGET_C16_SINT32
FIELD	833:11	833:11	14	TIFF_SETGET_C16_SINT32
LEAF_NODE	833:11	833:11	15	TIFF_SETGET_C16_SINT32
LEAF_NODE	833:33	833:33	12	;
LABEL	834:3	834:19	11	case TIFF_DOUBLE :
LEAF_NODE	834:3	834:3	12	case
LEAF_NODE	834:8	834:8	12	TIFF_DOUBLE
LEAF_NODE	834:19	834:19	12	:
JUMP_STATEMENT	835:4	835:33	11	return TIFF_SETGET_C16_DOUBLE ;
KEYWORD	835:4	835:4	12	return
LEAF_NODE	835:4	835:4	13	return
DESTINATION	835:11	835:11	12	TIFF_SETGET_C16_DOUBLE
EXPR	835:11	835:11	13	TIFF_SETGET_C16_DOUBLE
FIELD	835:11	835:11	14	TIFF_SETGET_C16_DOUBLE
LEAF_NODE	835:11	835:11	15	TIFF_SETGET_C16_DOUBLE
LEAF_NODE	835:33	835:33	12	;
LABEL	836:3	836:16	11	case TIFF_IFD :
LEAF_NODE	836:3	836:3	12	case
LEAF_NODE	836:8	836:8	12	TIFF_IFD
LEAF_NODE	836:16	836:16	12	:
LABEL	837:3	837:17	11	case TIFF_IFD8 :
LEAF_NODE	837:3	837:3	12	case
LEAF_NODE	837:8	837:8	12	TIFF_IFD8
LEAF_NODE	837:17	837:17	12	:
JUMP_STATEMENT	838:4	838:31	11	return TIFF_SETGET_C16_IFD8 ;
KEYWORD	838:4	838:4	12	return
LEAF_NODE	838:4	838:4	13	return
DESTINATION	838:11	838:11	12	TIFF_SETGET_C16_IFD8
EXPR	838:11	838:11	13	TIFF_SETGET_C16_IFD8
FIELD	838:11	838:11	14	TIFF_SETGET_C16_IFD8
LEAF_NODE	838:11	838:11	15	TIFF_SETGET_C16_IFD8
LEAF_NODE	838:31	838:31	12	;
LABEL	839:3	839:18	11	case TIFF_LONG8 :
LEAF_NODE	839:3	839:3	12	case
LEAF_NODE	839:8	839:8	12	TIFF_LONG8
LEAF_NODE	839:18	839:18	12	:
JUMP_STATEMENT	840:4	840:33	11	return TIFF_SETGET_C16_UINT64 ;
KEYWORD	840:4	840:4	12	return
LEAF_NODE	840:4	840:4	13	return
DESTINATION	840:11	840:11	12	TIFF_SETGET_C16_UINT64
EXPR	840:11	840:11	13	TIFF_SETGET_C16_UINT64
FIELD	840:11	840:11	14	TIFF_SETGET_C16_UINT64
LEAF_NODE	840:11	840:11	15	TIFF_SETGET_C16_UINT64
LEAF_NODE	840:33	840:33	12	;
LABEL	841:3	841:19	11	case TIFF_SLONG8 :
LEAF_NODE	841:3	841:3	12	case
LEAF_NODE	841:8	841:8	12	TIFF_SLONG8
LEAF_NODE	841:19	841:19	12	:
JUMP_STATEMENT	842:4	842:33	11	return TIFF_SETGET_C16_SINT64 ;
KEYWORD	842:4	842:4	12	return
LEAF_NODE	842:4	842:4	13	return
DESTINATION	842:11	842:11	12	TIFF_SETGET_C16_SINT64
EXPR	842:11	842:11	13	TIFF_SETGET_C16_SINT64
FIELD	842:11	842:11	14	TIFF_SETGET_C16_SINT64
LEAF_NODE	842:11	842:11	15	TIFF_SETGET_C16_SINT64
LEAF_NODE	842:33	842:33	12	;
LABEL	843:3	843:10	11	default :
LEAF_NODE	843:3	843:3	12	default
LEAF_NODE	843:10	843:10	12	:
JUMP_STATEMENT	844:4	844:32	11	return TIFF_SETGET_UNDEFINED ;
KEYWORD	844:4	844:4	12	return
LEAF_NODE	844:4	844:4	13	return
DESTINATION	844:11	844:11	12	TIFF_SETGET_UNDEFINED
EXPR	844:11	844:11	13	TIFF_SETGET_UNDEFINED
FIELD	844:11	844:11	14	TIFF_SETGET_UNDEFINED
LEAF_NODE	844:11	844:11	15	TIFF_SETGET_UNDEFINED
LEAF_NODE	844:32	844:32	12	;
LEAF_NODE	845:2	845:2	10	}
LEAF_NODE	846:1	846:1	7	}
SELECTION	848:1	848:6	3	
KEYWORD	848:1	848:1	4	else
LEAF_NODE	848:1	848:1	5	else
STATEMENTS	848:6	848:6	4	
SELECTION	848:6	848:53	5	
KEYWORD	848:6	848:6	6	if
LEAF_NODE	848:6	848:6	7	if
LEAF_NODE	848:9	848:9	6	(
CONDITION	848:10	848:10	6	count == TIFF_VARIABLE2 && passcount == 1
EXPR	848:10	848:10	7	count == TIFF_VARIABLE2 && passcount == 1
AND	848:10	848:37	8	count == TIFF_VARIABLE2 && passcount == 1
EXPR	848:10	848:19	9	count == TIFF_VARIABLE2
FIELD	848:10	848:10	10	count
LEAF_NODE	848:10	848:10	11	count
EQ_OPERATOR	848:16	848:16	10	==
LEAF_NODE	848:16	848:16	11	==
FIELD	848:19	848:19	10	TIFF_VARIABLE2
LEAF_NODE	848:19	848:19	11	TIFF_VARIABLE2
LEAF_NODE	848:34	848:34	9	&&
EXPR	848:37	848:50	9	passcount == 1
FIELD	848:37	848:37	10	passcount
LEAF_NODE	848:37	848:37	11	passcount
EQ_OPERATOR	848:47	848:47	10	==
LEAF_NODE	848:47	848:47	11	==
FIELD	848:50	848:50	10	1
LEAF_NODE	848:50	848:50	11	1
LEAF_NODE	848:51	848:51	6	)
STATEMENTS	848:53	882:1	6	
LEAF_NODE	848:53	848:53	7	{
STATEMENTS	849:2	849:2	7	
SELECTION	849:2	850:2	8	
KEYWORD	849:2	849:2	9	switch
LEAF_NODE	849:2	849:2	10	switch
LEAF_NODE	849:9	849:9	9	(
CONDITION	849:10	849:10	9	type
EXPR	849:10	849:10	10	type
FIELD	849:10	849:10	11	type
LEAF_NODE	849:10	849:10	12	type
LEAF_NODE	849:14	849:14	9	)
STATEMENTS	850:2	881:2	9	
LEAF_NODE	850:2	850:2	10	{
STATEMENTS	851:3	880:4	10	
LABEL	851:3	851:17	11	case TIFF_BYTE :
LEAF_NODE	851:3	851:3	12	case
LEAF_NODE	851:8	851:8	12	TIFF_BYTE
LEAF_NODE	851:17	851:17	12	:
LABEL	852:3	852:22	11	case TIFF_UNDEFINED :
LEAF_NODE	852:3	852:3	12	case
LEAF_NODE	852:8	852:8	12	TIFF_UNDEFINED
LEAF_NODE	852:22	852:22	12	:
JUMP_STATEMENT	853:4	853:32	11	return TIFF_SETGET_C32_UINT8 ;
KEYWORD	853:4	853:4	12	return
LEAF_NODE	853:4	853:4	13	return
DESTINATION	853:11	853:11	12	TIFF_SETGET_C32_UINT8
EXPR	853:11	853:11	13	TIFF_SETGET_C32_UINT8
FIELD	853:11	853:11	14	TIFF_SETGET_C32_UINT8
LEAF_NODE	853:11	853:11	15	TIFF_SETGET_C32_UINT8
LEAF_NODE	853:32	853:32	12	;
LABEL	854:3	854:18	11	case TIFF_ASCII :
LEAF_NODE	854:3	854:3	12	case
LEAF_NODE	854:8	854:8	12	TIFF_ASCII
LEAF_NODE	854:18	854:18	12	:
JUMP_STATEMENT	855:4	855:32	11	return TIFF_SETGET_C32_ASCII ;
KEYWORD	855:4	855:4	12	return
LEAF_NODE	855:4	855:4	13	return
DESTINATION	855:11	855:11	12	TIFF_SETGET_C32_ASCII
EXPR	855:11	855:11	13	TIFF_SETGET_C32_ASCII
FIELD	855:11	855:11	14	TIFF_SETGET_C32_ASCII
LEAF_NODE	855:11	855:11	15	TIFF_SETGET_C32_ASCII
LEAF_NODE	855:32	855:32	12	;
LABEL	856:3	856:18	11	case TIFF_SHORT :
LEAF_NODE	856:3	856:3	12	case
LEAF_NODE	856:8	856:8	12	TIFF_SHORT
LEAF_NODE	856:18	856:18	12	:
JUMP_STATEMENT	857:4	857:33	11	return TIFF_SETGET_C32_UINT16 ;
KEYWORD	857:4	857:4	12	return
LEAF_NODE	857:4	857:4	13	return
DESTINATION	857:11	857:11	12	TIFF_SETGET_C32_UINT16
EXPR	857:11	857:11	13	TIFF_SETGET_C32_UINT16
FIELD	857:11	857:11	14	TIFF_SETGET_C32_UINT16
LEAF_NODE	857:11	857:11	15	TIFF_SETGET_C32_UINT16
LEAF_NODE	857:33	857:33	12	;
LABEL	858:3	858:17	11	case TIFF_LONG :
LEAF_NODE	858:3	858:3	12	case
LEAF_NODE	858:8	858:8	12	TIFF_LONG
LEAF_NODE	858:17	858:17	12	:
JUMP_STATEMENT	859:4	859:33	11	return TIFF_SETGET_C32_UINT32 ;
KEYWORD	859:4	859:4	12	return
LEAF_NODE	859:4	859:4	13	return
DESTINATION	859:11	859:11	12	TIFF_SETGET_C32_UINT32
EXPR	859:11	859:11	13	TIFF_SETGET_C32_UINT32
FIELD	859:11	859:11	14	TIFF_SETGET_C32_UINT32
LEAF_NODE	859:11	859:11	15	TIFF_SETGET_C32_UINT32
LEAF_NODE	859:33	859:33	12	;
LABEL	860:3	860:21	11	case TIFF_RATIONAL :
LEAF_NODE	860:3	860:3	12	case
LEAF_NODE	860:8	860:8	12	TIFF_RATIONAL
LEAF_NODE	860:21	860:21	12	:
LABEL	861:3	861:22	11	case TIFF_SRATIONAL :
LEAF_NODE	861:3	861:3	12	case
LEAF_NODE	861:8	861:8	12	TIFF_SRATIONAL
LEAF_NODE	861:22	861:22	12	:
LABEL	862:3	862:18	11	case TIFF_FLOAT :
LEAF_NODE	862:3	862:3	12	case
LEAF_NODE	862:8	862:8	12	TIFF_FLOAT
LEAF_NODE	862:18	862:18	12	:
JUMP_STATEMENT	863:4	863:32	11	return TIFF_SETGET_C32_FLOAT ;
KEYWORD	863:4	863:4	12	return
LEAF_NODE	863:4	863:4	13	return
DESTINATION	863:11	863:11	12	TIFF_SETGET_C32_FLOAT
EXPR	863:11	863:11	13	TIFF_SETGET_C32_FLOAT
FIELD	863:11	863:11	14	TIFF_SETGET_C32_FLOAT
LEAF_NODE	863:11	863:11	15	TIFF_SETGET_C32_FLOAT
LEAF_NODE	863:32	863:32	12	;
LABEL	864:3	864:18	11	case TIFF_SBYTE :
LEAF_NODE	864:3	864:3	12	case
LEAF_NODE	864:8	864:8	12	TIFF_SBYTE
LEAF_NODE	864:18	864:18	12	:
JUMP_STATEMENT	865:4	865:32	11	return TIFF_SETGET_C32_SINT8 ;
KEYWORD	865:4	865:4	12	return
LEAF_NODE	865:4	865:4	13	return
DESTINATION	865:11	865:11	12	TIFF_SETGET_C32_SINT8
EXPR	865:11	865:11	13	TIFF_SETGET_C32_SINT8
FIELD	865:11	865:11	14	TIFF_SETGET_C32_SINT8
LEAF_NODE	865:11	865:11	15	TIFF_SETGET_C32_SINT8
LEAF_NODE	865:32	865:32	12	;
LABEL	866:3	866:19	11	case TIFF_SSHORT :
LEAF_NODE	866:3	866:3	12	case
LEAF_NODE	866:8	866:8	12	TIFF_SSHORT
LEAF_NODE	866:19	866:19	12	:
JUMP_STATEMENT	867:4	867:33	11	return TIFF_SETGET_C32_SINT16 ;
KEYWORD	867:4	867:4	12	return
LEAF_NODE	867:4	867:4	13	return
DESTINATION	867:11	867:11	12	TIFF_SETGET_C32_SINT16
EXPR	867:11	867:11	13	TIFF_SETGET_C32_SINT16
FIELD	867:11	867:11	14	TIFF_SETGET_C32_SINT16
LEAF_NODE	867:11	867:11	15	TIFF_SETGET_C32_SINT16
LEAF_NODE	867:33	867:33	12	;
LABEL	868:3	868:18	11	case TIFF_SLONG :
LEAF_NODE	868:3	868:3	12	case
LEAF_NODE	868:8	868:8	12	TIFF_SLONG
LEAF_NODE	868:18	868:18	12	:
JUMP_STATEMENT	869:4	869:33	11	return TIFF_SETGET_C32_SINT32 ;
KEYWORD	869:4	869:4	12	return
LEAF_NODE	869:4	869:4	13	return
DESTINATION	869:11	869:11	12	TIFF_SETGET_C32_SINT32
EXPR	869:11	869:11	13	TIFF_SETGET_C32_SINT32
FIELD	869:11	869:11	14	TIFF_SETGET_C32_SINT32
LEAF_NODE	869:11	869:11	15	TIFF_SETGET_C32_SINT32
LEAF_NODE	869:33	869:33	12	;
LABEL	870:3	870:19	11	case TIFF_DOUBLE :
LEAF_NODE	870:3	870:3	12	case
LEAF_NODE	870:8	870:8	12	TIFF_DOUBLE
LEAF_NODE	870:19	870:19	12	:
JUMP_STATEMENT	871:4	871:33	11	return TIFF_SETGET_C32_DOUBLE ;
KEYWORD	871:4	871:4	12	return
LEAF_NODE	871:4	871:4	13	return
DESTINATION	871:11	871:11	12	TIFF_SETGET_C32_DOUBLE
EXPR	871:11	871:11	13	TIFF_SETGET_C32_DOUBLE
FIELD	871:11	871:11	14	TIFF_SETGET_C32_DOUBLE
LEAF_NODE	871:11	871:11	15	TIFF_SETGET_C32_DOUBLE
LEAF_NODE	871:33	871:33	12	;
LABEL	872:3	872:16	11	case TIFF_IFD :
LEAF_NODE	872:3	872:3	12	case
LEAF_NODE	872:8	872:8	12	TIFF_IFD
LEAF_NODE	872:16	872:16	12	:
LABEL	873:3	873:17	11	case TIFF_IFD8 :
LEAF_NODE	873:3	873:3	12	case
LEAF_NODE	873:8	873:8	12	TIFF_IFD8
LEAF_NODE	873:17	873:17	12	:
JUMP_STATEMENT	874:4	874:31	11	return TIFF_SETGET_C32_IFD8 ;
KEYWORD	874:4	874:4	12	return
LEAF_NODE	874:4	874:4	13	return
DESTINATION	874:11	874:11	12	TIFF_SETGET_C32_IFD8
EXPR	874:11	874:11	13	TIFF_SETGET_C32_IFD8
FIELD	874:11	874:11	14	TIFF_SETGET_C32_IFD8
LEAF_NODE	874:11	874:11	15	TIFF_SETGET_C32_IFD8
LEAF_NODE	874:31	874:31	12	;
LABEL	875:3	875:18	11	case TIFF_LONG8 :
LEAF_NODE	875:3	875:3	12	case
LEAF_NODE	875:8	875:8	12	TIFF_LONG8
LEAF_NODE	875:18	875:18	12	:
JUMP_STATEMENT	876:4	876:33	11	return TIFF_SETGET_C32_UINT64 ;
KEYWORD	876:4	876:4	12	return
LEAF_NODE	876:4	876:4	13	return
DESTINATION	876:11	876:11	12	TIFF_SETGET_C32_UINT64
EXPR	876:11	876:11	13	TIFF_SETGET_C32_UINT64
FIELD	876:11	876:11	14	TIFF_SETGET_C32_UINT64
LEAF_NODE	876:11	876:11	15	TIFF_SETGET_C32_UINT64
LEAF_NODE	876:33	876:33	12	;
LABEL	877:3	877:19	11	case TIFF_SLONG8 :
LEAF_NODE	877:3	877:3	12	case
LEAF_NODE	877:8	877:8	12	TIFF_SLONG8
LEAF_NODE	877:19	877:19	12	:
JUMP_STATEMENT	878:4	878:33	11	return TIFF_SETGET_C32_SINT64 ;
KEYWORD	878:4	878:4	12	return
LEAF_NODE	878:4	878:4	13	return
DESTINATION	878:11	878:11	12	TIFF_SETGET_C32_SINT64
EXPR	878:11	878:11	13	TIFF_SETGET_C32_SINT64
FIELD	878:11	878:11	14	TIFF_SETGET_C32_SINT64
LEAF_NODE	878:11	878:11	15	TIFF_SETGET_C32_SINT64
LEAF_NODE	878:33	878:33	12	;
LABEL	879:3	879:10	11	default :
LEAF_NODE	879:3	879:3	12	default
LEAF_NODE	879:10	879:10	12	:
JUMP_STATEMENT	880:4	880:32	11	return TIFF_SETGET_UNDEFINED ;
KEYWORD	880:4	880:4	12	return
LEAF_NODE	880:4	880:4	13	return
DESTINATION	880:11	880:11	12	TIFF_SETGET_UNDEFINED
EXPR	880:11	880:11	13	TIFF_SETGET_UNDEFINED
FIELD	880:11	880:11	14	TIFF_SETGET_UNDEFINED
LEAF_NODE	880:11	880:11	15	TIFF_SETGET_UNDEFINED
LEAF_NODE	880:32	880:32	12	;
LEAF_NODE	881:2	881:2	10	}
LEAF_NODE	882:1	882:1	7	}
JUMP_STATEMENT	884:1	884:29	3	return TIFF_SETGET_UNDEFINED ;
KEYWORD	884:1	884:1	4	return
LEAF_NODE	884:1	884:1	5	return
DESTINATION	884:8	884:8	4	TIFF_SETGET_UNDEFINED
EXPR	884:8	884:8	5	TIFF_SETGET_UNDEFINED
FIELD	884:8	884:8	6	TIFF_SETGET_UNDEFINED
LEAF_NODE	884:8	884:8	7	TIFF_SETGET_UNDEFINED
LEAF_NODE	884:29	884:29	4	;
LEAF_NODE	885:0	885:0	2	}
FUNCTION_DEF	887:0	955:0	1	
RETURN_TYPE	887:0	887:0	2	int
TYPE_NAME	887:0	887:0	3	int
LEAF_NODE	887:0	887:0	4	int
FUNCTION_NAME	888:0	888:0	2	TIFFMergeFieldInfo
LEAF_NODE	888:0	888:0	3	TIFFMergeFieldInfo
PARAMETER_LIST	888:18	888:66	2	( TIFF * tif , const TIFFFieldInfo [ ] info , uint32 n )
LEAF_NODE	888:18	888:18	3	(
PARAMETER_DECL	888:19	888:25	3	TIFF * tif
TYPE	888:19	888:23	4	TIFF *
TYPE_NAME	888:19	888:19	5	TIFF
LEAF_NODE	888:19	888:19	6	TIFF
POINTER	888:23	888:23	5	*
LEAF_NODE	888:23	888:23	6	*
NAME	888:25	888:25	4	tif
LEAF_NODE	888:25	888:25	5	tif
LEAF_NODE	888:28	888:28	3	,
PARAMETER_DECL	888:30	888:50	3	const TIFFFieldInfo [ ] info
TYPE	888:30	888:54	4	const TIFFFieldInfo [ ]
TYPE_NAME	888:30	888:36	5	const TIFFFieldInfo
LEAF_NODE	888:30	888:30	6	const
LEAF_NODE	888:36	888:36	6	TIFFFieldInfo
TYPE_SUFFIX	888:54	888:55	5	[ ]
LEAF_NODE	888:54	888:54	6	[
LEAF_NODE	888:55	888:55	6	]
NAME	888:50	888:50	4	info
LEAF_NODE	888:50	888:50	5	info
LEAF_NODE	888:56	888:56	3	,
PARAMETER_DECL	888:58	888:65	3	uint32 n
TYPE	888:58	888:58	4	uint32
TYPE_NAME	888:58	888:58	5	uint32
LEAF_NODE	888:58	888:58	6	uint32
NAME	888:65	888:65	4	n
LEAF_NODE	888:65	888:65	5	n
LEAF_NODE	888:66	888:66	3	)
LEAF_NODE	889:0	889:0	2	{
STATEMENTS	890:1	954:1	2	
LEAF_NODE	890:1	890:1	3	static
SIMPLE_DECL	890:8	890:50	3	const char [ ] module ; module = "TIFFMergeFieldInfo" ;
VAR_DECL	890:8	890:19	4	const char [ ] module ; module = "TIFFMergeFieldInfo"
TYPE	890:8	890:25	5	const char [ ]
TYPE_NAME	890:8	890:14	6	const char
LEAF_NODE	890:8	890:8	7	const
LEAF_NODE	890:14	890:14	7	char
TYPE_SUFFIX	890:25	890:26	6	[ ]
LEAF_NODE	890:25	890:25	7	[
LEAF_NODE	890:26	890:26	7	]
NAME	890:19	890:19	5	module
LEAF_NODE	890:19	890:19	6	module
LEAF_NODE	0:0	0:0	5	;
INIT	890:19	890:19	5	module = "TIFFMergeFieldInfo"
ASSIGN	890:19	890:30	6	module = "TIFFMergeFieldInfo"
LVAL	890:19	890:19	7	module
NAME	890:19	890:19	8	module
LEAF_NODE	890:19	890:19	9	module
ASSIGN_OP	890:28	890:28	7	=
LEAF_NODE	890:28	890:28	8	=
RVAL	890:30	890:30	7	"TIFFMergeFieldInfo"
FIELD	890:30	890:30	8	"TIFFMergeFieldInfo"
LEAF_NODE	890:30	890:30	9	"TIFFMergeFieldInfo"
LEAF_NODE	890:50	890:50	4	;
LEAF_NODE	891:1	891:1	3	static
SIMPLE_DECL	891:8	891:48	3	const char [ ] reason ; reason = "for fields array" ;
VAR_DECL	891:8	891:19	4	const char [ ] reason ; reason = "for fields array"
TYPE	891:8	891:25	5	const char [ ]
TYPE_NAME	891:8	891:14	6	const char
LEAF_NODE	891:8	891:8	7	const
LEAF_NODE	891:14	891:14	7	char
TYPE_SUFFIX	891:25	891:26	6	[ ]
LEAF_NODE	891:25	891:25	7	[
LEAF_NODE	891:26	891:26	7	]
NAME	891:19	891:19	5	reason
LEAF_NODE	891:19	891:19	6	reason
LEAF_NODE	0:0	0:0	5	;
INIT	891:19	891:19	5	reason = "for fields array"
ASSIGN	891:19	891:30	6	reason = "for fields array"
LVAL	891:19	891:19	7	reason
NAME	891:19	891:19	8	reason
LEAF_NODE	891:19	891:19	9	reason
ASSIGN_OP	891:28	891:28	7	=
LEAF_NODE	891:28	891:28	8	=
RVAL	891:30	891:30	7	"for fields array"
FIELD	891:30	891:30	8	"for fields array"
LEAF_NODE	891:30	891:30	9	"for fields array"
LEAF_NODE	891:48	891:48	4	;
SIMPLE_DECL	892:1	892:14	3	TIFFField * tp ;
VAR_DECL	892:1	892:12	4	TIFFField * tp
TYPE	892:1	892:11	5	TIFFField *
TYPE_NAME	892:1	892:1	6	TIFFField
LEAF_NODE	892:1	892:1	7	TIFFField
POINTER	892:11	892:11	6	*
LEAF_NODE	892:11	892:11	7	*
NAME	892:12	892:12	5	tp
LEAF_NODE	892:12	892:12	6	tp
LEAF_NODE	892:14	892:14	4	;
SIMPLE_DECL	893:1	893:15	3	size_t nfields ;
VAR_DECL	893:1	893:8	4	size_t nfields
TYPE	893:1	893:1	5	size_t
TYPE_NAME	893:1	893:1	6	size_t
LEAF_NODE	893:1	893:1	7	size_t
NAME	893:8	893:8	5	nfields
LEAF_NODE	893:8	893:8	6	nfields
LEAF_NODE	893:15	893:15	4	;
SIMPLE_DECL	894:1	894:9	3	uint32 i ;
VAR_DECL	894:1	894:8	4	uint32 i
TYPE	894:1	894:1	5	uint32
TYPE_NAME	894:1	894:1	6	uint32
LEAF_NODE	894:1	894:1	7	uint32
NAME	894:8	894:8	5	i
LEAF_NODE	894:8	894:8	6	i
LEAF_NODE	894:9	894:9	4	;
SELECTION	896:1	896:33	3	
KEYWORD	896:1	896:1	4	if
LEAF_NODE	896:1	896:1	5	if
LEAF_NODE	896:4	896:4	4	(
CONDITION	896:5	896:5	4	tif -> tif_nfieldscompat > 0
EXPR	896:5	896:30	5	tif -> tif_nfieldscompat > 0
FIELD	896:5	896:10	6	tif -> tif_nfieldscompat
LEAF_NODE	896:5	896:5	7	tif
LEAF_NODE	896:8	896:8	7	->
LEAF_NODE	896:10	896:10	7	tif_nfieldscompat
REL_OPERATOR	896:28	896:28	6	>
LEAF_NODE	896:28	896:28	7	>
FIELD	896:30	896:30	6	0
LEAF_NODE	896:30	896:30	7	0
LEAF_NODE	896:31	896:31	4	)
STATEMENTS	896:33	901:1	4	
LEAF_NODE	896:33	896:33	5	{
STATEMENTS	897:2	897:2	5	
EXPR_STATEMENT	897:2	900:38	6	tif -> tif_fieldscompat = ( TIFFFieldArray * ) _TIFFCheckRealloc ( tif , tif -> tif_fieldscompat , tif -> tif_nfieldscompat + 1 , sizeof ( TIFFFieldArray ) , reason ) ;
EXPR	897:2	897:2	7	tif -> tif_fieldscompat = ( TIFFFieldArray * ) _TIFFCheckRealloc ( tif , tif -> tif_fieldscompat , tif -> tif_nfieldscompat + 1 , sizeof ( TIFFFieldArray ) , reason )
ASSIGN	897:2	897:26	8	tif -> tif_fieldscompat = ( TIFFFieldArray * ) _TIFFCheckRealloc ( tif , tif -> tif_fieldscompat , tif -> tif_nfieldscompat + 1 , sizeof ( TIFFFieldArray ) , reason )
LVAL	897:2	897:2	9	tif -> tif_fieldscompat
FIELD	897:2	897:7	10	tif -> tif_fieldscompat
LEAF_NODE	897:2	897:2	11	tif
LEAF_NODE	897:5	897:5	11	->
LEAF_NODE	897:7	897:7	11	tif_fieldscompat
ASSIGN_OP	897:24	897:24	9	=
LEAF_NODE	897:24	897:24	10	=
RVAL	897:26	898:3	9	( TIFFFieldArray * ) _TIFFCheckRealloc ( tif , tif -> tif_fieldscompat , tif -> tif_nfieldscompat + 1 , sizeof ( TIFFFieldArray ) , reason )
LEAF_NODE	897:26	897:26	10	(
TYPE_NAME	897:27	897:27	10	TIFFFieldArray
LEAF_NODE	897:27	897:27	11	TIFFFieldArray
LEAF_NODE	897:42	897:42	10	*
LEAF_NODE	897:43	897:43	10	)
FUNCTION_CALL	898:3	900:37	10	_TIFFCheckRealloc ( tif , tif -> tif_fieldscompat , tif -> tif_nfieldscompat + 1 , sizeof ( TIFFFieldArray ) , reason )
CALLEE	898:3	898:3	11	_TIFFCheckRealloc
LEAF_NODE	898:3	898:3	12	_TIFFCheckRealloc
LEAF_NODE	898:20	898:20	11	(
ARGUMENT	898:21	898:21	11	tif
FIELD	898:21	898:21	12	tif
LEAF_NODE	898:21	898:21	13	tif
LEAF_NODE	898:24	898:24	11	,
ARGUMENT	898:26	898:26	11	tif -> tif_fieldscompat
FIELD	898:26	898:31	12	tif -> tif_fieldscompat
LEAF_NODE	898:26	898:26	13	tif
LEAF_NODE	898:29	898:29	13	->
LEAF_NODE	898:31	898:31	13	tif_fieldscompat
LEAF_NODE	898:47	898:47	11	,
ARGUMENT	899:7	899:32	11	tif -> tif_nfieldscompat + 1
FIELD	899:7	899:12	12	tif -> tif_nfieldscompat
LEAF_NODE	899:7	899:7	13	tif
LEAF_NODE	899:10	899:10	13	->
LEAF_NODE	899:12	899:12	13	tif_nfieldscompat
LEAF_NODE	899:30	899:30	12	+
FIELD	899:32	899:32	12	1
LEAF_NODE	899:32	899:32	13	1
LEAF_NODE	899:33	899:33	11	,
ARGUMENT	900:7	900:7	11	sizeof ( TIFFFieldArray )
FUNCTION_CALL	900:7	900:28	12	sizeof ( TIFFFieldArray )
CALLEE	900:7	900:7	13	sizeof
LEAF_NODE	900:7	900:7	14	sizeof
LEAF_NODE	900:13	900:13	13	(
ARGUMENT	900:14	900:14	13	TIFFFieldArray
FIELD	900:14	900:14	14	TIFFFieldArray
LEAF_NODE	900:14	900:14	15	TIFFFieldArray
LEAF_NODE	900:28	900:28	13	)
LEAF_NODE	900:29	900:29	11	,
ARGUMENT	900:31	900:31	11	reason
FIELD	900:31	900:31	12	reason
LEAF_NODE	900:31	900:31	13	reason
LEAF_NODE	900:37	900:37	11	)
LEAF_NODE	900:38	900:38	7	;
LEAF_NODE	901:1	901:1	5	}
SELECTION	901:3	901:8	3	
KEYWORD	901:3	901:3	4	else
LEAF_NODE	901:3	901:3	5	else
STATEMENTS	901:8	905:1	4	
LEAF_NODE	901:8	901:8	5	{
STATEMENTS	902:2	902:2	5	
EXPR_STATEMENT	902:2	904:13	6	tif -> tif_fieldscompat = ( TIFFFieldArray * ) _TIFFCheckMalloc ( tif , 1 , sizeof ( TIFFFieldArray ) , reason ) ;
EXPR	902:2	902:2	7	tif -> tif_fieldscompat = ( TIFFFieldArray * ) _TIFFCheckMalloc ( tif , 1 , sizeof ( TIFFFieldArray ) , reason )
ASSIGN	902:2	902:26	8	tif -> tif_fieldscompat = ( TIFFFieldArray * ) _TIFFCheckMalloc ( tif , 1 , sizeof ( TIFFFieldArray ) , reason )
LVAL	902:2	902:2	9	tif -> tif_fieldscompat
FIELD	902:2	902:7	10	tif -> tif_fieldscompat
LEAF_NODE	902:2	902:2	11	tif
LEAF_NODE	902:5	902:5	11	->
LEAF_NODE	902:7	902:7	11	tif_fieldscompat
ASSIGN_OP	902:24	902:24	9	=
LEAF_NODE	902:24	902:24	10	=
RVAL	902:26	903:3	9	( TIFFFieldArray * ) _TIFFCheckMalloc ( tif , 1 , sizeof ( TIFFFieldArray ) , reason )
LEAF_NODE	902:26	902:26	10	(
TYPE_NAME	902:27	902:27	10	TIFFFieldArray
LEAF_NODE	902:27	902:27	11	TIFFFieldArray
LEAF_NODE	902:42	902:42	10	*
LEAF_NODE	902:43	902:43	10	)
FUNCTION_CALL	903:3	904:12	10	_TIFFCheckMalloc ( tif , 1 , sizeof ( TIFFFieldArray ) , reason )
CALLEE	903:3	903:3	11	_TIFFCheckMalloc
LEAF_NODE	903:3	903:3	12	_TIFFCheckMalloc
LEAF_NODE	903:19	903:19	11	(
ARGUMENT	903:20	903:20	11	tif
FIELD	903:20	903:20	12	tif
LEAF_NODE	903:20	903:20	13	tif
LEAF_NODE	903:23	903:23	11	,
ARGUMENT	903:25	903:25	11	1
FIELD	903:25	903:25	12	1
LEAF_NODE	903:25	903:25	13	1
LEAF_NODE	903:26	903:26	11	,
ARGUMENT	903:28	903:28	11	sizeof ( TIFFFieldArray )
FUNCTION_CALL	903:28	903:49	12	sizeof ( TIFFFieldArray )
CALLEE	903:28	903:28	13	sizeof
LEAF_NODE	903:28	903:28	14	sizeof
LEAF_NODE	903:34	903:34	13	(
ARGUMENT	903:35	903:35	13	TIFFFieldArray
FIELD	903:35	903:35	14	TIFFFieldArray
LEAF_NODE	903:35	903:35	15	TIFFFieldArray
LEAF_NODE	903:49	903:49	13	)
LEAF_NODE	903:50	903:50	11	,
ARGUMENT	904:6	904:6	11	reason
FIELD	904:6	904:6	12	reason
LEAF_NODE	904:6	904:6	13	reason
LEAF_NODE	904:12	904:12	11	)
LEAF_NODE	904:13	904:13	7	;
LEAF_NODE	905:1	905:1	5	}
SELECTION	906:1	906:29	3	
KEYWORD	906:1	906:1	4	if
LEAF_NODE	906:1	906:1	5	if
LEAF_NODE	906:4	906:4	4	(
CONDITION	906:5	906:5	4	! tif -> tif_fieldscompat
EXPR	906:5	906:5	5	! tif -> tif_fieldscompat
UNARY_EXPR	906:5	906:6	6	! tif -> tif_fieldscompat
UNARY_OPERATOR	906:5	906:5	7	!
LEAF_NODE	906:5	906:5	8	!
FIELD	906:6	906:11	7	tif -> tif_fieldscompat
LEAF_NODE	906:6	906:6	8	tif
LEAF_NODE	906:9	906:9	8	->
LEAF_NODE	906:11	906:11	8	tif_fieldscompat
LEAF_NODE	906:27	906:27	4	)
STATEMENTS	906:29	910:1	4	
LEAF_NODE	906:29	906:29	5	{
STATEMENTS	907:2	909:2	5	
EXPR_STATEMENT	907:2	908:42	6	TIFFErrorExt ( tif -> tif_clientdata , module , "Failed to allocate fields array" ) ;
EXPR	907:2	907:2	7	TIFFErrorExt ( tif -> tif_clientdata , module , "Failed to allocate fields array" )
FUNCTION_CALL	907:2	908:41	8	TIFFErrorExt ( tif -> tif_clientdata , module , "Failed to allocate fields array" )
CALLEE	907:2	907:2	9	TIFFErrorExt
LEAF_NODE	907:2	907:2	10	TIFFErrorExt
LEAF_NODE	907:14	907:14	9	(
ARGUMENT	907:15	907:15	9	tif -> tif_clientdata
FIELD	907:15	907:20	10	tif -> tif_clientdata
LEAF_NODE	907:15	907:15	11	tif
LEAF_NODE	907:18	907:18	11	->
LEAF_NODE	907:20	907:20	11	tif_clientdata
LEAF_NODE	907:34	907:34	9	,
ARGUMENT	907:36	907:36	9	module
FIELD	907:36	907:36	10	module
LEAF_NODE	907:36	907:36	11	module
LEAF_NODE	907:42	907:42	9	,
ARGUMENT	908:8	908:8	9	"Failed to allocate fields array"
FIELD	908:8	908:8	10	"Failed to allocate fields array"
LEAF_NODE	908:8	908:8	11	"Failed to allocate fields array"
LEAF_NODE	908:41	908:41	9	)
LEAF_NODE	908:42	908:42	7	;
JUMP_STATEMENT	909:2	909:11	6	return - 1 ;
KEYWORD	909:2	909:2	7	return
LEAF_NODE	909:2	909:2	8	return
DESTINATION	909:9	909:9	7	- 1
EXPR	909:9	909:9	8	- 1
UNARY_EXPR	909:9	909:10	9	- 1
UNARY_OPERATOR	909:9	909:9	10	-
LEAF_NODE	909:9	909:9	11	-
FIELD	909:10	909:10	10	1
LEAF_NODE	909:10	909:10	11	1
LEAF_NODE	909:11	909:11	7	;
LEAF_NODE	910:1	910:1	5	}
EXPR_STATEMENT	911:1	911:35	3	nfields = tif -> tif_nfieldscompat ++ ;
EXPR	911:1	911:1	4	nfields = tif -> tif_nfieldscompat ++
ASSIGN	911:1	911:11	5	nfields = tif -> tif_nfieldscompat ++
LVAL	911:1	911:1	6	nfields
FIELD	911:1	911:1	7	nfields
LEAF_NODE	911:1	911:1	8	nfields
ASSIGN_OP	911:9	911:9	6	=
LEAF_NODE	911:9	911:9	7	=
RVAL	911:11	911:11	6	tif -> tif_nfieldscompat ++
FIELD	911:11	911:33	7	tif -> tif_nfieldscompat ++
LEAF_NODE	911:11	911:11	8	tif
LEAF_NODE	911:14	911:14	8	->
LEAF_NODE	911:16	911:16	8	tif_nfieldscompat
LEAF_NODE	911:33	911:33	8	++
LEAF_NODE	911:35	911:35	4	;
EXPR_STATEMENT	913:1	913:49	3	tif -> tif_fieldscompat [ nfields ] . type = tfiatOther ;
EXPR	913:1	913:1	4	tif -> tif_fieldscompat [ nfields ] . type = tfiatOther
ASSIGN	913:1	913:39	5	tif -> tif_fieldscompat [ nfields ] . type = tfiatOther
LVAL	913:1	913:1	6	tif -> tif_fieldscompat [ nfields ] . type
FIELD	913:1	913:32	7	tif -> tif_fieldscompat [ nfields ] . type
LEAF_NODE	913:1	913:1	8	tif
LEAF_NODE	913:4	913:4	8	->
LEAF_NODE	913:6	913:6	8	tif_fieldscompat
LEAF_NODE	913:22	913:22	8	[
EXPR	913:23	913:23	8	nfields
FIELD	913:23	913:23	9	nfields
LEAF_NODE	913:23	913:23	10	nfields
LEAF_NODE	913:30	913:30	8	]
LEAF_NODE	913:31	913:31	8	.
LEAF_NODE	913:32	913:32	8	type
ASSIGN_OP	913:37	913:37	6	=
LEAF_NODE	913:37	913:37	7	=
RVAL	913:39	913:39	6	tfiatOther
FIELD	913:39	913:39	7	tfiatOther
LEAF_NODE	913:39	913:39	8	tfiatOther
LEAF_NODE	913:49	913:49	4	;
EXPR_STATEMENT	914:1	914:50	3	tif -> tif_fieldscompat [ nfields ] . allocated_size = n ;
EXPR	914:1	914:1	4	tif -> tif_fieldscompat [ nfields ] . allocated_size = n
ASSIGN	914:1	914:49	5	tif -> tif_fieldscompat [ nfields ] . allocated_size = n
LVAL	914:1	914:1	6	tif -> tif_fieldscompat [ nfields ] . allocated_size
FIELD	914:1	914:32	7	tif -> tif_fieldscompat [ nfields ] . allocated_size
LEAF_NODE	914:1	914:1	8	tif
LEAF_NODE	914:4	914:4	8	->
LEAF_NODE	914:6	914:6	8	tif_fieldscompat
LEAF_NODE	914:22	914:22	8	[
EXPR	914:23	914:23	8	nfields
FIELD	914:23	914:23	9	nfields
LEAF_NODE	914:23	914:23	10	nfields
LEAF_NODE	914:30	914:30	8	]
LEAF_NODE	914:31	914:31	8	.
LEAF_NODE	914:32	914:32	8	allocated_size
ASSIGN_OP	914:47	914:47	6	=
LEAF_NODE	914:47	914:47	7	=
RVAL	914:49	914:49	6	n
FIELD	914:49	914:49	7	n
LEAF_NODE	914:49	914:49	8	n
LEAF_NODE	914:50	914:50	4	;
EXPR_STATEMENT	915:1	915:41	3	tif -> tif_fieldscompat [ nfields ] . count = n ;
EXPR	915:1	915:1	4	tif -> tif_fieldscompat [ nfields ] . count = n
ASSIGN	915:1	915:40	5	tif -> tif_fieldscompat [ nfields ] . count = n
LVAL	915:1	915:1	6	tif -> tif_fieldscompat [ nfields ] . count
FIELD	915:1	915:32	7	tif -> tif_fieldscompat [ nfields ] . count
LEAF_NODE	915:1	915:1	8	tif
LEAF_NODE	915:4	915:4	8	->
LEAF_NODE	915:6	915:6	8	tif_fieldscompat
LEAF_NODE	915:22	915:22	8	[
EXPR	915:23	915:23	8	nfields
FIELD	915:23	915:23	9	nfields
LEAF_NODE	915:23	915:23	10	nfields
LEAF_NODE	915:30	915:30	8	]
LEAF_NODE	915:31	915:31	8	.
LEAF_NODE	915:32	915:32	8	count
ASSIGN_OP	915:38	915:38	6	=
LEAF_NODE	915:38	915:38	7	=
RVAL	915:40	915:40	6	n
FIELD	915:40	915:40	7	n
LEAF_NODE	915:40	915:40	8	n
LEAF_NODE	915:41	915:41	4	;
EXPR_STATEMENT	916:1	918:18	3	tif -> tif_fieldscompat [ nfields ] . fields = ( TIFFField * ) _TIFFCheckMalloc ( tif , n , sizeof ( TIFFField ) , reason ) ;
EXPR	916:1	916:1	4	tif -> tif_fieldscompat [ nfields ] . fields = ( TIFFField * ) _TIFFCheckMalloc ( tif , n , sizeof ( TIFFField ) , reason )
ASSIGN	916:1	917:2	5	tif -> tif_fieldscompat [ nfields ] . fields = ( TIFFField * ) _TIFFCheckMalloc ( tif , n , sizeof ( TIFFField ) , reason )
LVAL	916:1	916:1	6	tif -> tif_fieldscompat [ nfields ] . fields
FIELD	916:1	916:32	7	tif -> tif_fieldscompat [ nfields ] . fields
LEAF_NODE	916:1	916:1	8	tif
LEAF_NODE	916:4	916:4	8	->
LEAF_NODE	916:6	916:6	8	tif_fieldscompat
LEAF_NODE	916:22	916:22	8	[
EXPR	916:23	916:23	8	nfields
FIELD	916:23	916:23	9	nfields
LEAF_NODE	916:23	916:23	10	nfields
LEAF_NODE	916:30	916:30	8	]
LEAF_NODE	916:31	916:31	8	.
LEAF_NODE	916:32	916:32	8	fields
ASSIGN_OP	916:39	916:39	6	=
LEAF_NODE	916:39	916:39	7	=
RVAL	917:2	917:15	6	( TIFFField * ) _TIFFCheckMalloc ( tif , n , sizeof ( TIFFField ) , reason )
LEAF_NODE	917:2	917:2	7	(
TYPE_NAME	917:3	917:3	7	TIFFField
LEAF_NODE	917:3	917:3	8	TIFFField
LEAF_NODE	917:13	917:13	7	*
LEAF_NODE	917:14	917:14	7	)
FUNCTION_CALL	917:15	918:17	7	_TIFFCheckMalloc ( tif , n , sizeof ( TIFFField ) , reason )
CALLEE	917:15	917:15	8	_TIFFCheckMalloc
LEAF_NODE	917:15	917:15	9	_TIFFCheckMalloc
LEAF_NODE	917:31	917:31	8	(
ARGUMENT	917:32	917:32	8	tif
FIELD	917:32	917:32	9	tif
LEAF_NODE	917:32	917:32	10	tif
LEAF_NODE	917:35	917:35	8	,
ARGUMENT	917:37	917:37	8	n
FIELD	917:37	917:37	9	n
LEAF_NODE	917:37	917:37	10	n
LEAF_NODE	917:38	917:38	8	,
ARGUMENT	917:40	917:40	8	sizeof ( TIFFField )
FUNCTION_CALL	917:40	917:56	9	sizeof ( TIFFField )
CALLEE	917:40	917:40	10	sizeof
LEAF_NODE	917:40	917:40	11	sizeof
LEAF_NODE	917:46	917:46	10	(
ARGUMENT	917:47	917:47	10	TIFFField
FIELD	917:47	917:47	11	TIFFField
LEAF_NODE	917:47	917:47	12	TIFFField
LEAF_NODE	917:56	917:56	10	)
LEAF_NODE	917:57	917:57	8	,
ARGUMENT	918:11	918:11	8	reason
FIELD	918:11	918:11	9	reason
LEAF_NODE	918:11	918:11	10	reason
LEAF_NODE	918:17	918:17	8	)
LEAF_NODE	918:18	918:18	4	;
SELECTION	919:1	919:45	3	
KEYWORD	919:1	919:1	4	if
LEAF_NODE	919:1	919:1	5	if
LEAF_NODE	919:4	919:4	4	(
CONDITION	919:5	919:5	4	! tif -> tif_fieldscompat [ nfields ] . fields
EXPR	919:5	919:5	5	! tif -> tif_fieldscompat [ nfields ] . fields
UNARY_EXPR	919:5	919:6	6	! tif -> tif_fieldscompat [ nfields ] . fields
UNARY_OPERATOR	919:5	919:5	7	!
LEAF_NODE	919:5	919:5	8	!
FIELD	919:6	919:37	7	tif -> tif_fieldscompat [ nfields ] . fields
LEAF_NODE	919:6	919:6	8	tif
LEAF_NODE	919:9	919:9	8	->
LEAF_NODE	919:11	919:11	8	tif_fieldscompat
LEAF_NODE	919:27	919:27	8	[
EXPR	919:28	919:28	8	nfields
FIELD	919:28	919:28	9	nfields
LEAF_NODE	919:28	919:28	10	nfields
LEAF_NODE	919:35	919:35	8	]
LEAF_NODE	919:36	919:36	8	.
LEAF_NODE	919:37	919:37	8	fields
LEAF_NODE	919:43	919:43	4	)
STATEMENTS	919:45	923:1	4	
LEAF_NODE	919:45	919:45	5	{
STATEMENTS	920:2	922:2	5	
EXPR_STATEMENT	920:2	921:42	6	TIFFErrorExt ( tif -> tif_clientdata , module , "Failed to allocate fields array" ) ;
EXPR	920:2	920:2	7	TIFFErrorExt ( tif -> tif_clientdata , module , "Failed to allocate fields array" )
FUNCTION_CALL	920:2	921:41	8	TIFFErrorExt ( tif -> tif_clientdata , module , "Failed to allocate fields array" )
CALLEE	920:2	920:2	9	TIFFErrorExt
LEAF_NODE	920:2	920:2	10	TIFFErrorExt
LEAF_NODE	920:14	920:14	9	(
ARGUMENT	920:15	920:15	9	tif -> tif_clientdata
FIELD	920:15	920:20	10	tif -> tif_clientdata
LEAF_NODE	920:15	920:15	11	tif
LEAF_NODE	920:18	920:18	11	->
LEAF_NODE	920:20	920:20	11	tif_clientdata
LEAF_NODE	920:34	920:34	9	,
ARGUMENT	920:36	920:36	9	module
FIELD	920:36	920:36	10	module
LEAF_NODE	920:36	920:36	11	module
LEAF_NODE	920:42	920:42	9	,
ARGUMENT	921:8	921:8	9	"Failed to allocate fields array"
FIELD	921:8	921:8	10	"Failed to allocate fields array"
LEAF_NODE	921:8	921:8	11	"Failed to allocate fields array"
LEAF_NODE	921:41	921:41	9	)
LEAF_NODE	921:42	921:42	7	;
JUMP_STATEMENT	922:2	922:11	6	return - 1 ;
KEYWORD	922:2	922:2	7	return
LEAF_NODE	922:2	922:2	8	return
DESTINATION	922:9	922:9	7	- 1
EXPR	922:9	922:9	8	- 1
UNARY_EXPR	922:9	922:10	9	- 1
UNARY_OPERATOR	922:9	922:9	10	-
LEAF_NODE	922:9	922:9	11	-
FIELD	922:10	922:10	10	1
LEAF_NODE	922:10	922:10	11	1
LEAF_NODE	922:11	922:11	7	;
LEAF_NODE	923:1	923:1	5	}
EXPR_STATEMENT	925:1	925:43	3	tp = tif -> tif_fieldscompat [ nfields ] . fields ;
EXPR	925:1	925:1	4	tp = tif -> tif_fieldscompat [ nfields ] . fields
ASSIGN	925:1	925:6	5	tp = tif -> tif_fieldscompat [ nfields ] . fields
LVAL	925:1	925:1	6	tp
FIELD	925:1	925:1	7	tp
LEAF_NODE	925:1	925:1	8	tp
ASSIGN_OP	925:4	925:4	6	=
LEAF_NODE	925:4	925:4	7	=
RVAL	925:6	925:6	6	tif -> tif_fieldscompat [ nfields ] . fields
FIELD	925:6	925:37	7	tif -> tif_fieldscompat [ nfields ] . fields
LEAF_NODE	925:6	925:6	8	tif
LEAF_NODE	925:9	925:9	8	->
LEAF_NODE	925:11	925:11	8	tif_fieldscompat
LEAF_NODE	925:27	925:27	8	[
EXPR	925:28	925:28	8	nfields
FIELD	925:28	925:28	9	nfields
LEAF_NODE	925:28	925:28	10	nfields
LEAF_NODE	925:35	925:35	8	]
LEAF_NODE	925:36	925:36	8	.
LEAF_NODE	925:37	925:37	8	fields
LEAF_NODE	925:43	925:43	4	;
ITERATION	926:1	926:25	3	
KEYWORD	926:1	926:1	4	for
LEAF_NODE	926:1	926:1	5	for
LEAF_NODE	926:5	926:5	4	(
FOR_INIT	926:6	926:11	4	i = 0 ;
EXPR	926:6	926:6	5	i = 0
ASSIGN	926:6	926:10	6	i = 0
LVAL	926:6	926:6	7	i
FIELD	926:6	926:6	8	i
LEAF_NODE	926:6	926:6	9	i
ASSIGN_OP	926:8	926:8	7	=
LEAF_NODE	926:8	926:8	8	=
RVAL	926:10	926:10	7	0
FIELD	926:10	926:10	8	0
LEAF_NODE	926:10	926:10	9	0
LEAF_NODE	926:11	926:11	5	;
CONDITION	926:13	926:13	4	i < n
EXPR	926:13	926:17	5	i < n
FIELD	926:13	926:13	6	i
LEAF_NODE	926:13	926:13	7	i
REL_OPERATOR	926:15	926:15	6	<
LEAF_NODE	926:15	926:15	7	<
FIELD	926:17	926:17	6	n
LEAF_NODE	926:17	926:17	7	n
LEAF_NODE	926:18	926:18	4	;
FOR_EXPR	926:20	926:20	4	i ++
EXPR	926:20	926:20	5	i ++
FIELD	926:20	926:21	6	i ++
LEAF_NODE	926:20	926:20	7	i
LEAF_NODE	926:21	926:21	7	++
LEAF_NODE	926:23	926:23	4	)
STATEMENTS	926:25	946:1	4	
LEAF_NODE	926:25	926:25	5	{
STATEMENTS	927:2	945:2	5	
EXPR_STATEMENT	927:2	927:35	6	tp -> field_tag = info [ i ] . field_tag ;
EXPR	927:2	927:2	7	tp -> field_tag = info [ i ] . field_tag
ASSIGN	927:2	927:18	8	tp -> field_tag = info [ i ] . field_tag
LVAL	927:2	927:2	9	tp -> field_tag
FIELD	927:2	927:6	10	tp -> field_tag
LEAF_NODE	927:2	927:2	11	tp
LEAF_NODE	927:4	927:4	11	->
LEAF_NODE	927:6	927:6	11	field_tag
ASSIGN_OP	927:16	927:16	9	=
LEAF_NODE	927:16	927:16	10	=
RVAL	927:18	927:18	9	info [ i ] . field_tag
FIELD	927:18	927:26	10	info [ i ] . field_tag
LEAF_NODE	927:18	927:18	11	info
LEAF_NODE	927:22	927:22	11	[
EXPR	927:23	927:23	11	i
FIELD	927:23	927:23	12	i
LEAF_NODE	927:23	927:23	13	i
LEAF_NODE	927:24	927:24	11	]
LEAF_NODE	927:25	927:25	11	.
LEAF_NODE	927:26	927:26	11	field_tag
LEAF_NODE	927:35	927:35	7	;
EXPR_STATEMENT	928:2	928:47	6	tp -> field_readcount = info [ i ] . field_readcount ;
EXPR	928:2	928:2	7	tp -> field_readcount = info [ i ] . field_readcount
ASSIGN	928:2	928:24	8	tp -> field_readcount = info [ i ] . field_readcount
LVAL	928:2	928:2	9	tp -> field_readcount
FIELD	928:2	928:6	10	tp -> field_readcount
LEAF_NODE	928:2	928:2	11	tp
LEAF_NODE	928:4	928:4	11	->
LEAF_NODE	928:6	928:6	11	field_readcount
ASSIGN_OP	928:22	928:22	9	=
LEAF_NODE	928:22	928:22	10	=
RVAL	928:24	928:24	9	info [ i ] . field_readcount
FIELD	928:24	928:32	10	info [ i ] . field_readcount
LEAF_NODE	928:24	928:24	11	info
LEAF_NODE	928:28	928:28	11	[
EXPR	928:29	928:29	11	i
FIELD	928:29	928:29	12	i
LEAF_NODE	928:29	928:29	13	i
LEAF_NODE	928:30	928:30	11	]
LEAF_NODE	928:31	928:31	11	.
LEAF_NODE	928:32	928:32	11	field_readcount
LEAF_NODE	928:47	928:47	7	;
EXPR_STATEMENT	929:2	929:49	6	tp -> field_writecount = info [ i ] . field_writecount ;
EXPR	929:2	929:2	7	tp -> field_writecount = info [ i ] . field_writecount
ASSIGN	929:2	929:25	8	tp -> field_writecount = info [ i ] . field_writecount
LVAL	929:2	929:2	9	tp -> field_writecount
FIELD	929:2	929:6	10	tp -> field_writecount
LEAF_NODE	929:2	929:2	11	tp
LEAF_NODE	929:4	929:4	11	->
LEAF_NODE	929:6	929:6	11	field_writecount
ASSIGN_OP	929:23	929:23	9	=
LEAF_NODE	929:23	929:23	10	=
RVAL	929:25	929:25	9	info [ i ] . field_writecount
FIELD	929:25	929:33	10	info [ i ] . field_writecount
LEAF_NODE	929:25	929:25	11	info
LEAF_NODE	929:29	929:29	11	[
EXPR	929:30	929:30	11	i
FIELD	929:30	929:30	12	i
LEAF_NODE	929:30	929:30	13	i
LEAF_NODE	929:31	929:31	11	]
LEAF_NODE	929:32	929:32	11	.
LEAF_NODE	929:33	929:33	11	field_writecount
LEAF_NODE	929:49	929:49	7	;
EXPR_STATEMENT	930:2	930:37	6	tp -> field_type = info [ i ] . field_type ;
EXPR	930:2	930:2	7	tp -> field_type = info [ i ] . field_type
ASSIGN	930:2	930:19	8	tp -> field_type = info [ i ] . field_type
LVAL	930:2	930:2	9	tp -> field_type
FIELD	930:2	930:6	10	tp -> field_type
LEAF_NODE	930:2	930:2	11	tp
LEAF_NODE	930:4	930:4	11	->
LEAF_NODE	930:6	930:6	11	field_type
ASSIGN_OP	930:17	930:17	9	=
LEAF_NODE	930:17	930:17	10	=
RVAL	930:19	930:19	9	info [ i ] . field_type
FIELD	930:19	930:27	10	info [ i ] . field_type
LEAF_NODE	930:19	930:19	11	info
LEAF_NODE	930:23	930:23	11	[
EXPR	930:24	930:24	11	i
FIELD	930:24	930:24	12	i
LEAF_NODE	930:24	930:24	13	i
LEAF_NODE	930:25	930:25	11	]
LEAF_NODE	930:26	930:26	11	.
LEAF_NODE	930:27	930:27	11	field_type
LEAF_NODE	930:37	930:37	7	;
EXPR_STATEMENT	931:2	931:18	6	tp -> reserved = 0 ;
EXPR	931:2	931:2	7	tp -> reserved = 0
ASSIGN	931:2	931:17	8	tp -> reserved = 0
LVAL	931:2	931:2	9	tp -> reserved
FIELD	931:2	931:6	10	tp -> reserved
LEAF_NODE	931:2	931:2	11	tp
LEAF_NODE	931:4	931:4	11	->
LEAF_NODE	931:6	931:6	11	reserved
ASSIGN_OP	931:15	931:15	9	=
LEAF_NODE	931:15	931:15	10	=
RVAL	931:17	931:17	9	0
FIELD	931:17	931:17	10	0
LEAF_NODE	931:17	931:17	11	0
LEAF_NODE	931:18	931:18	7	;
EXPR_STATEMENT	932:2	935:28	6	tp -> set_field_type = _TIFFSetGetType ( info [ i ] . field_type , info [ i ] . field_readcount , info [ i ] . field_passcount ) ;
EXPR	932:2	932:2	7	tp -> set_field_type = _TIFFSetGetType ( info [ i ] . field_type , info [ i ] . field_readcount , info [ i ] . field_passcount )
ASSIGN	932:2	933:7	8	tp -> set_field_type = _TIFFSetGetType ( info [ i ] . field_type , info [ i ] . field_readcount , info [ i ] . field_passcount )
LVAL	932:2	932:2	9	tp -> set_field_type
FIELD	932:2	932:6	10	tp -> set_field_type
LEAF_NODE	932:2	932:2	11	tp
LEAF_NODE	932:4	932:4	11	->
LEAF_NODE	932:6	932:6	11	set_field_type
ASSIGN_OP	932:21	932:21	9	=
LEAF_NODE	932:21	932:21	10	=
RVAL	933:7	933:7	9	_TIFFSetGetType ( info [ i ] . field_type , info [ i ] . field_readcount , info [ i ] . field_passcount )
FUNCTION_CALL	933:7	935:27	10	_TIFFSetGetType ( info [ i ] . field_type , info [ i ] . field_readcount , info [ i ] . field_passcount )
CALLEE	933:7	933:7	11	_TIFFSetGetType
LEAF_NODE	933:7	933:7	12	_TIFFSetGetType
LEAF_NODE	933:22	933:22	11	(
ARGUMENT	933:23	933:23	11	info [ i ] . field_type
FIELD	933:23	933:31	12	info [ i ] . field_type
LEAF_NODE	933:23	933:23	13	info
LEAF_NODE	933:27	933:27	13	[
EXPR	933:28	933:28	13	i
FIELD	933:28	933:28	14	i
LEAF_NODE	933:28	933:28	15	i
LEAF_NODE	933:29	933:29	13	]
LEAF_NODE	933:30	933:30	13	.
LEAF_NODE	933:31	933:31	13	field_type
LEAF_NODE	933:41	933:41	11	,
ARGUMENT	934:4	934:4	11	info [ i ] . field_readcount
FIELD	934:4	934:12	12	info [ i ] . field_readcount
LEAF_NODE	934:4	934:4	13	info
LEAF_NODE	934:8	934:8	13	[
EXPR	934:9	934:9	13	i
FIELD	934:9	934:9	14	i
LEAF_NODE	934:9	934:9	15	i
LEAF_NODE	934:10	934:10	13	]
LEAF_NODE	934:11	934:11	13	.
LEAF_NODE	934:12	934:12	13	field_readcount
LEAF_NODE	934:27	934:27	11	,
ARGUMENT	935:4	935:4	11	info [ i ] . field_passcount
FIELD	935:4	935:12	12	info [ i ] . field_passcount
LEAF_NODE	935:4	935:4	13	info
LEAF_NODE	935:8	935:8	13	[
EXPR	935:9	935:9	13	i
FIELD	935:9	935:9	14	i
LEAF_NODE	935:9	935:9	15	i
LEAF_NODE	935:10	935:10	13	]
LEAF_NODE	935:11	935:11	13	.
LEAF_NODE	935:12	935:12	13	field_passcount
LEAF_NODE	935:27	935:27	11	)
LEAF_NODE	935:28	935:28	7	;
EXPR_STATEMENT	936:2	939:28	6	tp -> get_field_type = _TIFFSetGetType ( info [ i ] . field_type , info [ i ] . field_readcount , info [ i ] . field_passcount ) ;
EXPR	936:2	936:2	7	tp -> get_field_type = _TIFFSetGetType ( info [ i ] . field_type , info [ i ] . field_readcount , info [ i ] . field_passcount )
ASSIGN	936:2	937:7	8	tp -> get_field_type = _TIFFSetGetType ( info [ i ] . field_type , info [ i ] . field_readcount , info [ i ] . field_passcount )
LVAL	936:2	936:2	9	tp -> get_field_type
FIELD	936:2	936:6	10	tp -> get_field_type
LEAF_NODE	936:2	936:2	11	tp
LEAF_NODE	936:4	936:4	11	->
LEAF_NODE	936:6	936:6	11	get_field_type
ASSIGN_OP	936:21	936:21	9	=
LEAF_NODE	936:21	936:21	10	=
RVAL	937:7	937:7	9	_TIFFSetGetType ( info [ i ] . field_type , info [ i ] . field_readcount , info [ i ] . field_passcount )
FUNCTION_CALL	937:7	939:27	10	_TIFFSetGetType ( info [ i ] . field_type , info [ i ] . field_readcount , info [ i ] . field_passcount )
CALLEE	937:7	937:7	11	_TIFFSetGetType
LEAF_NODE	937:7	937:7	12	_TIFFSetGetType
LEAF_NODE	937:22	937:22	11	(
ARGUMENT	937:23	937:23	11	info [ i ] . field_type
FIELD	937:23	937:31	12	info [ i ] . field_type
LEAF_NODE	937:23	937:23	13	info
LEAF_NODE	937:27	937:27	13	[
EXPR	937:28	937:28	13	i
FIELD	937:28	937:28	14	i
LEAF_NODE	937:28	937:28	15	i
LEAF_NODE	937:29	937:29	13	]
LEAF_NODE	937:30	937:30	13	.
LEAF_NODE	937:31	937:31	13	field_type
LEAF_NODE	937:41	937:41	11	,
ARGUMENT	938:4	938:4	11	info [ i ] . field_readcount
FIELD	938:4	938:12	12	info [ i ] . field_readcount
LEAF_NODE	938:4	938:4	13	info
LEAF_NODE	938:8	938:8	13	[
EXPR	938:9	938:9	13	i
FIELD	938:9	938:9	14	i
LEAF_NODE	938:9	938:9	15	i
LEAF_NODE	938:10	938:10	13	]
LEAF_NODE	938:11	938:11	13	.
LEAF_NODE	938:12	938:12	13	field_readcount
LEAF_NODE	938:27	938:27	11	,
ARGUMENT	939:4	939:4	11	info [ i ] . field_passcount
FIELD	939:4	939:12	12	info [ i ] . field_passcount
LEAF_NODE	939:4	939:4	13	info
LEAF_NODE	939:8	939:8	13	[
EXPR	939:9	939:9	13	i
FIELD	939:9	939:9	14	i
LEAF_NODE	939:9	939:9	15	i
LEAF_NODE	939:10	939:10	13	]
LEAF_NODE	939:11	939:11	13	.
LEAF_NODE	939:12	939:12	13	field_passcount
LEAF_NODE	939:27	939:27	11	)
LEAF_NODE	939:28	939:28	7	;
EXPR_STATEMENT	940:2	940:35	6	tp -> field_bit = info [ i ] . field_bit ;
EXPR	940:2	940:2	7	tp -> field_bit = info [ i ] . field_bit
ASSIGN	940:2	940:18	8	tp -> field_bit = info [ i ] . field_bit
LVAL	940:2	940:2	9	tp -> field_bit
FIELD	940:2	940:6	10	tp -> field_bit
LEAF_NODE	940:2	940:2	11	tp
LEAF_NODE	940:4	940:4	11	->
LEAF_NODE	940:6	940:6	11	field_bit
ASSIGN_OP	940:16	940:16	9	=
LEAF_NODE	940:16	940:16	10	=
RVAL	940:18	940:18	9	info [ i ] . field_bit
FIELD	940:18	940:26	10	info [ i ] . field_bit
LEAF_NODE	940:18	940:18	11	info
LEAF_NODE	940:22	940:22	11	[
EXPR	940:23	940:23	11	i
FIELD	940:23	940:23	12	i
LEAF_NODE	940:23	940:23	13	i
LEAF_NODE	940:24	940:24	11	]
LEAF_NODE	940:25	940:25	11	.
LEAF_NODE	940:26	940:26	11	field_bit
LEAF_NODE	940:35	940:35	7	;
EXPR_STATEMENT	941:2	941:49	6	tp -> field_oktochange = info [ i ] . field_oktochange ;
EXPR	941:2	941:2	7	tp -> field_oktochange = info [ i ] . field_oktochange
ASSIGN	941:2	941:25	8	tp -> field_oktochange = info [ i ] . field_oktochange
LVAL	941:2	941:2	9	tp -> field_oktochange
FIELD	941:2	941:6	10	tp -> field_oktochange
LEAF_NODE	941:2	941:2	11	tp
LEAF_NODE	941:4	941:4	11	->
LEAF_NODE	941:6	941:6	11	field_oktochange
ASSIGN_OP	941:23	941:23	9	=
LEAF_NODE	941:23	941:23	10	=
RVAL	941:25	941:25	9	info [ i ] . field_oktochange
FIELD	941:25	941:33	10	info [ i ] . field_oktochange
LEAF_NODE	941:25	941:25	11	info
LEAF_NODE	941:29	941:29	11	[
EXPR	941:30	941:30	11	i
FIELD	941:30	941:30	12	i
LEAF_NODE	941:30	941:30	13	i
LEAF_NODE	941:31	941:31	11	]
LEAF_NODE	941:32	941:32	11	.
LEAF_NODE	941:33	941:33	11	field_oktochange
LEAF_NODE	941:49	941:49	7	;
EXPR_STATEMENT	942:2	942:47	6	tp -> field_passcount = info [ i ] . field_passcount ;
EXPR	942:2	942:2	7	tp -> field_passcount = info [ i ] . field_passcount
ASSIGN	942:2	942:24	8	tp -> field_passcount = info [ i ] . field_passcount
LVAL	942:2	942:2	9	tp -> field_passcount
FIELD	942:2	942:6	10	tp -> field_passcount
LEAF_NODE	942:2	942:2	11	tp
LEAF_NODE	942:4	942:4	11	->
LEAF_NODE	942:6	942:6	11	field_passcount
ASSIGN_OP	942:22	942:22	9	=
LEAF_NODE	942:22	942:22	10	=
RVAL	942:24	942:24	9	info [ i ] . field_passcount
FIELD	942:24	942:32	10	info [ i ] . field_passcount
LEAF_NODE	942:24	942:24	11	info
LEAF_NODE	942:28	942:28	11	[
EXPR	942:29	942:29	11	i
FIELD	942:29	942:29	12	i
LEAF_NODE	942:29	942:29	13	i
LEAF_NODE	942:30	942:30	11	]
LEAF_NODE	942:31	942:31	11	.
LEAF_NODE	942:32	942:32	11	field_passcount
LEAF_NODE	942:47	942:47	7	;
EXPR_STATEMENT	943:2	943:37	6	tp -> field_name = info [ i ] . field_name ;
EXPR	943:2	943:2	7	tp -> field_name = info [ i ] . field_name
ASSIGN	943:2	943:19	8	tp -> field_name = info [ i ] . field_name
LVAL	943:2	943:2	9	tp -> field_name
FIELD	943:2	943:6	10	tp -> field_name
LEAF_NODE	943:2	943:2	11	tp
LEAF_NODE	943:4	943:4	11	->
LEAF_NODE	943:6	943:6	11	field_name
ASSIGN_OP	943:17	943:17	9	=
LEAF_NODE	943:17	943:17	10	=
RVAL	943:19	943:19	9	info [ i ] . field_name
FIELD	943:19	943:27	10	info [ i ] . field_name
LEAF_NODE	943:19	943:19	11	info
LEAF_NODE	943:23	943:23	11	[
EXPR	943:24	943:24	11	i
FIELD	943:24	943:24	12	i
LEAF_NODE	943:24	943:24	13	i
LEAF_NODE	943:25	943:25	11	]
LEAF_NODE	943:26	943:26	11	.
LEAF_NODE	943:27	943:27	11	field_name
LEAF_NODE	943:37	943:37	7	;
EXPR_STATEMENT	944:2	944:28	6	tp -> field_subfields = NULL ;
EXPR	944:2	944:2	7	tp -> field_subfields = NULL
ASSIGN	944:2	944:24	8	tp -> field_subfields = NULL
LVAL	944:2	944:2	9	tp -> field_subfields
FIELD	944:2	944:6	10	tp -> field_subfields
LEAF_NODE	944:2	944:2	11	tp
LEAF_NODE	944:4	944:4	11	->
LEAF_NODE	944:6	944:6	11	field_subfields
ASSIGN_OP	944:22	944:22	9	=
LEAF_NODE	944:22	944:22	10	=
RVAL	944:24	944:24	9	NULL
FIELD	944:24	944:24	10	NULL
LEAF_NODE	944:24	944:24	11	NULL
LEAF_NODE	944:28	944:28	7	;
EXPR_STATEMENT	945:2	945:6	6	tp ++ ;
EXPR	945:2	945:2	7	tp ++
FIELD	945:2	945:4	8	tp ++
LEAF_NODE	945:2	945:2	9	tp
LEAF_NODE	945:4	945:4	9	++
LEAF_NODE	945:6	945:6	7	;
LEAF_NODE	946:1	946:1	5	}
SELECTION	948:1	948:71	3	
KEYWORD	948:1	948:1	4	if
LEAF_NODE	948:1	948:1	5	if
LEAF_NODE	948:4	948:4	4	(
CONDITION	948:5	948:5	4	! _TIFFMergeFields ( tif , tif -> tif_fieldscompat [ nfields ] . fields , n )
EXPR	948:5	948:5	5	! _TIFFMergeFields ( tif , tif -> tif_fieldscompat [ nfields ] . fields , n )
UNARY_EXPR	948:5	948:6	6	! _TIFFMergeFields ( tif , tif -> tif_fieldscompat [ nfields ] . fields , n )
UNARY_OPERATOR	948:5	948:5	7	!
LEAF_NODE	948:5	948:5	8	!
FUNCTION_CALL	948:6	948:68	7	_TIFFMergeFields ( tif , tif -> tif_fieldscompat [ nfields ] . fields , n )
CALLEE	948:6	948:6	8	_TIFFMergeFields
LEAF_NODE	948:6	948:6	9	_TIFFMergeFields
LEAF_NODE	948:22	948:22	8	(
ARGUMENT	948:23	948:23	8	tif
FIELD	948:23	948:23	9	tif
LEAF_NODE	948:23	948:23	10	tif
LEAF_NODE	948:26	948:26	8	,
ARGUMENT	948:28	948:28	8	tif -> tif_fieldscompat [ nfields ] . fields
FIELD	948:28	948:59	9	tif -> tif_fieldscompat [ nfields ] . fields
LEAF_NODE	948:28	948:28	10	tif
LEAF_NODE	948:31	948:31	10	->
LEAF_NODE	948:33	948:33	10	tif_fieldscompat
LEAF_NODE	948:49	948:49	10	[
EXPR	948:50	948:50	10	nfields
FIELD	948:50	948:50	11	nfields
LEAF_NODE	948:50	948:50	12	nfields
LEAF_NODE	948:57	948:57	10	]
LEAF_NODE	948:58	948:58	10	.
LEAF_NODE	948:59	948:59	10	fields
LEAF_NODE	948:65	948:65	8	,
ARGUMENT	948:67	948:67	8	n
FIELD	948:67	948:67	9	n
LEAF_NODE	948:67	948:67	10	n
LEAF_NODE	948:68	948:68	8	)
LEAF_NODE	948:69	948:69	4	)
STATEMENTS	948:71	952:1	4	
LEAF_NODE	948:71	948:71	5	{
STATEMENTS	949:2	951:2	5	
EXPR_STATEMENT	949:2	950:39	6	TIFFErrorExt ( tif -> tif_clientdata , module , "Setting up field info failed" ) ;
EXPR	949:2	949:2	7	TIFFErrorExt ( tif -> tif_clientdata , module , "Setting up field info failed" )
FUNCTION_CALL	949:2	950:38	8	TIFFErrorExt ( tif -> tif_clientdata , module , "Setting up field info failed" )
CALLEE	949:2	949:2	9	TIFFErrorExt
LEAF_NODE	949:2	949:2	10	TIFFErrorExt
LEAF_NODE	949:14	949:14	9	(
ARGUMENT	949:15	949:15	9	tif -> tif_clientdata
FIELD	949:15	949:20	10	tif -> tif_clientdata
LEAF_NODE	949:15	949:15	11	tif
LEAF_NODE	949:18	949:18	11	->
LEAF_NODE	949:20	949:20	11	tif_clientdata
LEAF_NODE	949:34	949:34	9	,
ARGUMENT	949:36	949:36	9	module
FIELD	949:36	949:36	10	module
LEAF_NODE	949:36	949:36	11	module
LEAF_NODE	949:42	949:42	9	,
ARGUMENT	950:8	950:8	9	"Setting up field info failed"
FIELD	950:8	950:8	10	"Setting up field info failed"
LEAF_NODE	950:8	950:8	11	"Setting up field info failed"
LEAF_NODE	950:38	950:38	9	)
LEAF_NODE	950:39	950:39	7	;
JUMP_STATEMENT	951:2	951:11	6	return - 1 ;
KEYWORD	951:2	951:2	7	return
LEAF_NODE	951:2	951:2	8	return
DESTINATION	951:9	951:9	7	- 1
EXPR	951:9	951:9	8	- 1
UNARY_EXPR	951:9	951:10	9	- 1
UNARY_OPERATOR	951:9	951:9	10	-
LEAF_NODE	951:9	951:9	11	-
FIELD	951:10	951:10	10	1
LEAF_NODE	951:10	951:10	11	1
LEAF_NODE	951:11	951:11	7	;
LEAF_NODE	952:1	952:1	5	}
JUMP_STATEMENT	954:1	954:9	3	return 0 ;
KEYWORD	954:1	954:1	4	return
LEAF_NODE	954:1	954:1	5	return
DESTINATION	954:8	954:8	4	0
EXPR	954:8	954:8	5	0
FIELD	954:8	954:8	6	0
LEAF_NODE	954:8	954:8	7	0
LEAF_NODE	954:9	954:9	4	;
LEAF_NODE	955:0	955:0	2	}
FUNCTION_DEF	957:0	1071:0	1	
RETURN_TYPE	957:0	957:0	2	int
TYPE_NAME	957:0	957:0	3	int
LEAF_NODE	957:0	957:0	4	int
FUNCTION_NAME	958:0	958:0	2	_TIFFCheckFieldIsValidForCodec
LEAF_NODE	958:0	958:0	3	_TIFFCheckFieldIsValidForCodec
PARAMETER_LIST	958:30	958:52	2	( TIFF * tif , ttag_t tag )
LEAF_NODE	958:30	958:30	3	(
PARAMETER_DECL	958:31	958:37	3	TIFF * tif
TYPE	958:31	958:36	4	TIFF *
TYPE_NAME	958:31	958:31	5	TIFF
LEAF_NODE	958:31	958:31	6	TIFF
POINTER	958:36	958:36	5	*
LEAF_NODE	958:36	958:36	6	*
NAME	958:37	958:37	4	tif
LEAF_NODE	958:37	958:37	5	tif
LEAF_NODE	958:40	958:40	3	,
PARAMETER_DECL	958:42	958:49	3	ttag_t tag
TYPE	958:42	958:42	4	ttag_t
TYPE_NAME	958:42	958:42	5	ttag_t
LEAF_NODE	958:42	958:42	6	ttag_t
NAME	958:49	958:49	4	tag
LEAF_NODE	958:49	958:49	5	tag
LEAF_NODE	958:52	958:52	3	)
LEAF_NODE	959:0	959:0	2	{
STATEMENTS	961:1	1070:1	2	
SELECTION	961:1	961:14	3	
KEYWORD	961:1	961:1	4	switch
LEAF_NODE	961:1	961:1	5	switch
LEAF_NODE	961:8	961:8	4	(
CONDITION	961:9	961:9	4	tag
EXPR	961:9	961:9	5	tag
FIELD	961:9	961:9	6	tag
LEAF_NODE	961:9	961:9	7	tag
LEAF_NODE	961:12	961:12	4	)
STATEMENTS	961:14	985:1	4	
LEAF_NODE	961:14	961:14	5	{
STATEMENTS	963:5	984:2	5	
LABEL	963:5	963:27	6	case TIFFTAG_PREDICTOR :
LEAF_NODE	963:5	963:5	7	case
LEAF_NODE	963:10	963:10	7	TIFFTAG_PREDICTOR
LEAF_NODE	963:27	963:27	7	:
LABEL	965:5	965:28	6	case TIFFTAG_JPEGTABLES :
LEAF_NODE	965:5	965:5	7	case
LEAF_NODE	965:10	965:10	7	TIFFTAG_JPEGTABLES
LEAF_NODE	965:28	965:28	7	:
LABEL	967:5	967:30	6	case TIFFTAG_JPEGIFOFFSET :
LEAF_NODE	967:5	967:5	7	case
LEAF_NODE	967:10	967:10	7	TIFFTAG_JPEGIFOFFSET
LEAF_NODE	967:30	967:30	7	:
LABEL	968:5	968:33	6	case TIFFTAG_JPEGIFBYTECOUNT :
LEAF_NODE	968:5	968:5	7	case
LEAF_NODE	968:10	968:10	7	TIFFTAG_JPEGIFBYTECOUNT
LEAF_NODE	968:33	968:33	7	:
LABEL	969:5	969:29	6	case TIFFTAG_JPEGQTABLES :
LEAF_NODE	969:5	969:5	7	case
LEAF_NODE	969:10	969:10	7	TIFFTAG_JPEGQTABLES
LEAF_NODE	969:29	969:29	7	:
LABEL	970:5	970:30	6	case TIFFTAG_JPEGDCTABLES :
LEAF_NODE	970:5	970:5	7	case
LEAF_NODE	970:10	970:10	7	TIFFTAG_JPEGDCTABLES
LEAF_NODE	970:30	970:30	7	:
LABEL	971:5	971:30	6	case TIFFTAG_JPEGACTABLES :
LEAF_NODE	971:5	971:5	7	case
LEAF_NODE	971:10	971:10	7	TIFFTAG_JPEGACTABLES
LEAF_NODE	971:30	971:30	7	:
LABEL	972:5	972:26	6	case TIFFTAG_JPEGPROC :
LEAF_NODE	972:5	972:5	7	case
LEAF_NODE	972:10	972:10	7	TIFFTAG_JPEGPROC
LEAF_NODE	972:26	972:26	7	:
LABEL	973:5	973:37	6	case TIFFTAG_JPEGRESTARTINTERVAL :
LEAF_NODE	973:5	973:5	7	case
LEAF_NODE	973:10	973:10	7	TIFFTAG_JPEGRESTARTINTERVAL
LEAF_NODE	973:37	973:37	7	:
LABEL	975:5	975:29	6	case TIFFTAG_BADFAXLINES :
LEAF_NODE	975:5	975:5	7	case
LEAF_NODE	975:10	975:10	7	TIFFTAG_BADFAXLINES
LEAF_NODE	975:29	975:29	7	:
LABEL	976:5	976:30	6	case TIFFTAG_CLEANFAXDATA :
LEAF_NODE	976:5	976:5	7	case
LEAF_NODE	976:10	976:10	7	TIFFTAG_CLEANFAXDATA
LEAF_NODE	976:30	976:30	7	:
LABEL	977:5	977:40	6	case TIFFTAG_CONSECUTIVEBADFAXLINES :
LEAF_NODE	977:5	977:5	7	case
LEAF_NODE	977:10	977:10	7	TIFFTAG_CONSECUTIVEBADFAXLINES
LEAF_NODE	977:40	977:40	7	:
LABEL	978:5	978:31	6	case TIFFTAG_GROUP3OPTIONS :
LEAF_NODE	978:5	978:5	7	case
LEAF_NODE	978:10	978:10	7	TIFFTAG_GROUP3OPTIONS
LEAF_NODE	978:31	978:31	7	:
LABEL	979:5	979:31	6	case TIFFTAG_GROUP4OPTIONS :
LEAF_NODE	979:5	979:5	7	case
LEAF_NODE	979:10	979:10	7	TIFFTAG_GROUP4OPTIONS
LEAF_NODE	979:31	979:31	7	:
LABEL	981:5	981:33	6	case TIFFTAG_LERC_PARAMETERS :
LEAF_NODE	981:5	981:5	7	case
LEAF_NODE	981:10	981:10	7	TIFFTAG_LERC_PARAMETERS
LEAF_NODE	981:33	981:33	7	:
JUMP_STATEMENT	982:2	982:7	6	break DESTINATION ;
KEYWORD	982:2	982:2	7	break
LEAF_NODE	982:2	982:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	982:7	982:7	7	;
LABEL	983:5	983:12	6	default :
LEAF_NODE	983:5	983:5	7	default
LEAF_NODE	983:12	983:12	7	:
JUMP_STATEMENT	984:2	984:10	6	return 1 ;
KEYWORD	984:2	984:2	7	return
LEAF_NODE	984:2	984:2	8	return
DESTINATION	984:9	984:9	7	1
EXPR	984:9	984:9	8	1
FIELD	984:9	984:9	9	1
LEAF_NODE	984:9	984:9	10	1
LEAF_NODE	984:10	984:10	7	;
LEAF_NODE	985:1	985:1	5	}
SELECTION	988:1	988:38	3	
KEYWORD	988:1	988:1	4	switch
LEAF_NODE	988:1	988:1	5	switch
LEAF_NODE	988:8	988:8	4	(
CONDITION	988:9	988:9	4	tif -> tif_dir . td_compression
EXPR	988:9	988:9	5	tif -> tif_dir . td_compression
FIELD	988:9	988:22	6	tif -> tif_dir . td_compression
LEAF_NODE	988:9	988:9	7	tif
LEAF_NODE	988:12	988:12	7	->
LEAF_NODE	988:14	988:14	7	tif_dir
LEAF_NODE	988:21	988:21	7	.
LEAF_NODE	988:22	988:22	7	td_compression
LEAF_NODE	988:36	988:36	4	)
STATEMENTS	988:38	1069:1	4	
LEAF_NODE	988:38	988:38	5	{
STATEMENTS	989:5	1068:2	5	
LABEL	989:5	989:25	6	case COMPRESSION_LZW :
LEAF_NODE	989:5	989:5	7	case
LEAF_NODE	989:10	989:10	7	COMPRESSION_LZW
LEAF_NODE	989:25	989:25	7	:
SELECTION	990:2	991:6	6	
KEYWORD	990:2	990:2	7	if
LEAF_NODE	990:2	990:2	8	if
LEAF_NODE	990:5	990:5	7	(
CONDITION	990:6	990:6	7	tag == TIFFTAG_PREDICTOR
EXPR	990:6	990:13	8	tag == TIFFTAG_PREDICTOR
FIELD	990:6	990:6	9	tag
LEAF_NODE	990:6	990:6	10	tag
EQ_OPERATOR	990:10	990:10	9	==
LEAF_NODE	990:10	990:10	10	==
FIELD	990:13	990:13	9	TIFFTAG_PREDICTOR
LEAF_NODE	990:13	990:13	10	TIFFTAG_PREDICTOR
LEAF_NODE	990:30	990:30	7	)
STATEMENTS	991:6	991:6	7	
JUMP_STATEMENT	991:6	991:14	8	return 1 ;
KEYWORD	991:6	991:6	9	return
LEAF_NODE	991:6	991:6	10	return
DESTINATION	991:13	991:13	9	1
EXPR	991:13	991:13	10	1
FIELD	991:13	991:13	11	1
LEAF_NODE	991:13	991:13	12	1
LEAF_NODE	991:14	991:14	9	;
JUMP_STATEMENT	992:2	992:7	6	break DESTINATION ;
KEYWORD	992:2	992:2	7	break
LEAF_NODE	992:2	992:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	992:7	992:7	7	;
LABEL	993:5	993:30	6	case COMPRESSION_PACKBITS :
LEAF_NODE	993:5	993:5	7	case
LEAF_NODE	993:10	993:10	7	COMPRESSION_PACKBITS
LEAF_NODE	993:30	993:30	7	:
JUMP_STATEMENT	995:2	995:7	6	break DESTINATION ;
KEYWORD	995:2	995:2	7	break
LEAF_NODE	995:2	995:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	995:7	995:7	7	;
LABEL	996:5	996:33	6	case COMPRESSION_THUNDERSCAN :
LEAF_NODE	996:5	996:5	7	case
LEAF_NODE	996:10	996:10	7	COMPRESSION_THUNDERSCAN
LEAF_NODE	996:33	996:33	7	:
JUMP_STATEMENT	998:2	998:7	6	break DESTINATION ;
KEYWORD	998:2	998:2	7	break
LEAF_NODE	998:2	998:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	998:7	998:7	7	;
LABEL	999:5	999:26	6	case COMPRESSION_NEXT :
LEAF_NODE	999:5	999:5	7	case
LEAF_NODE	999:10	999:10	7	COMPRESSION_NEXT
LEAF_NODE	999:26	999:26	7	:
JUMP_STATEMENT	1001:2	1001:7	6	break DESTINATION ;
KEYWORD	1001:2	1001:2	7	break
LEAF_NODE	1001:2	1001:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	1001:7	1001:7	7	;
LABEL	1002:5	1002:26	6	case COMPRESSION_JPEG :
LEAF_NODE	1002:5	1002:5	7	case
LEAF_NODE	1002:10	1002:10	7	COMPRESSION_JPEG
LEAF_NODE	1002:26	1002:26	7	:
SELECTION	1003:2	1004:6	6	
KEYWORD	1003:2	1003:2	7	if
LEAF_NODE	1003:2	1003:2	8	if
LEAF_NODE	1003:5	1003:5	7	(
CONDITION	1003:6	1003:6	7	tag == TIFFTAG_JPEGTABLES
EXPR	1003:6	1003:13	8	tag == TIFFTAG_JPEGTABLES
FIELD	1003:6	1003:6	9	tag
LEAF_NODE	1003:6	1003:6	10	tag
EQ_OPERATOR	1003:10	1003:10	9	==
LEAF_NODE	1003:10	1003:10	10	==
FIELD	1003:13	1003:13	9	TIFFTAG_JPEGTABLES
LEAF_NODE	1003:13	1003:13	10	TIFFTAG_JPEGTABLES
LEAF_NODE	1003:31	1003:31	7	)
STATEMENTS	1004:6	1004:6	7	
JUMP_STATEMENT	1004:6	1004:14	8	return 1 ;
KEYWORD	1004:6	1004:6	9	return
LEAF_NODE	1004:6	1004:6	10	return
DESTINATION	1004:13	1004:13	9	1
EXPR	1004:13	1004:13	10	1
FIELD	1004:13	1004:13	11	1
LEAF_NODE	1004:13	1004:13	12	1
LEAF_NODE	1004:14	1004:14	9	;
JUMP_STATEMENT	1005:2	1005:7	6	break DESTINATION ;
KEYWORD	1005:2	1005:2	7	break
LEAF_NODE	1005:2	1005:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	1005:7	1005:7	7	;
LABEL	1006:5	1006:27	6	case COMPRESSION_OJPEG :
LEAF_NODE	1006:5	1006:5	7	case
LEAF_NODE	1006:10	1006:10	7	COMPRESSION_OJPEG
LEAF_NODE	1006:27	1006:27	7	:
SELECTION	1007:2	1007:15	6	
KEYWORD	1007:2	1007:2	7	switch
LEAF_NODE	1007:2	1007:2	8	switch
LEAF_NODE	1007:9	1007:9	7	(
CONDITION	1007:10	1007:10	7	tag
EXPR	1007:10	1007:10	8	tag
FIELD	1007:10	1007:10	9	tag
LEAF_NODE	1007:10	1007:10	10	tag
LEAF_NODE	1007:13	1007:13	7	)
STATEMENTS	1007:15	1016:2	7	
LEAF_NODE	1007:15	1007:15	8	{
STATEMENTS	1008:6	1015:3	8	
LABEL	1008:6	1008:31	9	case TIFFTAG_JPEGIFOFFSET :
LEAF_NODE	1008:6	1008:6	10	case
LEAF_NODE	1008:11	1008:11	10	TIFFTAG_JPEGIFOFFSET
LEAF_NODE	1008:31	1008:31	10	:
LABEL	1009:6	1009:34	9	case TIFFTAG_JPEGIFBYTECOUNT :
LEAF_NODE	1009:6	1009:6	10	case
LEAF_NODE	1009:11	1009:11	10	TIFFTAG_JPEGIFBYTECOUNT
LEAF_NODE	1009:34	1009:34	10	:
LABEL	1010:6	1010:30	9	case TIFFTAG_JPEGQTABLES :
LEAF_NODE	1010:6	1010:6	10	case
LEAF_NODE	1010:11	1010:11	10	TIFFTAG_JPEGQTABLES
LEAF_NODE	1010:30	1010:30	10	:
LABEL	1011:6	1011:31	9	case TIFFTAG_JPEGDCTABLES :
LEAF_NODE	1011:6	1011:6	10	case
LEAF_NODE	1011:11	1011:11	10	TIFFTAG_JPEGDCTABLES
LEAF_NODE	1011:31	1011:31	10	:
LABEL	1012:6	1012:31	9	case TIFFTAG_JPEGACTABLES :
LEAF_NODE	1012:6	1012:6	10	case
LEAF_NODE	1012:11	1012:11	10	TIFFTAG_JPEGACTABLES
LEAF_NODE	1012:31	1012:31	10	:
LABEL	1013:6	1013:27	9	case TIFFTAG_JPEGPROC :
LEAF_NODE	1013:6	1013:6	10	case
LEAF_NODE	1013:11	1013:11	10	TIFFTAG_JPEGPROC
LEAF_NODE	1013:27	1013:27	10	:
LABEL	1014:6	1014:38	9	case TIFFTAG_JPEGRESTARTINTERVAL :
LEAF_NODE	1014:6	1014:6	10	case
LEAF_NODE	1014:11	1014:11	10	TIFFTAG_JPEGRESTARTINTERVAL
LEAF_NODE	1014:38	1014:38	10	:
JUMP_STATEMENT	1015:3	1015:11	9	return 1 ;
KEYWORD	1015:3	1015:3	10	return
LEAF_NODE	1015:3	1015:3	11	return
DESTINATION	1015:10	1015:10	10	1
EXPR	1015:10	1015:10	11	1
FIELD	1015:10	1015:10	12	1
LEAF_NODE	1015:10	1015:10	13	1
LEAF_NODE	1015:11	1015:11	10	;
LEAF_NODE	1016:2	1016:2	8	}
JUMP_STATEMENT	1017:2	1017:7	6	break DESTINATION ;
KEYWORD	1017:2	1017:2	7	break
LEAF_NODE	1017:2	1017:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	1017:7	1017:7	7	;
LABEL	1018:5	1018:30	6	case COMPRESSION_CCITTRLE :
LEAF_NODE	1018:5	1018:5	7	case
LEAF_NODE	1018:10	1018:10	7	COMPRESSION_CCITTRLE
LEAF_NODE	1018:30	1018:30	7	:
LABEL	1019:5	1019:31	6	case COMPRESSION_CCITTRLEW :
LEAF_NODE	1019:5	1019:5	7	case
LEAF_NODE	1019:10	1019:10	7	COMPRESSION_CCITTRLEW
LEAF_NODE	1019:31	1019:31	7	:
LABEL	1020:5	1020:31	6	case COMPRESSION_CCITTFAX3 :
LEAF_NODE	1020:5	1020:5	7	case
LEAF_NODE	1020:10	1020:10	7	COMPRESSION_CCITTFAX3
LEAF_NODE	1020:31	1020:31	7	:
LABEL	1021:5	1021:31	6	case COMPRESSION_CCITTFAX4 :
LEAF_NODE	1021:5	1021:5	7	case
LEAF_NODE	1021:10	1021:10	7	COMPRESSION_CCITTFAX4
LEAF_NODE	1021:31	1021:31	7	:
SELECTION	1022:2	1022:15	6	
KEYWORD	1022:2	1022:2	7	switch
LEAF_NODE	1022:2	1022:2	8	switch
LEAF_NODE	1022:9	1022:9	7	(
CONDITION	1022:10	1022:10	7	tag
EXPR	1022:10	1022:10	8	tag
FIELD	1022:10	1022:10	9	tag
LEAF_NODE	1022:10	1022:10	10	tag
LEAF_NODE	1022:13	1022:13	7	)
STATEMENTS	1022:15	1035:2	7	
LEAF_NODE	1022:15	1022:15	8	{
STATEMENTS	1023:6	1034:3	8	
LABEL	1023:6	1023:30	9	case TIFFTAG_BADFAXLINES :
LEAF_NODE	1023:6	1023:6	10	case
LEAF_NODE	1023:11	1023:11	10	TIFFTAG_BADFAXLINES
LEAF_NODE	1023:30	1023:30	10	:
LABEL	1024:6	1024:31	9	case TIFFTAG_CLEANFAXDATA :
LEAF_NODE	1024:6	1024:6	10	case
LEAF_NODE	1024:11	1024:11	10	TIFFTAG_CLEANFAXDATA
LEAF_NODE	1024:31	1024:31	10	:
LABEL	1025:6	1025:41	9	case TIFFTAG_CONSECUTIVEBADFAXLINES :
LEAF_NODE	1025:6	1025:6	10	case
LEAF_NODE	1025:11	1025:11	10	TIFFTAG_CONSECUTIVEBADFAXLINES
LEAF_NODE	1025:41	1025:41	10	:
JUMP_STATEMENT	1026:3	1026:11	9	return 1 ;
KEYWORD	1026:3	1026:3	10	return
LEAF_NODE	1026:3	1026:3	11	return
DESTINATION	1026:10	1026:10	10	1
EXPR	1026:10	1026:10	11	1
FIELD	1026:10	1026:10	12	1
LEAF_NODE	1026:10	1026:10	13	1
LEAF_NODE	1026:11	1026:11	10	;
LABEL	1027:6	1027:32	9	case TIFFTAG_GROUP3OPTIONS :
LEAF_NODE	1027:6	1027:6	10	case
LEAF_NODE	1027:11	1027:11	10	TIFFTAG_GROUP3OPTIONS
LEAF_NODE	1027:32	1027:32	10	:
SELECTION	1028:3	1029:7	9	
KEYWORD	1028:3	1028:3	10	if
LEAF_NODE	1028:3	1028:3	11	if
LEAF_NODE	1028:6	1028:6	10	(
CONDITION	1028:7	1028:7	10	tif -> tif_dir . td_compression == COMPRESSION_CCITTFAX3
EXPR	1028:7	1028:38	11	tif -> tif_dir . td_compression == COMPRESSION_CCITTFAX3
FIELD	1028:7	1028:20	12	tif -> tif_dir . td_compression
LEAF_NODE	1028:7	1028:7	13	tif
LEAF_NODE	1028:10	1028:10	13	->
LEAF_NODE	1028:12	1028:12	13	tif_dir
LEAF_NODE	1028:19	1028:19	13	.
LEAF_NODE	1028:20	1028:20	13	td_compression
EQ_OPERATOR	1028:35	1028:35	12	==
LEAF_NODE	1028:35	1028:35	13	==
FIELD	1028:38	1028:38	12	COMPRESSION_CCITTFAX3
LEAF_NODE	1028:38	1028:38	13	COMPRESSION_CCITTFAX3
LEAF_NODE	1028:59	1028:59	10	)
STATEMENTS	1029:7	1029:7	10	
JUMP_STATEMENT	1029:7	1029:15	11	return 1 ;
KEYWORD	1029:7	1029:7	12	return
LEAF_NODE	1029:7	1029:7	13	return
DESTINATION	1029:14	1029:14	12	1
EXPR	1029:14	1029:14	13	1
FIELD	1029:14	1029:14	14	1
LEAF_NODE	1029:14	1029:14	15	1
LEAF_NODE	1029:15	1029:15	12	;
JUMP_STATEMENT	1030:3	1030:8	9	break DESTINATION ;
KEYWORD	1030:3	1030:3	10	break
LEAF_NODE	1030:3	1030:3	11	break
LEAF_NODE	0:0	0:0	10	DESTINATION
LEAF_NODE	1030:8	1030:8	10	;
LABEL	1031:6	1031:32	9	case TIFFTAG_GROUP4OPTIONS :
LEAF_NODE	1031:6	1031:6	10	case
LEAF_NODE	1031:11	1031:11	10	TIFFTAG_GROUP4OPTIONS
LEAF_NODE	1031:32	1031:32	10	:
SELECTION	1032:3	1033:7	9	
KEYWORD	1032:3	1032:3	10	if
LEAF_NODE	1032:3	1032:3	11	if
LEAF_NODE	1032:6	1032:6	10	(
CONDITION	1032:7	1032:7	10	tif -> tif_dir . td_compression == COMPRESSION_CCITTFAX4
EXPR	1032:7	1032:38	11	tif -> tif_dir . td_compression == COMPRESSION_CCITTFAX4
FIELD	1032:7	1032:20	12	tif -> tif_dir . td_compression
LEAF_NODE	1032:7	1032:7	13	tif
LEAF_NODE	1032:10	1032:10	13	->
LEAF_NODE	1032:12	1032:12	13	tif_dir
LEAF_NODE	1032:19	1032:19	13	.
LEAF_NODE	1032:20	1032:20	13	td_compression
EQ_OPERATOR	1032:35	1032:35	12	==
LEAF_NODE	1032:35	1032:35	13	==
FIELD	1032:38	1032:38	12	COMPRESSION_CCITTFAX4
LEAF_NODE	1032:38	1032:38	13	COMPRESSION_CCITTFAX4
LEAF_NODE	1032:59	1032:59	10	)
STATEMENTS	1033:7	1033:7	10	
JUMP_STATEMENT	1033:7	1033:15	11	return 1 ;
KEYWORD	1033:7	1033:7	12	return
LEAF_NODE	1033:7	1033:7	13	return
DESTINATION	1033:14	1033:14	12	1
EXPR	1033:14	1033:14	13	1
FIELD	1033:14	1033:14	14	1
LEAF_NODE	1033:14	1033:14	15	1
LEAF_NODE	1033:15	1033:15	12	;
JUMP_STATEMENT	1034:3	1034:8	9	break DESTINATION ;
KEYWORD	1034:3	1034:3	10	break
LEAF_NODE	1034:3	1034:3	11	break
LEAF_NODE	0:0	0:0	10	DESTINATION
LEAF_NODE	1034:8	1034:8	10	;
LEAF_NODE	1035:2	1035:2	8	}
JUMP_STATEMENT	1036:2	1036:7	6	break DESTINATION ;
KEYWORD	1036:2	1036:2	7	break
LEAF_NODE	1036:2	1036:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	1036:7	1036:7	7	;
LABEL	1037:5	1037:26	6	case COMPRESSION_JBIG :
LEAF_NODE	1037:5	1037:5	7	case
LEAF_NODE	1037:10	1037:10	7	COMPRESSION_JBIG
LEAF_NODE	1037:26	1037:26	7	:
JUMP_STATEMENT	1039:2	1039:7	6	break DESTINATION ;
KEYWORD	1039:2	1039:2	7	break
LEAF_NODE	1039:2	1039:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	1039:7	1039:7	7	;
LABEL	1040:5	1040:29	6	case COMPRESSION_DEFLATE :
LEAF_NODE	1040:5	1040:5	7	case
LEAF_NODE	1040:10	1040:10	7	COMPRESSION_DEFLATE
LEAF_NODE	1040:29	1040:29	7	:
LABEL	1041:5	1041:35	6	case COMPRESSION_ADOBE_DEFLATE :
LEAF_NODE	1041:5	1041:5	7	case
LEAF_NODE	1041:10	1041:10	7	COMPRESSION_ADOBE_DEFLATE
LEAF_NODE	1041:35	1041:35	7	:
SELECTION	1042:2	1043:6	6	
KEYWORD	1042:2	1042:2	7	if
LEAF_NODE	1042:2	1042:2	8	if
LEAF_NODE	1042:5	1042:5	7	(
CONDITION	1042:6	1042:6	7	tag == TIFFTAG_PREDICTOR
EXPR	1042:6	1042:13	8	tag == TIFFTAG_PREDICTOR
FIELD	1042:6	1042:6	9	tag
LEAF_NODE	1042:6	1042:6	10	tag
EQ_OPERATOR	1042:10	1042:10	9	==
LEAF_NODE	1042:10	1042:10	10	==
FIELD	1042:13	1042:13	9	TIFFTAG_PREDICTOR
LEAF_NODE	1042:13	1042:13	10	TIFFTAG_PREDICTOR
LEAF_NODE	1042:30	1042:30	7	)
STATEMENTS	1043:6	1043:6	7	
JUMP_STATEMENT	1043:6	1043:14	8	return 1 ;
KEYWORD	1043:6	1043:6	9	return
LEAF_NODE	1043:6	1043:6	10	return
DESTINATION	1043:13	1043:13	9	1
EXPR	1043:13	1043:13	10	1
FIELD	1043:13	1043:13	11	1
LEAF_NODE	1043:13	1043:13	12	1
LEAF_NODE	1043:14	1043:14	9	;
JUMP_STATEMENT	1044:2	1044:7	6	break DESTINATION ;
KEYWORD	1044:2	1044:2	7	break
LEAF_NODE	1044:2	1044:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	1044:7	1044:7	7	;
LABEL	1045:4	1045:29	6	case COMPRESSION_PIXARLOG :
LEAF_NODE	1045:4	1045:4	7	case
LEAF_NODE	1045:9	1045:9	7	COMPRESSION_PIXARLOG
LEAF_NODE	1045:29	1045:29	7	:
SELECTION	1046:2	1047:6	6	
KEYWORD	1046:2	1046:2	7	if
LEAF_NODE	1046:2	1046:2	8	if
LEAF_NODE	1046:5	1046:5	7	(
CONDITION	1046:6	1046:6	7	tag == TIFFTAG_PREDICTOR
EXPR	1046:6	1046:13	8	tag == TIFFTAG_PREDICTOR
FIELD	1046:6	1046:6	9	tag
LEAF_NODE	1046:6	1046:6	10	tag
EQ_OPERATOR	1046:10	1046:10	9	==
LEAF_NODE	1046:10	1046:10	10	==
FIELD	1046:13	1046:13	9	TIFFTAG_PREDICTOR
LEAF_NODE	1046:13	1046:13	10	TIFFTAG_PREDICTOR
LEAF_NODE	1046:30	1046:30	7	)
STATEMENTS	1047:6	1047:6	7	
JUMP_STATEMENT	1047:6	1047:14	8	return 1 ;
KEYWORD	1047:6	1047:6	9	return
LEAF_NODE	1047:6	1047:6	10	return
DESTINATION	1047:13	1047:13	9	1
EXPR	1047:13	1047:13	10	1
FIELD	1047:13	1047:13	11	1
LEAF_NODE	1047:13	1047:13	12	1
LEAF_NODE	1047:14	1047:14	9	;
JUMP_STATEMENT	1048:2	1048:7	6	break DESTINATION ;
KEYWORD	1048:2	1048:2	7	break
LEAF_NODE	1048:2	1048:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	1048:7	1048:7	7	;
LABEL	1049:5	1049:28	6	case COMPRESSION_SGILOG :
LEAF_NODE	1049:5	1049:5	7	case
LEAF_NODE	1049:10	1049:10	7	COMPRESSION_SGILOG
LEAF_NODE	1049:28	1049:28	7	:
LABEL	1050:5	1050:30	6	case COMPRESSION_SGILOG24 :
LEAF_NODE	1050:5	1050:5	7	case
LEAF_NODE	1050:10	1050:10	7	COMPRESSION_SGILOG24
LEAF_NODE	1050:30	1050:30	7	:
JUMP_STATEMENT	1052:2	1052:7	6	break DESTINATION ;
KEYWORD	1052:2	1052:2	7	break
LEAF_NODE	1052:2	1052:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	1052:7	1052:7	7	;
LABEL	1053:5	1053:26	6	case COMPRESSION_LZMA :
LEAF_NODE	1053:5	1053:5	7	case
LEAF_NODE	1053:10	1053:10	7	COMPRESSION_LZMA
LEAF_NODE	1053:26	1053:26	7	:
SELECTION	1054:2	1055:6	6	
KEYWORD	1054:2	1054:2	7	if
LEAF_NODE	1054:2	1054:2	8	if
LEAF_NODE	1054:5	1054:5	7	(
CONDITION	1054:6	1054:6	7	tag == TIFFTAG_PREDICTOR
EXPR	1054:6	1054:13	8	tag == TIFFTAG_PREDICTOR
FIELD	1054:6	1054:6	9	tag
LEAF_NODE	1054:6	1054:6	10	tag
EQ_OPERATOR	1054:10	1054:10	9	==
LEAF_NODE	1054:10	1054:10	10	==
FIELD	1054:13	1054:13	9	TIFFTAG_PREDICTOR
LEAF_NODE	1054:13	1054:13	10	TIFFTAG_PREDICTOR
LEAF_NODE	1054:30	1054:30	7	)
STATEMENTS	1055:6	1055:6	7	
JUMP_STATEMENT	1055:6	1055:14	8	return 1 ;
KEYWORD	1055:6	1055:6	9	return
LEAF_NODE	1055:6	1055:6	10	return
DESTINATION	1055:13	1055:13	9	1
EXPR	1055:13	1055:13	10	1
FIELD	1055:13	1055:13	11	1
LEAF_NODE	1055:13	1055:13	12	1
LEAF_NODE	1055:14	1055:14	9	;
JUMP_STATEMENT	1056:2	1056:7	6	break DESTINATION ;
KEYWORD	1056:2	1056:2	7	break
LEAF_NODE	1056:2	1056:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	1056:7	1056:7	7	;
LABEL	1057:5	1057:26	6	case COMPRESSION_ZSTD :
LEAF_NODE	1057:5	1057:5	7	case
LEAF_NODE	1057:10	1057:10	7	COMPRESSION_ZSTD
LEAF_NODE	1057:26	1057:26	7	:
SELECTION	1058:2	1059:6	6	
KEYWORD	1058:2	1058:2	7	if
LEAF_NODE	1058:2	1058:2	8	if
LEAF_NODE	1058:5	1058:5	7	(
CONDITION	1058:6	1058:6	7	tag == TIFFTAG_PREDICTOR
EXPR	1058:6	1058:13	8	tag == TIFFTAG_PREDICTOR
FIELD	1058:6	1058:6	9	tag
LEAF_NODE	1058:6	1058:6	10	tag
EQ_OPERATOR	1058:10	1058:10	9	==
LEAF_NODE	1058:10	1058:10	10	==
FIELD	1058:13	1058:13	9	TIFFTAG_PREDICTOR
LEAF_NODE	1058:13	1058:13	10	TIFFTAG_PREDICTOR
LEAF_NODE	1058:30	1058:30	7	)
STATEMENTS	1059:6	1059:6	7	
JUMP_STATEMENT	1059:6	1059:14	8	return 1 ;
KEYWORD	1059:6	1059:6	9	return
LEAF_NODE	1059:6	1059:6	10	return
DESTINATION	1059:13	1059:13	9	1
EXPR	1059:13	1059:13	10	1
FIELD	1059:13	1059:13	11	1
LEAF_NODE	1059:13	1059:13	12	1
LEAF_NODE	1059:14	1059:14	9	;
JUMP_STATEMENT	1060:2	1060:7	6	break DESTINATION ;
KEYWORD	1060:2	1060:2	7	break
LEAF_NODE	1060:2	1060:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	1060:7	1060:7	7	;
LABEL	1061:5	1061:26	6	case COMPRESSION_LERC :
LEAF_NODE	1061:5	1061:5	7	case
LEAF_NODE	1061:10	1061:10	7	COMPRESSION_LERC
LEAF_NODE	1061:26	1061:26	7	:
SELECTION	1062:2	1063:6	6	
KEYWORD	1062:2	1062:2	7	if
LEAF_NODE	1062:2	1062:2	8	if
LEAF_NODE	1062:5	1062:5	7	(
CONDITION	1062:6	1062:6	7	tag == TIFFTAG_LERC_PARAMETERS
EXPR	1062:6	1062:13	8	tag == TIFFTAG_LERC_PARAMETERS
FIELD	1062:6	1062:6	9	tag
LEAF_NODE	1062:6	1062:6	10	tag
EQ_OPERATOR	1062:10	1062:10	9	==
LEAF_NODE	1062:10	1062:10	10	==
FIELD	1062:13	1062:13	9	TIFFTAG_LERC_PARAMETERS
LEAF_NODE	1062:13	1062:13	10	TIFFTAG_LERC_PARAMETERS
LEAF_NODE	1062:36	1062:36	7	)
STATEMENTS	1063:6	1063:6	7	
JUMP_STATEMENT	1063:6	1063:14	8	return 1 ;
KEYWORD	1063:6	1063:6	9	return
LEAF_NODE	1063:6	1063:6	10	return
DESTINATION	1063:13	1063:13	9	1
EXPR	1063:13	1063:13	10	1
FIELD	1063:13	1063:13	11	1
LEAF_NODE	1063:13	1063:13	12	1
LEAF_NODE	1063:14	1063:14	9	;
JUMP_STATEMENT	1064:2	1064:7	6	break DESTINATION ;
KEYWORD	1064:2	1064:2	7	break
LEAF_NODE	1064:2	1064:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	1064:7	1064:7	7	;
LABEL	1065:4	1065:25	6	case COMPRESSION_WEBP :
LEAF_NODE	1065:4	1065:4	7	case
LEAF_NODE	1065:9	1065:9	7	COMPRESSION_WEBP
LEAF_NODE	1065:25	1065:25	7	:
SELECTION	1066:2	1067:4	6	
KEYWORD	1066:2	1066:2	7	if
LEAF_NODE	1066:2	1066:2	8	if
LEAF_NODE	1066:5	1066:5	7	(
CONDITION	1066:6	1066:6	7	tag == TIFFTAG_PREDICTOR
EXPR	1066:6	1066:13	8	tag == TIFFTAG_PREDICTOR
FIELD	1066:6	1066:6	9	tag
LEAF_NODE	1066:6	1066:6	10	tag
EQ_OPERATOR	1066:10	1066:10	9	==
LEAF_NODE	1066:10	1066:10	10	==
FIELD	1066:13	1066:13	9	TIFFTAG_PREDICTOR
LEAF_NODE	1066:13	1066:13	10	TIFFTAG_PREDICTOR
LEAF_NODE	1066:30	1066:30	7	)
STATEMENTS	1067:4	1067:4	7	
JUMP_STATEMENT	1067:4	1067:12	8	return 1 ;
KEYWORD	1067:4	1067:4	9	return
LEAF_NODE	1067:4	1067:4	10	return
DESTINATION	1067:11	1067:11	9	1
EXPR	1067:11	1067:11	10	1
FIELD	1067:11	1067:11	11	1
LEAF_NODE	1067:11	1067:11	12	1
LEAF_NODE	1067:12	1067:12	9	;
JUMP_STATEMENT	1068:2	1068:7	6	break DESTINATION ;
KEYWORD	1068:2	1068:2	7	break
LEAF_NODE	1068:2	1068:2	8	break
LEAF_NODE	0:0	0:0	7	DESTINATION
LEAF_NODE	1068:7	1068:7	7	;
LEAF_NODE	1069:1	1069:1	5	}
JUMP_STATEMENT	1070:1	1070:9	3	return 0 ;
KEYWORD	1070:1	1070:1	4	return
LEAF_NODE	1070:1	1070:1	5	return
DESTINATION	1070:8	1070:8	4	0
EXPR	1070:8	1070:8	5	0
FIELD	1070:8	1070:8	6	0
LEAF_NODE	1070:8	1070:8	7	0
LEAF_NODE	1070:9	1070:9	4	;
LEAF_NODE	1071:0	1071:0	2	}
