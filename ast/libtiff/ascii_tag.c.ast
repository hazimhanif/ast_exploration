SOURCE_FILE	41:7	68:0	0	
SIMPLE_DECL	41:7	41:48	1	const char [ ] filename ; filename = "ascii_test.tiff" ;
VAR_DECL	41:7	41:18	2	const char [ ] filename ; filename = "ascii_test.tiff"
TYPE	41:7	41:26	3	const char [ ]
TYPE_NAME	41:7	41:13	4	const char
LEAF_NODE	41:7	41:7	5	const
LEAF_NODE	41:13	41:13	5	char
TYPE_SUFFIX	41:26	41:27	4	[ ]
LEAF_NODE	41:26	41:26	5	[
LEAF_NODE	41:27	41:27	5	]
NAME	41:18	41:18	3	filename
LEAF_NODE	41:18	41:18	4	filename
LEAF_NODE	0:0	0:0	3	;
INIT	41:18	41:18	3	filename = "ascii_test.tiff"
ASSIGN	41:18	41:31	4	filename = "ascii_test.tiff"
LVAL	41:18	41:18	5	filename
NAME	41:18	41:18	6	filename
LEAF_NODE	41:18	41:18	7	filename
ASSIGN_OP	41:29	41:29	5	=
LEAF_NODE	41:29	41:29	6	=
RVAL	41:31	41:31	5	"ascii_test.tiff"
FIELD	41:31	41:31	6	"ascii_test.tiff"
LEAF_NODE	41:31	41:31	7	"ascii_test.tiff"
LEAF_NODE	41:48	41:48	2	;
SIMPLE_DECL	44:1	44:12	1	ttag_t tag ;
VAR_DECL	44:1	44:9	2	ttag_t tag
TYPE	44:1	44:1	3	ttag_t
TYPE_NAME	44:1	44:1	4	ttag_t
LEAF_NODE	44:1	44:1	5	ttag_t
NAME	44:9	44:9	3	tag
LEAF_NODE	44:9	44:9	4	tag
LEAF_NODE	44:12	44:12	2	;
SIMPLE_DECL	45:1	45:18	1	const char * value ;
VAR_DECL	45:1	45:13	2	const char * value
TYPE	45:1	45:12	3	const char *
TYPE_NAME	45:1	45:7	4	const char
LEAF_NODE	45:1	45:1	5	const
LEAF_NODE	45:7	45:7	5	char
POINTER	45:12	45:12	4	*
LEAF_NODE	45:12	45:12	5	*
NAME	45:13	45:13	3	value
LEAF_NODE	45:13	45:13	4	value
LEAF_NODE	45:18	45:18	2	;
SIMPLE_DECL	65:7	65:50	1	const char [ ] ink_names ; ink_names = "Red\0Green\0Blue" ;
VAR_DECL	65:7	65:18	2	const char [ ] ink_names ; ink_names = "Red\0Green\0Blue"
TYPE	65:7	65:27	3	const char [ ]
TYPE_NAME	65:7	65:13	4	const char
LEAF_NODE	65:7	65:7	5	const
LEAF_NODE	65:13	65:13	5	char
TYPE_SUFFIX	65:27	65:28	4	[ ]
LEAF_NODE	65:27	65:27	5	[
LEAF_NODE	65:28	65:28	5	]
NAME	65:18	65:18	3	ink_names
LEAF_NODE	65:18	65:18	4	ink_names
LEAF_NODE	0:0	0:0	3	;
INIT	65:18	65:18	3	ink_names = "Red\0Green\0Blue"
ASSIGN	65:18	65:32	4	ink_names = "Red\0Green\0Blue"
LVAL	65:18	65:18	5	ink_names
NAME	65:18	65:18	6	ink_names
LEAF_NODE	65:18	65:18	7	ink_names
ASSIGN_OP	65:30	65:30	5	=
LEAF_NODE	65:30	65:30	6	=
RVAL	65:32	65:32	5	"Red\0Green\0Blue"
FIELD	65:32	65:32	6	"Red\0Green\0Blue"
LEAF_NODE	65:32	65:32	7	"Red\0Green\0Blue"
LEAF_NODE	65:50	65:50	2	;
SIMPLE_DECL	66:0	66:29	1	const int ink_names_size ; ink_names_size = 15 ;
VAR_DECL	66:0	66:10	2	const int ink_names_size ; ink_names_size = 15
TYPE	66:0	66:0	3	const int
TYPE_NAME	66:0	66:6	4	const int
LEAF_NODE	66:0	66:0	5	const
LEAF_NODE	66:6	66:6	5	int
NAME	66:10	66:10	3	ink_names_size
LEAF_NODE	66:10	66:10	4	ink_names_size
LEAF_NODE	0:0	0:0	3	;
INIT	66:10	66:10	3	ink_names_size = 15
ASSIGN	66:10	66:27	4	ink_names_size = 15
LVAL	66:10	66:10	5	ink_names_size
NAME	66:10	66:10	6	ink_names_size
LEAF_NODE	66:10	66:10	7	ink_names_size
ASSIGN_OP	66:25	66:25	5	=
LEAF_NODE	66:25	66:25	6	=
RVAL	66:27	66:27	5	15
FIELD	66:27	66:27	6	15
LEAF_NODE	66:27	66:27	7	15
LEAF_NODE	66:29	66:29	2	;
FUNCTION_DEF	68:0	173:0	1	
RETURN_TYPE	68:0	68:0	2	int
TYPE_NAME	68:0	68:0	3	int
LEAF_NODE	68:0	68:0	4	int
FUNCTION_NAME	69:0	69:0	2	main
LEAF_NODE	69:0	69:0	3	main
PARAMETER_LIST	69:4	69:5	2	( )
LEAF_NODE	69:4	69:4	3	(
LEAF_NODE	69:5	69:5	3	)
LEAF_NODE	70:0	70:0	2	{
STATEMENTS	71:1	172:1	2	
SIMPLE_DECL	71:1	71:11	3	TIFF * tif ;
VAR_DECL	71:1	71:8	4	TIFF * tif
TYPE	71:1	71:7	5	TIFF *
TYPE_NAME	71:1	71:1	6	TIFF
LEAF_NODE	71:1	71:1	7	TIFF
POINTER	71:7	71:7	6	*
LEAF_NODE	71:7	71:7	7	*
NAME	71:8	71:8	5	tif
LEAF_NODE	71:8	71:8	6	tif
LEAF_NODE	71:11	71:11	4	;
SIMPLE_DECL	72:1	72:10	3	size_t i ;
VAR_DECL	72:1	72:9	4	size_t i
TYPE	72:1	72:1	5	size_t
TYPE_NAME	72:1	72:1	6	size_t
LEAF_NODE	72:1	72:1	7	size_t
NAME	72:9	72:9	5	i
LEAF_NODE	72:9	72:9	6	i
LEAF_NODE	72:10	72:10	4	;
LEAF_NODE	73:1	73:1	3	unsigned
LEAF_NODE	73:10	73:10	3	char
LEAF_NODE	73:15	73:15	3	buf
LEAF_NODE	73:18	73:18	3	[
LEAF_NODE	73:19	73:19	3	]
LEAF_NODE	73:21	73:21	3	=
LEAF_NODE	73:23	73:23	3	{
STATEMENTS	73:25	73:33	3	
LEAF_NODE	73:25	73:25	4	0
LEAF_NODE	73:26	73:26	4	,
LEAF_NODE	73:28	73:28	4	127
LEAF_NODE	73:31	73:31	4	,
LEAF_NODE	73:33	73:33	4	255
LEAF_NODE	73:37	73:37	3	}
LEAF_NODE	73:38	73:38	3	;
SIMPLE_DECL	74:1	74:13	3	char * value ;
VAR_DECL	74:1	74:8	4	char * value
TYPE	74:1	74:7	5	char *
TYPE_NAME	74:1	74:1	6	char
LEAF_NODE	74:1	74:1	7	char
POINTER	74:7	74:7	6	*
LEAF_NODE	74:7	74:7	7	*
NAME	74:8	74:8	5	value
LEAF_NODE	74:8	74:8	6	value
LEAF_NODE	74:13	74:13	4	;
EXPR_STATEMENT	77:1	77:30	3	tif = TIFFOpen ( filename , "w" ) ;
EXPR	77:1	77:1	4	tif = TIFFOpen ( filename , "w" )
ASSIGN	77:1	77:7	5	tif = TIFFOpen ( filename , "w" )
LVAL	77:1	77:1	6	tif
FIELD	77:1	77:1	7	tif
LEAF_NODE	77:1	77:1	8	tif
ASSIGN_OP	77:5	77:5	6	=
LEAF_NODE	77:5	77:5	7	=
RVAL	77:7	77:7	6	TIFFOpen ( filename , "w" )
FUNCTION_CALL	77:7	77:29	7	TIFFOpen ( filename , "w" )
CALLEE	77:7	77:7	8	TIFFOpen
LEAF_NODE	77:7	77:7	9	TIFFOpen
LEAF_NODE	77:15	77:15	8	(
ARGUMENT	77:16	77:16	8	filename
FIELD	77:16	77:16	9	filename
LEAF_NODE	77:16	77:16	10	filename
LEAF_NODE	77:24	77:24	8	,
ARGUMENT	77:26	77:26	8	"w"
FIELD	77:26	77:26	9	"w"
LEAF_NODE	77:26	77:26	10	"w"
LEAF_NODE	77:29	77:29	8	)
LEAF_NODE	77:30	77:30	4	;
SELECTION	78:1	78:11	3	
KEYWORD	78:1	78:1	4	if
LEAF_NODE	78:1	78:1	5	if
LEAF_NODE	78:4	78:4	4	(
CONDITION	78:5	78:5	4	! tif
EXPR	78:5	78:5	5	! tif
UNARY_EXPR	78:5	78:6	6	! tif
UNARY_OPERATOR	78:5	78:5	7	!
LEAF_NODE	78:5	78:5	8	!
FIELD	78:6	78:6	7	tif
LEAF_NODE	78:6	78:6	8	tif
LEAF_NODE	78:9	78:9	4	)
STATEMENTS	78:11	81:1	4	
LEAF_NODE	78:11	78:11	5	{
STATEMENTS	79:2	80:2	5	
EXPR_STATEMENT	79:2	79:65	6	fprintf ( stderr , "Can't create test TIFF file %s.\n" , filename ) ;
EXPR	79:2	79:2	7	fprintf ( stderr , "Can't create test TIFF file %s.\n" , filename )
FUNCTION_CALL	79:2	79:64	8	fprintf ( stderr , "Can't create test TIFF file %s.\n" , filename )
CALLEE	79:2	79:2	9	fprintf
LEAF_NODE	79:2	79:2	10	fprintf
LEAF_NODE	79:10	79:10	9	(
ARGUMENT	79:11	79:11	9	stderr
FIELD	79:11	79:11	10	stderr
LEAF_NODE	79:11	79:11	11	stderr
LEAF_NODE	79:17	79:17	9	,
ARGUMENT	79:19	79:19	9	"Can't create test TIFF file %s.\n"
FIELD	79:19	79:19	10	"Can't create test TIFF file %s.\n"
LEAF_NODE	79:19	79:19	11	"Can't create test TIFF file %s.\n"
LEAF_NODE	79:54	79:54	9	,
ARGUMENT	79:56	79:56	9	filename
FIELD	79:56	79:56	10	filename
LEAF_NODE	79:56	79:56	11	filename
LEAF_NODE	79:64	79:64	9	)
LEAF_NODE	79:65	79:65	7	;
JUMP_STATEMENT	80:2	80:10	6	return 1 ;
KEYWORD	80:2	80:2	7	return
LEAF_NODE	80:2	80:2	8	return
DESTINATION	80:9	80:9	7	1
EXPR	80:9	80:9	8	1
FIELD	80:9	80:9	9	1
LEAF_NODE	80:9	80:9	10	1
LEAF_NODE	80:10	80:10	7	;
LEAF_NODE	81:1	81:1	5	}
SELECTION	83:1	83:48	3	
KEYWORD	83:1	83:1	4	if
LEAF_NODE	83:1	83:1	5	if
LEAF_NODE	83:4	83:4	4	(
CONDITION	83:5	83:5	4	! TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , 1 )
EXPR	83:5	83:5	5	! TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , 1 )
UNARY_EXPR	83:5	83:6	6	! TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , 1 )
UNARY_OPERATOR	83:5	83:5	7	!
LEAF_NODE	83:5	83:5	8	!
FUNCTION_CALL	83:6	83:45	7	TIFFSetField ( tif , TIFFTAG_IMAGEWIDTH , 1 )
CALLEE	83:6	83:6	8	TIFFSetField
LEAF_NODE	83:6	83:6	9	TIFFSetField
LEAF_NODE	83:18	83:18	8	(
ARGUMENT	83:19	83:19	8	tif
FIELD	83:19	83:19	9	tif
LEAF_NODE	83:19	83:19	10	tif
LEAF_NODE	83:22	83:22	8	,
ARGUMENT	83:24	83:24	8	TIFFTAG_IMAGEWIDTH
FIELD	83:24	83:24	9	TIFFTAG_IMAGEWIDTH
LEAF_NODE	83:24	83:24	10	TIFFTAG_IMAGEWIDTH
LEAF_NODE	83:42	83:42	8	,
ARGUMENT	83:44	83:44	8	1
FIELD	83:44	83:44	9	1
LEAF_NODE	83:44	83:44	10	1
LEAF_NODE	83:45	83:45	8	)
LEAF_NODE	83:46	83:46	4	)
STATEMENTS	83:48	86:1	4	
LEAF_NODE	83:48	83:48	5	{
STATEMENTS	84:2	85:2	5	
EXPR_STATEMENT	84:2	84:49	6	fprintf ( stderr , "Can't set ImageWidth tag.\n" ) ;
EXPR	84:2	84:2	7	fprintf ( stderr , "Can't set ImageWidth tag.\n" )
FUNCTION_CALL	84:2	84:48	8	fprintf ( stderr , "Can't set ImageWidth tag.\n" )
CALLEE	84:2	84:2	9	fprintf
LEAF_NODE	84:2	84:2	10	fprintf
LEAF_NODE	84:10	84:10	9	(
ARGUMENT	84:11	84:11	9	stderr
FIELD	84:11	84:11	10	stderr
LEAF_NODE	84:11	84:11	11	stderr
LEAF_NODE	84:17	84:17	9	,
ARGUMENT	84:19	84:19	9	"Can't set ImageWidth tag.\n"
FIELD	84:19	84:19	10	"Can't set ImageWidth tag.\n"
LEAF_NODE	84:19	84:19	11	"Can't set ImageWidth tag.\n"
LEAF_NODE	84:48	84:48	9	)
LEAF_NODE	84:49	84:49	7	;
JUMP_STATEMENT	85:2	85:14	6	goto failure ;
KEYWORD	85:2	85:2	7	goto
LEAF_NODE	85:2	85:2	8	goto
DESTINATION	85:7	85:7	7	failure
LEAF_NODE	85:7	85:7	8	failure
LEAF_NODE	85:14	85:14	7	;
LEAF_NODE	86:1	86:1	5	}
SELECTION	87:1	87:49	3	
KEYWORD	87:1	87:1	4	if
LEAF_NODE	87:1	87:1	5	if
LEAF_NODE	87:4	87:4	4	(
CONDITION	87:5	87:5	4	! TIFFSetField ( tif , TIFFTAG_IMAGELENGTH , 1 )
EXPR	87:5	87:5	5	! TIFFSetField ( tif , TIFFTAG_IMAGELENGTH , 1 )
UNARY_EXPR	87:5	87:6	6	! TIFFSetField ( tif , TIFFTAG_IMAGELENGTH , 1 )
UNARY_OPERATOR	87:5	87:5	7	!
LEAF_NODE	87:5	87:5	8	!
FUNCTION_CALL	87:6	87:46	7	TIFFSetField ( tif , TIFFTAG_IMAGELENGTH , 1 )
CALLEE	87:6	87:6	8	TIFFSetField
LEAF_NODE	87:6	87:6	9	TIFFSetField
LEAF_NODE	87:18	87:18	8	(
ARGUMENT	87:19	87:19	8	tif
FIELD	87:19	87:19	9	tif
LEAF_NODE	87:19	87:19	10	tif
LEAF_NODE	87:22	87:22	8	,
ARGUMENT	87:24	87:24	8	TIFFTAG_IMAGELENGTH
FIELD	87:24	87:24	9	TIFFTAG_IMAGELENGTH
LEAF_NODE	87:24	87:24	10	TIFFTAG_IMAGELENGTH
LEAF_NODE	87:43	87:43	8	,
ARGUMENT	87:45	87:45	8	1
FIELD	87:45	87:45	9	1
LEAF_NODE	87:45	87:45	10	1
LEAF_NODE	87:46	87:46	8	)
LEAF_NODE	87:47	87:47	4	)
STATEMENTS	87:49	90:1	4	
LEAF_NODE	87:49	87:49	5	{
STATEMENTS	88:2	89:2	5	
EXPR_STATEMENT	88:2	88:50	6	fprintf ( stderr , "Can't set ImageLength tag.\n" ) ;
EXPR	88:2	88:2	7	fprintf ( stderr , "Can't set ImageLength tag.\n" )
FUNCTION_CALL	88:2	88:49	8	fprintf ( stderr , "Can't set ImageLength tag.\n" )
CALLEE	88:2	88:2	9	fprintf
LEAF_NODE	88:2	88:2	10	fprintf
LEAF_NODE	88:10	88:10	9	(
ARGUMENT	88:11	88:11	9	stderr
FIELD	88:11	88:11	10	stderr
LEAF_NODE	88:11	88:11	11	stderr
LEAF_NODE	88:17	88:17	9	,
ARGUMENT	88:19	88:19	9	"Can't set ImageLength tag.\n"
FIELD	88:19	88:19	10	"Can't set ImageLength tag.\n"
LEAF_NODE	88:19	88:19	11	"Can't set ImageLength tag.\n"
LEAF_NODE	88:49	88:49	9	)
LEAF_NODE	88:50	88:50	7	;
JUMP_STATEMENT	89:2	89:14	6	goto failure ;
KEYWORD	89:2	89:2	7	goto
LEAF_NODE	89:2	89:2	8	goto
DESTINATION	89:7	89:7	7	failure
LEAF_NODE	89:7	89:7	8	failure
LEAF_NODE	89:14	89:14	7	;
LEAF_NODE	90:1	90:1	5	}
SELECTION	91:1	91:51	3	
KEYWORD	91:1	91:1	4	if
LEAF_NODE	91:1	91:1	5	if
LEAF_NODE	91:4	91:4	4	(
CONDITION	91:5	91:5	4	! TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 8 )
EXPR	91:5	91:5	5	! TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 8 )
UNARY_EXPR	91:5	91:6	6	! TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 8 )
UNARY_OPERATOR	91:5	91:5	7	!
LEAF_NODE	91:5	91:5	8	!
FUNCTION_CALL	91:6	91:48	7	TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 8 )
CALLEE	91:6	91:6	8	TIFFSetField
LEAF_NODE	91:6	91:6	9	TIFFSetField
LEAF_NODE	91:18	91:18	8	(
ARGUMENT	91:19	91:19	8	tif
FIELD	91:19	91:19	9	tif
LEAF_NODE	91:19	91:19	10	tif
LEAF_NODE	91:22	91:22	8	,
ARGUMENT	91:24	91:24	8	TIFFTAG_BITSPERSAMPLE
FIELD	91:24	91:24	9	TIFFTAG_BITSPERSAMPLE
LEAF_NODE	91:24	91:24	10	TIFFTAG_BITSPERSAMPLE
LEAF_NODE	91:45	91:45	8	,
ARGUMENT	91:47	91:47	8	8
FIELD	91:47	91:47	9	8
LEAF_NODE	91:47	91:47	10	8
LEAF_NODE	91:48	91:48	8	)
LEAF_NODE	91:49	91:49	4	)
STATEMENTS	91:51	94:1	4	
LEAF_NODE	91:51	91:51	5	{
STATEMENTS	92:2	93:2	5	
EXPR_STATEMENT	92:2	92:52	6	fprintf ( stderr , "Can't set BitsPerSample tag.\n" ) ;
EXPR	92:2	92:2	7	fprintf ( stderr , "Can't set BitsPerSample tag.\n" )
FUNCTION_CALL	92:2	92:51	8	fprintf ( stderr , "Can't set BitsPerSample tag.\n" )
CALLEE	92:2	92:2	9	fprintf
LEAF_NODE	92:2	92:2	10	fprintf
LEAF_NODE	92:10	92:10	9	(
ARGUMENT	92:11	92:11	9	stderr
FIELD	92:11	92:11	10	stderr
LEAF_NODE	92:11	92:11	11	stderr
LEAF_NODE	92:17	92:17	9	,
ARGUMENT	92:19	92:19	9	"Can't set BitsPerSample tag.\n"
FIELD	92:19	92:19	10	"Can't set BitsPerSample tag.\n"
LEAF_NODE	92:19	92:19	11	"Can't set BitsPerSample tag.\n"
LEAF_NODE	92:51	92:51	9	)
LEAF_NODE	92:52	92:52	7	;
JUMP_STATEMENT	93:2	93:14	6	goto failure ;
KEYWORD	93:2	93:2	7	goto
LEAF_NODE	93:2	93:2	8	goto
DESTINATION	93:7	93:7	7	failure
LEAF_NODE	93:7	93:7	8	failure
LEAF_NODE	93:14	93:14	7	;
LEAF_NODE	94:1	94:1	5	}
SELECTION	95:1	95:63	3	
KEYWORD	95:1	95:1	4	if
LEAF_NODE	95:1	95:1	5	if
LEAF_NODE	95:4	95:4	4	(
CONDITION	95:5	95:5	4	! TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , sizeof ( buf ) )
EXPR	95:5	95:5	5	! TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , sizeof ( buf ) )
UNARY_EXPR	95:5	95:6	6	! TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , sizeof ( buf ) )
UNARY_OPERATOR	95:5	95:5	7	!
LEAF_NODE	95:5	95:5	8	!
FUNCTION_CALL	95:6	95:60	7	TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , sizeof ( buf ) )
CALLEE	95:6	95:6	8	TIFFSetField
LEAF_NODE	95:6	95:6	9	TIFFSetField
LEAF_NODE	95:18	95:18	8	(
ARGUMENT	95:19	95:19	8	tif
FIELD	95:19	95:19	9	tif
LEAF_NODE	95:19	95:19	10	tif
LEAF_NODE	95:22	95:22	8	,
ARGUMENT	95:24	95:24	8	TIFFTAG_SAMPLESPERPIXEL
FIELD	95:24	95:24	9	TIFFTAG_SAMPLESPERPIXEL
LEAF_NODE	95:24	95:24	10	TIFFTAG_SAMPLESPERPIXEL
LEAF_NODE	95:47	95:47	8	,
ARGUMENT	95:49	95:49	8	sizeof ( buf )
FUNCTION_CALL	95:49	95:59	9	sizeof ( buf )
CALLEE	95:49	95:49	10	sizeof
LEAF_NODE	95:49	95:49	11	sizeof
LEAF_NODE	95:55	95:55	10	(
ARGUMENT	95:56	95:56	10	buf
FIELD	95:56	95:56	11	buf
LEAF_NODE	95:56	95:56	12	buf
LEAF_NODE	95:59	95:59	10	)
LEAF_NODE	95:60	95:60	8	)
LEAF_NODE	95:61	95:61	4	)
STATEMENTS	95:63	98:1	4	
LEAF_NODE	95:63	95:63	5	{
STATEMENTS	96:2	97:2	5	
EXPR_STATEMENT	96:2	96:54	6	fprintf ( stderr , "Can't set SamplesPerPixel tag.\n" ) ;
EXPR	96:2	96:2	7	fprintf ( stderr , "Can't set SamplesPerPixel tag.\n" )
FUNCTION_CALL	96:2	96:53	8	fprintf ( stderr , "Can't set SamplesPerPixel tag.\n" )
CALLEE	96:2	96:2	9	fprintf
LEAF_NODE	96:2	96:2	10	fprintf
LEAF_NODE	96:10	96:10	9	(
ARGUMENT	96:11	96:11	9	stderr
FIELD	96:11	96:11	10	stderr
LEAF_NODE	96:11	96:11	11	stderr
LEAF_NODE	96:17	96:17	9	,
ARGUMENT	96:19	96:19	9	"Can't set SamplesPerPixel tag.\n"
FIELD	96:19	96:19	10	"Can't set SamplesPerPixel tag.\n"
LEAF_NODE	96:19	96:19	11	"Can't set SamplesPerPixel tag.\n"
LEAF_NODE	96:53	96:53	9	)
LEAF_NODE	96:54	96:54	7	;
JUMP_STATEMENT	97:2	97:14	6	goto failure ;
KEYWORD	97:2	97:2	7	goto
LEAF_NODE	97:2	97:2	8	goto
DESTINATION	97:7	97:7	7	failure
LEAF_NODE	97:7	97:7	8	failure
LEAF_NODE	97:14	97:14	7	;
LEAF_NODE	98:1	98:1	5	}
SELECTION	99:1	99:68	3	
KEYWORD	99:1	99:1	4	if
LEAF_NODE	99:1	99:1	5	if
LEAF_NODE	99:4	99:4	4	(
CONDITION	99:5	99:5	4	! TIFFSetField ( tif , TIFFTAG_PLANARCONFIG , PLANARCONFIG_CONTIG )
EXPR	99:5	99:5	5	! TIFFSetField ( tif , TIFFTAG_PLANARCONFIG , PLANARCONFIG_CONTIG )
UNARY_EXPR	99:5	99:6	6	! TIFFSetField ( tif , TIFFTAG_PLANARCONFIG , PLANARCONFIG_CONTIG )
UNARY_OPERATOR	99:5	99:5	7	!
LEAF_NODE	99:5	99:5	8	!
FUNCTION_CALL	99:6	99:65	7	TIFFSetField ( tif , TIFFTAG_PLANARCONFIG , PLANARCONFIG_CONTIG )
CALLEE	99:6	99:6	8	TIFFSetField
LEAF_NODE	99:6	99:6	9	TIFFSetField
LEAF_NODE	99:18	99:18	8	(
ARGUMENT	99:19	99:19	8	tif
FIELD	99:19	99:19	9	tif
LEAF_NODE	99:19	99:19	10	tif
LEAF_NODE	99:22	99:22	8	,
ARGUMENT	99:24	99:24	8	TIFFTAG_PLANARCONFIG
FIELD	99:24	99:24	9	TIFFTAG_PLANARCONFIG
LEAF_NODE	99:24	99:24	10	TIFFTAG_PLANARCONFIG
LEAF_NODE	99:44	99:44	8	,
ARGUMENT	99:46	99:46	8	PLANARCONFIG_CONTIG
FIELD	99:46	99:46	9	PLANARCONFIG_CONTIG
LEAF_NODE	99:46	99:46	10	PLANARCONFIG_CONTIG
LEAF_NODE	99:65	99:65	8	)
LEAF_NODE	99:66	99:66	4	)
STATEMENTS	99:68	102:1	4	
LEAF_NODE	99:68	99:68	5	{
STATEMENTS	100:2	101:2	5	
EXPR_STATEMENT	100:2	100:58	6	fprintf ( stderr , "Can't set PlanarConfiguration tag.\n" ) ;
EXPR	100:2	100:2	7	fprintf ( stderr , "Can't set PlanarConfiguration tag.\n" )
FUNCTION_CALL	100:2	100:57	8	fprintf ( stderr , "Can't set PlanarConfiguration tag.\n" )
CALLEE	100:2	100:2	9	fprintf
LEAF_NODE	100:2	100:2	10	fprintf
LEAF_NODE	100:10	100:10	9	(
ARGUMENT	100:11	100:11	9	stderr
FIELD	100:11	100:11	10	stderr
LEAF_NODE	100:11	100:11	11	stderr
LEAF_NODE	100:17	100:17	9	,
ARGUMENT	100:19	100:19	9	"Can't set PlanarConfiguration tag.\n"
FIELD	100:19	100:19	10	"Can't set PlanarConfiguration tag.\n"
LEAF_NODE	100:19	100:19	11	"Can't set PlanarConfiguration tag.\n"
LEAF_NODE	100:57	100:57	9	)
LEAF_NODE	100:58	100:58	7	;
JUMP_STATEMENT	101:2	101:14	6	goto failure ;
KEYWORD	101:2	101:2	7	goto
LEAF_NODE	101:2	101:2	8	goto
DESTINATION	101:7	101:7	7	failure
LEAF_NODE	101:7	101:7	8	failure
LEAF_NODE	101:14	101:14	7	;
LEAF_NODE	102:1	102:1	5	}
SELECTION	103:1	103:63	3	
KEYWORD	103:1	103:1	4	if
LEAF_NODE	103:1	103:1	5	if
LEAF_NODE	103:4	103:4	4	(
CONDITION	103:5	103:5	4	! TIFFSetField ( tif , TIFFTAG_PHOTOMETRIC , PHOTOMETRIC_RGB )
EXPR	103:5	103:5	5	! TIFFSetField ( tif , TIFFTAG_PHOTOMETRIC , PHOTOMETRIC_RGB )
UNARY_EXPR	103:5	103:6	6	! TIFFSetField ( tif , TIFFTAG_PHOTOMETRIC , PHOTOMETRIC_RGB )
UNARY_OPERATOR	103:5	103:5	7	!
LEAF_NODE	103:5	103:5	8	!
FUNCTION_CALL	103:6	103:60	7	TIFFSetField ( tif , TIFFTAG_PHOTOMETRIC , PHOTOMETRIC_RGB )
CALLEE	103:6	103:6	8	TIFFSetField
LEAF_NODE	103:6	103:6	9	TIFFSetField
LEAF_NODE	103:18	103:18	8	(
ARGUMENT	103:19	103:19	8	tif
FIELD	103:19	103:19	9	tif
LEAF_NODE	103:19	103:19	10	tif
LEAF_NODE	103:22	103:22	8	,
ARGUMENT	103:24	103:24	8	TIFFTAG_PHOTOMETRIC
FIELD	103:24	103:24	9	TIFFTAG_PHOTOMETRIC
LEAF_NODE	103:24	103:24	10	TIFFTAG_PHOTOMETRIC
LEAF_NODE	103:43	103:43	8	,
ARGUMENT	103:45	103:45	8	PHOTOMETRIC_RGB
FIELD	103:45	103:45	9	PHOTOMETRIC_RGB
LEAF_NODE	103:45	103:45	10	PHOTOMETRIC_RGB
LEAF_NODE	103:60	103:60	8	)
LEAF_NODE	103:61	103:61	4	)
STATEMENTS	103:63	106:1	4	
LEAF_NODE	103:63	103:63	5	{
STATEMENTS	104:2	105:2	5	
EXPR_STATEMENT	104:2	104:64	6	fprintf ( stderr , "Can't set PhotometricInterpretation tag.\n" ) ;
EXPR	104:2	104:2	7	fprintf ( stderr , "Can't set PhotometricInterpretation tag.\n" )
FUNCTION_CALL	104:2	104:63	8	fprintf ( stderr , "Can't set PhotometricInterpretation tag.\n" )
CALLEE	104:2	104:2	9	fprintf
LEAF_NODE	104:2	104:2	10	fprintf
LEAF_NODE	104:10	104:10	9	(
ARGUMENT	104:11	104:11	9	stderr
FIELD	104:11	104:11	10	stderr
LEAF_NODE	104:11	104:11	11	stderr
LEAF_NODE	104:17	104:17	9	,
ARGUMENT	104:19	104:19	9	"Can't set PhotometricInterpretation tag.\n"
FIELD	104:19	104:19	10	"Can't set PhotometricInterpretation tag.\n"
LEAF_NODE	104:19	104:19	11	"Can't set PhotometricInterpretation tag.\n"
LEAF_NODE	104:63	104:63	9	)
LEAF_NODE	104:64	104:64	7	;
JUMP_STATEMENT	105:2	105:14	6	goto failure ;
KEYWORD	105:2	105:2	7	goto
LEAF_NODE	105:2	105:2	8	goto
DESTINATION	105:7	105:7	7	failure
LEAF_NODE	105:7	105:7	8	failure
LEAF_NODE	105:14	105:14	7	;
LEAF_NODE	106:1	106:1	5	}
ITERATION	108:1	108:29	3	
KEYWORD	108:1	108:1	4	for
LEAF_NODE	108:1	108:1	5	for
LEAF_NODE	108:5	108:5	4	(
FOR_INIT	108:6	108:11	4	i = 0 ;
EXPR	108:6	108:6	5	i = 0
ASSIGN	108:6	108:10	6	i = 0
LVAL	108:6	108:6	7	i
FIELD	108:6	108:6	8	i
LEAF_NODE	108:6	108:6	9	i
ASSIGN_OP	108:8	108:8	7	=
LEAF_NODE	108:8	108:8	8	=
RVAL	108:10	108:10	7	0
FIELD	108:10	108:10	8	0
LEAF_NODE	108:10	108:10	9	0
LEAF_NODE	108:11	108:11	5	;
CONDITION	108:13	108:13	4	i < NTAGS
EXPR	108:13	108:17	5	i < NTAGS
FIELD	108:13	108:13	6	i
LEAF_NODE	108:13	108:13	7	i
REL_OPERATOR	108:15	108:15	6	<
LEAF_NODE	108:15	108:15	7	<
FIELD	108:17	108:17	6	NTAGS
LEAF_NODE	108:17	108:17	7	NTAGS
LEAF_NODE	108:22	108:22	4	;
FOR_EXPR	108:24	108:24	4	i ++
EXPR	108:24	108:24	5	i ++
FIELD	108:24	108:25	6	i ++
LEAF_NODE	108:24	108:24	7	i
LEAF_NODE	108:25	108:25	7	++
LEAF_NODE	108:27	108:27	4	)
STATEMENTS	108:29	115:1	4	
LEAF_NODE	108:29	108:29	5	{
STATEMENTS	109:2	109:2	5	
SELECTION	109:2	110:28	6	
KEYWORD	109:2	109:2	7	if
LEAF_NODE	109:2	109:2	8	if
LEAF_NODE	109:5	109:5	7	(
CONDITION	109:6	109:6	7	! TIFFSetField ( tif , ascii_tags [ i ] . tag , ascii_tags [ i ] . value )
EXPR	109:6	109:6	8	! TIFFSetField ( tif , ascii_tags [ i ] . tag , ascii_tags [ i ] . value )
UNARY_EXPR	109:6	109:7	9	! TIFFSetField ( tif , ascii_tags [ i ] . tag , ascii_tags [ i ] . value )
UNARY_OPERATOR	109:6	109:6	10	!
LEAF_NODE	109:6	109:6	11	!
FUNCTION_CALL	109:7	110:25	10	TIFFSetField ( tif , ascii_tags [ i ] . tag , ascii_tags [ i ] . value )
CALLEE	109:7	109:7	11	TIFFSetField
LEAF_NODE	109:7	109:7	12	TIFFSetField
LEAF_NODE	109:19	109:19	11	(
ARGUMENT	109:20	109:20	11	tif
FIELD	109:20	109:20	12	tif
LEAF_NODE	109:20	109:20	13	tif
LEAF_NODE	109:23	109:23	11	,
ARGUMENT	109:25	109:25	11	ascii_tags [ i ] . tag
FIELD	109:25	109:39	12	ascii_tags [ i ] . tag
LEAF_NODE	109:25	109:25	13	ascii_tags
LEAF_NODE	109:35	109:35	13	[
EXPR	109:36	109:36	13	i
FIELD	109:36	109:36	14	i
LEAF_NODE	109:36	109:36	15	i
LEAF_NODE	109:37	109:37	13	]
LEAF_NODE	109:38	109:38	13	.
LEAF_NODE	109:39	109:39	13	tag
LEAF_NODE	109:42	109:42	11	,
ARGUMENT	110:6	110:6	11	ascii_tags [ i ] . value
FIELD	110:6	110:20	12	ascii_tags [ i ] . value
LEAF_NODE	110:6	110:6	13	ascii_tags
LEAF_NODE	110:16	110:16	13	[
EXPR	110:17	110:17	13	i
FIELD	110:17	110:17	14	i
LEAF_NODE	110:17	110:17	15	i
LEAF_NODE	110:18	110:18	13	]
LEAF_NODE	110:19	110:19	13	.
LEAF_NODE	110:20	110:20	13	value
LEAF_NODE	110:25	110:25	11	)
LEAF_NODE	110:26	110:26	7	)
STATEMENTS	110:28	114:2	7	
LEAF_NODE	110:28	110:28	8	{
STATEMENTS	111:3	113:3	8	
EXPR_STATEMENT	111:3	112:37	9	fprintf ( stderr , "Can't set tag %lu.\n" , ( unsigned long ) ascii_tags [ i ] . tag ) ;
EXPR	111:3	111:3	10	fprintf ( stderr , "Can't set tag %lu.\n" , ( unsigned long ) ascii_tags [ i ] . tag )
FUNCTION_CALL	111:3	112:36	11	fprintf ( stderr , "Can't set tag %lu.\n" , ( unsigned long ) ascii_tags [ i ] . tag )
CALLEE	111:3	111:3	12	fprintf
LEAF_NODE	111:3	111:3	13	fprintf
LEAF_NODE	111:10	111:10	12	(
ARGUMENT	111:11	111:11	12	stderr
FIELD	111:11	111:11	13	stderr
LEAF_NODE	111:11	111:11	14	stderr
LEAF_NODE	111:17	111:17	12	,
ARGUMENT	111:19	111:19	12	"Can't set tag %lu.\n"
FIELD	111:19	111:19	13	"Can't set tag %lu.\n"
LEAF_NODE	111:19	111:19	14	"Can't set tag %lu.\n"
LEAF_NODE	111:41	111:41	12	,
ARGUMENT	112:4	112:19	12	( unsigned long ) ascii_tags [ i ] . tag
LEAF_NODE	112:4	112:4	13	(
TYPE_NAME	112:5	112:14	13	unsigned long
LEAF_NODE	112:5	112:5	14	unsigned
LEAF_NODE	112:14	112:14	14	long
LEAF_NODE	112:18	112:18	13	)
FIELD	112:19	112:33	13	ascii_tags [ i ] . tag
LEAF_NODE	112:19	112:19	14	ascii_tags
LEAF_NODE	112:29	112:29	14	[
EXPR	112:30	112:30	14	i
FIELD	112:30	112:30	15	i
LEAF_NODE	112:30	112:30	16	i
LEAF_NODE	112:31	112:31	14	]
LEAF_NODE	112:32	112:32	14	.
LEAF_NODE	112:33	112:33	14	tag
LEAF_NODE	112:36	112:36	12	)
LEAF_NODE	112:37	112:37	10	;
JUMP_STATEMENT	113:3	113:15	9	goto failure ;
KEYWORD	113:3	113:3	10	goto
LEAF_NODE	113:3	113:3	11	goto
DESTINATION	113:8	113:8	10	failure
LEAF_NODE	113:8	113:8	11	failure
LEAF_NODE	113:15	113:15	10	;
LEAF_NODE	114:2	114:2	8	}
LEAF_NODE	115:1	115:1	5	}
SELECTION	118:1	118:50	3	
KEYWORD	118:1	118:1	4	if
LEAF_NODE	118:1	118:1	5	if
LEAF_NODE	118:4	118:4	4	(
CONDITION	118:5	118:5	4	! TIFFSetField ( tif , TIFFTAG_NUMBEROFINKS , 3 )
EXPR	118:5	118:5	5	! TIFFSetField ( tif , TIFFTAG_NUMBEROFINKS , 3 )
UNARY_EXPR	118:5	118:6	6	! TIFFSetField ( tif , TIFFTAG_NUMBEROFINKS , 3 )
UNARY_OPERATOR	118:5	118:5	7	!
LEAF_NODE	118:5	118:5	8	!
FUNCTION_CALL	118:6	118:47	7	TIFFSetField ( tif , TIFFTAG_NUMBEROFINKS , 3 )
CALLEE	118:6	118:6	8	TIFFSetField
LEAF_NODE	118:6	118:6	9	TIFFSetField
LEAF_NODE	118:18	118:18	8	(
ARGUMENT	118:19	118:19	8	tif
FIELD	118:19	118:19	9	tif
LEAF_NODE	118:19	118:19	10	tif
LEAF_NODE	118:22	118:22	8	,
ARGUMENT	118:24	118:24	8	TIFFTAG_NUMBEROFINKS
FIELD	118:24	118:24	9	TIFFTAG_NUMBEROFINKS
LEAF_NODE	118:24	118:24	10	TIFFTAG_NUMBEROFINKS
LEAF_NODE	118:44	118:44	8	,
ARGUMENT	118:46	118:46	8	3
FIELD	118:46	118:46	9	3
LEAF_NODE	118:46	118:46	10	3
LEAF_NODE	118:47	118:47	8	)
LEAF_NODE	118:48	118:48	4	)
STATEMENTS	118:50	122:1	4	
LEAF_NODE	118:50	118:50	5	{
STATEMENTS	119:2	121:2	5	
EXPR_STATEMENT	119:2	120:46	6	fprintf ( stderr , "Can't set tag %d (NUMBEROFINKS).\n" , TIFFTAG_NUMBEROFINKS ) ;
EXPR	119:2	119:2	7	fprintf ( stderr , "Can't set tag %d (NUMBEROFINKS).\n" , TIFFTAG_NUMBEROFINKS )
FUNCTION_CALL	119:2	120:45	8	fprintf ( stderr , "Can't set tag %d (NUMBEROFINKS).\n" , TIFFTAG_NUMBEROFINKS )
CALLEE	119:2	119:2	9	fprintf
LEAF_NODE	119:2	119:2	10	fprintf
LEAF_NODE	119:10	119:10	9	(
ARGUMENT	119:11	119:11	9	stderr
FIELD	119:11	119:11	10	stderr
LEAF_NODE	119:11	119:11	11	stderr
LEAF_NODE	119:17	119:17	9	,
ARGUMENT	119:19	119:19	9	"Can't set tag %d (NUMBEROFINKS).\n"
FIELD	119:19	119:19	10	"Can't set tag %d (NUMBEROFINKS).\n"
LEAF_NODE	119:19	119:19	11	"Can't set tag %d (NUMBEROFINKS).\n"
LEAF_NODE	119:55	119:55	9	,
ARGUMENT	120:25	120:25	9	TIFFTAG_NUMBEROFINKS
FIELD	120:25	120:25	10	TIFFTAG_NUMBEROFINKS
LEAF_NODE	120:25	120:25	11	TIFFTAG_NUMBEROFINKS
LEAF_NODE	120:45	120:45	9	)
LEAF_NODE	120:46	120:46	7	;
JUMP_STATEMENT	121:2	121:14	6	goto failure ;
KEYWORD	121:2	121:2	7	goto
LEAF_NODE	121:2	121:2	8	goto
DESTINATION	121:7	121:7	7	failure
LEAF_NODE	121:7	121:7	8	failure
LEAF_NODE	121:14	121:14	7	;
LEAF_NODE	122:1	122:1	5	}
SELECTION	123:1	123:70	3	
KEYWORD	123:1	123:1	4	if
LEAF_NODE	123:1	123:1	5	if
LEAF_NODE	123:4	123:4	4	(
CONDITION	123:5	123:5	4	! TIFFSetField ( tif , TIFFTAG_INKNAMES , ink_names_size , ink_names )
EXPR	123:5	123:5	5	! TIFFSetField ( tif , TIFFTAG_INKNAMES , ink_names_size , ink_names )
UNARY_EXPR	123:5	123:6	6	! TIFFSetField ( tif , TIFFTAG_INKNAMES , ink_names_size , ink_names )
UNARY_OPERATOR	123:5	123:5	7	!
LEAF_NODE	123:5	123:5	8	!
FUNCTION_CALL	123:6	123:67	7	TIFFSetField ( tif , TIFFTAG_INKNAMES , ink_names_size , ink_names )
CALLEE	123:6	123:6	8	TIFFSetField
LEAF_NODE	123:6	123:6	9	TIFFSetField
LEAF_NODE	123:18	123:18	8	(
ARGUMENT	123:19	123:19	8	tif
FIELD	123:19	123:19	9	tif
LEAF_NODE	123:19	123:19	10	tif
LEAF_NODE	123:22	123:22	8	,
ARGUMENT	123:24	123:24	8	TIFFTAG_INKNAMES
FIELD	123:24	123:24	9	TIFFTAG_INKNAMES
LEAF_NODE	123:24	123:24	10	TIFFTAG_INKNAMES
LEAF_NODE	123:40	123:40	8	,
ARGUMENT	123:42	123:42	8	ink_names_size
FIELD	123:42	123:42	9	ink_names_size
LEAF_NODE	123:42	123:42	10	ink_names_size
LEAF_NODE	123:56	123:56	8	,
ARGUMENT	123:58	123:58	8	ink_names
FIELD	123:58	123:58	9	ink_names
LEAF_NODE	123:58	123:58	10	ink_names
LEAF_NODE	123:67	123:67	8	)
LEAF_NODE	123:68	123:68	4	)
STATEMENTS	123:70	127:1	4	
LEAF_NODE	123:70	123:70	5	{
STATEMENTS	124:2	126:2	5	
EXPR_STATEMENT	124:2	125:21	6	fprintf ( stderr , "Can't set tag %d (INKNAMES).\n" , TIFFTAG_INKNAMES ) ;
EXPR	124:2	124:2	7	fprintf ( stderr , "Can't set tag %d (INKNAMES).\n" , TIFFTAG_INKNAMES )
FUNCTION_CALL	124:2	125:20	8	fprintf ( stderr , "Can't set tag %d (INKNAMES).\n" , TIFFTAG_INKNAMES )
CALLEE	124:2	124:2	9	fprintf
LEAF_NODE	124:2	124:2	10	fprintf
LEAF_NODE	124:10	124:10	9	(
ARGUMENT	124:11	124:11	9	stderr
FIELD	124:11	124:11	10	stderr
LEAF_NODE	124:11	124:11	11	stderr
LEAF_NODE	124:17	124:17	9	,
ARGUMENT	124:19	124:19	9	"Can't set tag %d (INKNAMES).\n"
FIELD	124:19	124:19	10	"Can't set tag %d (INKNAMES).\n"
LEAF_NODE	124:19	124:19	11	"Can't set tag %d (INKNAMES).\n"
LEAF_NODE	124:51	124:51	9	,
ARGUMENT	125:4	125:4	9	TIFFTAG_INKNAMES
FIELD	125:4	125:4	10	TIFFTAG_INKNAMES
LEAF_NODE	125:4	125:4	11	TIFFTAG_INKNAMES
LEAF_NODE	125:20	125:20	9	)
LEAF_NODE	125:21	125:21	7	;
JUMP_STATEMENT	126:2	126:14	6	goto failure ;
KEYWORD	126:2	126:2	7	goto
LEAF_NODE	126:2	126:2	8	goto
DESTINATION	126:7	126:7	7	failure
LEAF_NODE	126:7	126:7	8	failure
LEAF_NODE	126:14	126:14	7	;
LEAF_NODE	127:1	127:1	5	}
SELECTION	130:1	130:46	3	
KEYWORD	130:1	130:1	4	if
LEAF_NODE	130:1	130:1	5	if
LEAF_NODE	130:4	130:4	4	(
CONDITION	130:5	130:5	4	TIFFWriteScanline ( tif , buf , 0 , 0 ) == - 1
EXPR	130:5	130:42	5	TIFFWriteScanline ( tif , buf , 0 , 0 ) == - 1
FUNCTION_CALL	130:5	130:37	6	TIFFWriteScanline ( tif , buf , 0 , 0 )
CALLEE	130:5	130:5	7	TIFFWriteScanline
LEAF_NODE	130:5	130:5	8	TIFFWriteScanline
LEAF_NODE	130:22	130:22	7	(
ARGUMENT	130:23	130:23	7	tif
FIELD	130:23	130:23	8	tif
LEAF_NODE	130:23	130:23	9	tif
LEAF_NODE	130:26	130:26	7	,
ARGUMENT	130:28	130:28	7	buf
FIELD	130:28	130:28	8	buf
LEAF_NODE	130:28	130:28	9	buf
LEAF_NODE	130:31	130:31	7	,
ARGUMENT	130:33	130:33	7	0
FIELD	130:33	130:33	8	0
LEAF_NODE	130:33	130:33	9	0
LEAF_NODE	130:34	130:34	7	,
ARGUMENT	130:36	130:36	7	0
FIELD	130:36	130:36	8	0
LEAF_NODE	130:36	130:36	9	0
LEAF_NODE	130:37	130:37	7	)
EQ_OPERATOR	130:39	130:39	6	==
LEAF_NODE	130:39	130:39	7	==
UNARY_EXPR	130:42	130:43	6	- 1
UNARY_OPERATOR	130:42	130:42	7	-
LEAF_NODE	130:42	130:42	8	-
FIELD	130:43	130:43	7	1
LEAF_NODE	130:43	130:43	8	1
LEAF_NODE	130:44	130:44	4	)
STATEMENTS	130:46	133:1	4	
LEAF_NODE	130:46	130:46	5	{
STATEMENTS	131:2	132:2	5	
EXPR_STATEMENT	131:2	131:47	6	fprintf ( stderr , "Can't write image data.\n" ) ;
EXPR	131:2	131:2	7	fprintf ( stderr , "Can't write image data.\n" )
FUNCTION_CALL	131:2	131:46	8	fprintf ( stderr , "Can't write image data.\n" )
CALLEE	131:2	131:2	9	fprintf
LEAF_NODE	131:2	131:2	10	fprintf
LEAF_NODE	131:10	131:10	9	(
ARGUMENT	131:11	131:11	9	stderr
FIELD	131:11	131:11	10	stderr
LEAF_NODE	131:11	131:11	11	stderr
LEAF_NODE	131:17	131:17	9	,
ARGUMENT	131:19	131:19	9	"Can't write image data.\n"
FIELD	131:19	131:19	10	"Can't write image data.\n"
LEAF_NODE	131:19	131:19	11	"Can't write image data.\n"
LEAF_NODE	131:46	131:46	9	)
LEAF_NODE	131:47	131:47	7	;
JUMP_STATEMENT	132:2	132:14	6	goto failure ;
KEYWORD	132:2	132:2	7	goto
LEAF_NODE	132:2	132:2	8	goto
DESTINATION	132:7	132:7	7	failure
LEAF_NODE	132:7	132:7	8	failure
LEAF_NODE	132:14	132:14	7	;
LEAF_NODE	133:1	133:1	5	}
EXPR_STATEMENT	135:1	135:15	3	TIFFClose ( tif ) ;
EXPR	135:1	135:1	4	TIFFClose ( tif )
FUNCTION_CALL	135:1	135:14	5	TIFFClose ( tif )
CALLEE	135:1	135:1	6	TIFFClose
LEAF_NODE	135:1	135:1	7	TIFFClose
LEAF_NODE	135:10	135:10	6	(
ARGUMENT	135:11	135:11	6	tif
FIELD	135:11	135:11	7	tif
LEAF_NODE	135:11	135:11	8	tif
LEAF_NODE	135:14	135:14	6	)
LEAF_NODE	135:15	135:15	4	;
EXPR_STATEMENT	138:1	138:30	3	tif = TIFFOpen ( filename , "r" ) ;
EXPR	138:1	138:1	4	tif = TIFFOpen ( filename , "r" )
ASSIGN	138:1	138:7	5	tif = TIFFOpen ( filename , "r" )
LVAL	138:1	138:1	6	tif
FIELD	138:1	138:1	7	tif
LEAF_NODE	138:1	138:1	8	tif
ASSIGN_OP	138:5	138:5	6	=
LEAF_NODE	138:5	138:5	7	=
RVAL	138:7	138:7	6	TIFFOpen ( filename , "r" )
FUNCTION_CALL	138:7	138:29	7	TIFFOpen ( filename , "r" )
CALLEE	138:7	138:7	8	TIFFOpen
LEAF_NODE	138:7	138:7	9	TIFFOpen
LEAF_NODE	138:15	138:15	8	(
ARGUMENT	138:16	138:16	8	filename
FIELD	138:16	138:16	9	filename
LEAF_NODE	138:16	138:16	10	filename
LEAF_NODE	138:24	138:24	8	,
ARGUMENT	138:26	138:26	8	"r"
FIELD	138:26	138:26	9	"r"
LEAF_NODE	138:26	138:26	10	"r"
LEAF_NODE	138:29	138:29	8	)
LEAF_NODE	138:30	138:30	4	;
SELECTION	139:1	139:11	3	
KEYWORD	139:1	139:1	4	if
LEAF_NODE	139:1	139:1	5	if
LEAF_NODE	139:4	139:4	4	(
CONDITION	139:5	139:5	4	! tif
EXPR	139:5	139:5	5	! tif
UNARY_EXPR	139:5	139:6	6	! tif
UNARY_OPERATOR	139:5	139:5	7	!
LEAF_NODE	139:5	139:5	8	!
FIELD	139:6	139:6	7	tif
LEAF_NODE	139:6	139:6	8	tif
LEAF_NODE	139:9	139:9	4	)
STATEMENTS	139:11	142:1	4	
LEAF_NODE	139:11	139:11	5	{
STATEMENTS	140:2	141:2	5	
EXPR_STATEMENT	140:2	140:63	6	fprintf ( stderr , "Can't open test TIFF file %s.\n" , filename ) ;
EXPR	140:2	140:2	7	fprintf ( stderr , "Can't open test TIFF file %s.\n" , filename )
FUNCTION_CALL	140:2	140:62	8	fprintf ( stderr , "Can't open test TIFF file %s.\n" , filename )
CALLEE	140:2	140:2	9	fprintf
LEAF_NODE	140:2	140:2	10	fprintf
LEAF_NODE	140:10	140:10	9	(
ARGUMENT	140:11	140:11	9	stderr
FIELD	140:11	140:11	10	stderr
LEAF_NODE	140:11	140:11	11	stderr
LEAF_NODE	140:17	140:17	9	,
ARGUMENT	140:19	140:19	9	"Can't open test TIFF file %s.\n"
FIELD	140:19	140:19	10	"Can't open test TIFF file %s.\n"
LEAF_NODE	140:19	140:19	11	"Can't open test TIFF file %s.\n"
LEAF_NODE	140:52	140:52	9	,
ARGUMENT	140:54	140:54	9	filename
FIELD	140:54	140:54	10	filename
LEAF_NODE	140:54	140:54	11	filename
LEAF_NODE	140:62	140:62	9	)
LEAF_NODE	140:63	140:63	7	;
JUMP_STATEMENT	141:2	141:10	6	return 1 ;
KEYWORD	141:2	141:2	7	return
LEAF_NODE	141:2	141:2	8	return
DESTINATION	141:9	141:9	7	1
EXPR	141:9	141:9	8	1
FIELD	141:9	141:9	9	1
LEAF_NODE	141:9	141:9	10	1
LEAF_NODE	141:10	141:10	7	;
LEAF_NODE	142:1	142:1	5	}
ITERATION	144:1	144:29	3	
KEYWORD	144:1	144:1	4	for
LEAF_NODE	144:1	144:1	5	for
LEAF_NODE	144:5	144:5	4	(
FOR_INIT	144:6	144:11	4	i = 0 ;
EXPR	144:6	144:6	5	i = 0
ASSIGN	144:6	144:10	6	i = 0
LVAL	144:6	144:6	7	i
FIELD	144:6	144:6	8	i
LEAF_NODE	144:6	144:6	9	i
ASSIGN_OP	144:8	144:8	7	=
LEAF_NODE	144:8	144:8	8	=
RVAL	144:10	144:10	7	0
FIELD	144:10	144:10	8	0
LEAF_NODE	144:10	144:10	9	0
LEAF_NODE	144:11	144:11	5	;
CONDITION	144:13	144:13	4	i < NTAGS
EXPR	144:13	144:17	5	i < NTAGS
FIELD	144:13	144:13	6	i
LEAF_NODE	144:13	144:13	7	i
REL_OPERATOR	144:15	144:15	6	<
LEAF_NODE	144:15	144:15	7	<
FIELD	144:17	144:17	6	NTAGS
LEAF_NODE	144:17	144:17	7	NTAGS
LEAF_NODE	144:22	144:22	4	;
FOR_EXPR	144:24	144:24	4	i ++
EXPR	144:24	144:24	5	i ++
FIELD	144:24	144:25	6	i ++
LEAF_NODE	144:24	144:24	7	i
LEAF_NODE	144:25	144:25	7	++
LEAF_NODE	144:27	144:27	4	)
STATEMENTS	144:29	151:1	4	
LEAF_NODE	144:29	144:29	5	{
STATEMENTS	145:2	145:2	5	
SELECTION	145:2	146:45	6	
KEYWORD	145:2	145:2	7	if
LEAF_NODE	145:2	145:2	8	if
LEAF_NODE	145:5	145:5	7	(
CONDITION	145:6	145:6	7	! TIFFGetField ( tif , ascii_tags [ i ] . tag , & value ) || strcmp ( value , ascii_tags [ i ] . value )
EXPR	145:6	145:6	8	! TIFFGetField ( tif , ascii_tags [ i ] . tag , & value ) || strcmp ( value , ascii_tags [ i ] . value )
OR	145:6	146:9	9	! TIFFGetField ( tif , ascii_tags [ i ] . tag , & value ) || strcmp ( value , ascii_tags [ i ] . value )
EXPR	145:6	145:6	10	! TIFFGetField ( tif , ascii_tags [ i ] . tag , & value )
UNARY_EXPR	145:6	145:7	11	! TIFFGetField ( tif , ascii_tags [ i ] . tag , & value )
UNARY_OPERATOR	145:6	145:6	12	!
LEAF_NODE	145:6	145:6	13	!
FUNCTION_CALL	145:7	145:50	12	TIFFGetField ( tif , ascii_tags [ i ] . tag , & value )
CALLEE	145:7	145:7	13	TIFFGetField
LEAF_NODE	145:7	145:7	14	TIFFGetField
LEAF_NODE	145:19	145:19	13	(
ARGUMENT	145:20	145:20	13	tif
FIELD	145:20	145:20	14	tif
LEAF_NODE	145:20	145:20	15	tif
LEAF_NODE	145:23	145:23	13	,
ARGUMENT	145:25	145:25	13	ascii_tags [ i ] . tag
FIELD	145:25	145:39	14	ascii_tags [ i ] . tag
LEAF_NODE	145:25	145:25	15	ascii_tags
LEAF_NODE	145:35	145:35	15	[
EXPR	145:36	145:36	15	i
FIELD	145:36	145:36	16	i
LEAF_NODE	145:36	145:36	17	i
LEAF_NODE	145:37	145:37	15	]
LEAF_NODE	145:38	145:38	15	.
LEAF_NODE	145:39	145:39	15	tag
LEAF_NODE	145:42	145:42	13	,
ARGUMENT	145:44	145:44	13	& value
UNARY_EXPR	145:44	145:45	14	& value
UNARY_OPERATOR	145:44	145:44	15	&
LEAF_NODE	145:44	145:44	16	&
FIELD	145:45	145:45	15	value
LEAF_NODE	145:45	145:45	16	value
LEAF_NODE	145:50	145:50	13	)
LEAF_NODE	146:6	146:6	10	||
EXPR	146:9	146:9	10	strcmp ( value , ascii_tags [ i ] . value )
FUNCTION_CALL	146:9	146:42	11	strcmp ( value , ascii_tags [ i ] . value )
CALLEE	146:9	146:9	12	strcmp
LEAF_NODE	146:9	146:9	13	strcmp
LEAF_NODE	146:15	146:15	12	(
ARGUMENT	146:16	146:16	12	value
FIELD	146:16	146:16	13	value
LEAF_NODE	146:16	146:16	14	value
LEAF_NODE	146:21	146:21	12	,
ARGUMENT	146:23	146:23	12	ascii_tags [ i ] . value
FIELD	146:23	146:37	13	ascii_tags [ i ] . value
LEAF_NODE	146:23	146:23	14	ascii_tags
LEAF_NODE	146:33	146:33	14	[
EXPR	146:34	146:34	14	i
FIELD	146:34	146:34	15	i
LEAF_NODE	146:34	146:34	16	i
LEAF_NODE	146:35	146:35	14	]
LEAF_NODE	146:36	146:36	14	.
LEAF_NODE	146:37	146:37	14	value
LEAF_NODE	146:42	146:42	12	)
LEAF_NODE	146:43	146:43	7	)
STATEMENTS	146:45	150:2	7	
LEAF_NODE	146:45	146:45	8	{
STATEMENTS	147:3	149:3	8	
EXPR_STATEMENT	147:3	148:37	9	fprintf ( stderr , "Can't get tag %lu.\n" , ( unsigned long ) ascii_tags [ i ] . tag ) ;
EXPR	147:3	147:3	10	fprintf ( stderr , "Can't get tag %lu.\n" , ( unsigned long ) ascii_tags [ i ] . tag )
FUNCTION_CALL	147:3	148:36	11	fprintf ( stderr , "Can't get tag %lu.\n" , ( unsigned long ) ascii_tags [ i ] . tag )
CALLEE	147:3	147:3	12	fprintf
LEAF_NODE	147:3	147:3	13	fprintf
LEAF_NODE	147:10	147:10	12	(
ARGUMENT	147:11	147:11	12	stderr
FIELD	147:11	147:11	13	stderr
LEAF_NODE	147:11	147:11	14	stderr
LEAF_NODE	147:17	147:17	12	,
ARGUMENT	147:19	147:19	12	"Can't get tag %lu.\n"
FIELD	147:19	147:19	13	"Can't get tag %lu.\n"
LEAF_NODE	147:19	147:19	14	"Can't get tag %lu.\n"
LEAF_NODE	147:41	147:41	12	,
ARGUMENT	148:4	148:19	12	( unsigned long ) ascii_tags [ i ] . tag
LEAF_NODE	148:4	148:4	13	(
TYPE_NAME	148:5	148:14	13	unsigned long
LEAF_NODE	148:5	148:5	14	unsigned
LEAF_NODE	148:14	148:14	14	long
LEAF_NODE	148:18	148:18	13	)
FIELD	148:19	148:33	13	ascii_tags [ i ] . tag
LEAF_NODE	148:19	148:19	14	ascii_tags
LEAF_NODE	148:29	148:29	14	[
EXPR	148:30	148:30	14	i
FIELD	148:30	148:30	15	i
LEAF_NODE	148:30	148:30	16	i
LEAF_NODE	148:31	148:31	14	]
LEAF_NODE	148:32	148:32	14	.
LEAF_NODE	148:33	148:33	14	tag
LEAF_NODE	148:36	148:36	12	)
LEAF_NODE	148:37	148:37	10	;
JUMP_STATEMENT	149:3	149:15	9	goto failure ;
KEYWORD	149:3	149:3	10	goto
LEAF_NODE	149:3	149:3	11	goto
DESTINATION	149:8	149:8	10	failure
LEAF_NODE	149:8	149:8	11	failure
LEAF_NODE	149:15	149:15	10	;
LEAF_NODE	150:2	150:2	8	}
LEAF_NODE	151:1	151:1	5	}
SELECTION	153:1	154:50	3	
KEYWORD	153:1	153:1	4	if
LEAF_NODE	153:1	153:1	5	if
LEAF_NODE	153:4	153:4	4	(
CONDITION	153:5	153:5	4	! TIFFGetField ( tif , TIFFTAG_INKNAMES , & value ) || memcmp ( value , ink_names , ink_names_size )
EXPR	153:5	153:5	5	! TIFFGetField ( tif , TIFFTAG_INKNAMES , & value ) || memcmp ( value , ink_names , ink_names_size )
OR	153:5	154:8	6	! TIFFGetField ( tif , TIFFTAG_INKNAMES , & value ) || memcmp ( value , ink_names , ink_names_size )
EXPR	153:5	153:5	7	! TIFFGetField ( tif , TIFFTAG_INKNAMES , & value )
UNARY_EXPR	153:5	153:6	8	! TIFFGetField ( tif , TIFFTAG_INKNAMES , & value )
UNARY_OPERATOR	153:5	153:5	9	!
LEAF_NODE	153:5	153:5	10	!
FUNCTION_CALL	153:6	153:48	9	TIFFGetField ( tif , TIFFTAG_INKNAMES , & value )
CALLEE	153:6	153:6	10	TIFFGetField
LEAF_NODE	153:6	153:6	11	TIFFGetField
LEAF_NODE	153:18	153:18	10	(
ARGUMENT	153:19	153:19	10	tif
FIELD	153:19	153:19	11	tif
LEAF_NODE	153:19	153:19	12	tif
LEAF_NODE	153:22	153:22	10	,
ARGUMENT	153:24	153:24	10	TIFFTAG_INKNAMES
FIELD	153:24	153:24	11	TIFFTAG_INKNAMES
LEAF_NODE	153:24	153:24	12	TIFFTAG_INKNAMES
LEAF_NODE	153:40	153:40	10	,
ARGUMENT	153:42	153:42	10	& value
UNARY_EXPR	153:42	153:43	11	& value
UNARY_OPERATOR	153:42	153:42	12	&
LEAF_NODE	153:42	153:42	13	&
FIELD	153:43	153:43	12	value
LEAF_NODE	153:43	153:43	13	value
LEAF_NODE	153:48	153:48	10	)
LEAF_NODE	154:5	154:5	7	||
EXPR	154:8	154:8	7	memcmp ( value , ink_names , ink_names_size )
FUNCTION_CALL	154:8	154:47	8	memcmp ( value , ink_names , ink_names_size )
CALLEE	154:8	154:8	9	memcmp
LEAF_NODE	154:8	154:8	10	memcmp
LEAF_NODE	154:14	154:14	9	(
ARGUMENT	154:15	154:15	9	value
FIELD	154:15	154:15	10	value
LEAF_NODE	154:15	154:15	11	value
LEAF_NODE	154:20	154:20	9	,
ARGUMENT	154:22	154:22	9	ink_names
FIELD	154:22	154:22	10	ink_names
LEAF_NODE	154:22	154:22	11	ink_names
LEAF_NODE	154:31	154:31	9	,
ARGUMENT	154:33	154:33	9	ink_names_size
FIELD	154:33	154:33	10	ink_names_size
LEAF_NODE	154:33	154:33	11	ink_names_size
LEAF_NODE	154:47	154:47	9	)
LEAF_NODE	154:48	154:48	4	)
STATEMENTS	154:50	158:1	4	
LEAF_NODE	154:50	154:50	5	{
STATEMENTS	155:2	157:2	5	
EXPR_STATEMENT	155:2	156:21	6	fprintf ( stderr , "Can't get tag %d (INKNAMES).\n" , TIFFTAG_INKNAMES ) ;
EXPR	155:2	155:2	7	fprintf ( stderr , "Can't get tag %d (INKNAMES).\n" , TIFFTAG_INKNAMES )
FUNCTION_CALL	155:2	156:20	8	fprintf ( stderr , "Can't get tag %d (INKNAMES).\n" , TIFFTAG_INKNAMES )
CALLEE	155:2	155:2	9	fprintf
LEAF_NODE	155:2	155:2	10	fprintf
LEAF_NODE	155:10	155:10	9	(
ARGUMENT	155:11	155:11	9	stderr
FIELD	155:11	155:11	10	stderr
LEAF_NODE	155:11	155:11	11	stderr
LEAF_NODE	155:17	155:17	9	,
ARGUMENT	155:19	155:19	9	"Can't get tag %d (INKNAMES).\n"
FIELD	155:19	155:19	10	"Can't get tag %d (INKNAMES).\n"
LEAF_NODE	155:19	155:19	11	"Can't get tag %d (INKNAMES).\n"
LEAF_NODE	155:51	155:51	9	,
ARGUMENT	156:4	156:4	9	TIFFTAG_INKNAMES
FIELD	156:4	156:4	10	TIFFTAG_INKNAMES
LEAF_NODE	156:4	156:4	11	TIFFTAG_INKNAMES
LEAF_NODE	156:20	156:20	9	)
LEAF_NODE	156:21	156:21	7	;
JUMP_STATEMENT	157:2	157:14	6	goto failure ;
KEYWORD	157:2	157:2	7	goto
LEAF_NODE	157:2	157:2	8	goto
DESTINATION	157:7	157:7	7	failure
LEAF_NODE	157:7	157:7	8	failure
LEAF_NODE	157:14	157:14	7	;
LEAF_NODE	158:1	158:1	5	}
EXPR_STATEMENT	160:1	160:15	3	TIFFClose ( tif ) ;
EXPR	160:1	160:1	4	TIFFClose ( tif )
FUNCTION_CALL	160:1	160:14	5	TIFFClose ( tif )
CALLEE	160:1	160:1	6	TIFFClose
LEAF_NODE	160:1	160:1	7	TIFFClose
LEAF_NODE	160:10	160:10	6	(
ARGUMENT	160:11	160:11	6	tif
FIELD	160:11	160:11	7	tif
LEAF_NODE	160:11	160:11	8	tif
LEAF_NODE	160:14	160:14	6	)
LEAF_NODE	160:15	160:15	4	;
EXPR_STATEMENT	163:1	163:17	3	unlink ( filename ) ;
EXPR	163:1	163:1	4	unlink ( filename )
FUNCTION_CALL	163:1	163:16	5	unlink ( filename )
CALLEE	163:1	163:1	6	unlink
LEAF_NODE	163:1	163:1	7	unlink
LEAF_NODE	163:7	163:7	6	(
ARGUMENT	163:8	163:8	6	filename
FIELD	163:8	163:8	7	filename
LEAF_NODE	163:8	163:8	8	filename
LEAF_NODE	163:16	163:16	6	)
LEAF_NODE	163:17	163:17	4	;
JUMP_STATEMENT	164:1	164:9	3	return 0 ;
KEYWORD	164:1	164:1	4	return
LEAF_NODE	164:1	164:1	5	return
DESTINATION	164:8	164:8	4	0
EXPR	164:8	164:8	5	0
FIELD	164:8	164:8	6	0
LEAF_NODE	164:8	164:8	7	0
LEAF_NODE	164:9	164:9	4	;
LABEL	166:0	166:7	3	failure :
LEAF_NODE	166:0	166:0	4	failure
LEAF_NODE	166:7	166:7	4	:
EXPR_STATEMENT	171:1	171:15	3	TIFFClose ( tif ) ;
EXPR	171:1	171:1	4	TIFFClose ( tif )
FUNCTION_CALL	171:1	171:14	5	TIFFClose ( tif )
CALLEE	171:1	171:1	6	TIFFClose
LEAF_NODE	171:1	171:1	7	TIFFClose
LEAF_NODE	171:10	171:10	6	(
ARGUMENT	171:11	171:11	6	tif
FIELD	171:11	171:11	7	tif
LEAF_NODE	171:11	171:11	8	tif
LEAF_NODE	171:14	171:14	6	)
LEAF_NODE	171:15	171:15	4	;
JUMP_STATEMENT	172:1	172:9	3	return 1 ;
KEYWORD	172:1	172:1	4	return
LEAF_NODE	172:1	172:1	5	return
DESTINATION	172:8	172:8	4	1
EXPR	172:8	172:8	5	1
FIELD	172:8	172:8	6	1
LEAF_NODE	172:8	172:8	7	1
LEAF_NODE	172:9	172:9	4	;
LEAF_NODE	173:0	173:0	2	}
