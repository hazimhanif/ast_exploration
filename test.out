SOURCE_FILE	4:0	4:0	0	
FUNCTION_DEF	4:0	12:0	1	
RETURN_TYPE	4:0	4:0	2	int
TYPE_NAME	4:0	4:0	3	int
LEAF_NODE	4:0	4:0	4	int
FUNCTION_NAME	4:4	4:4	2	main
LEAF_NODE	4:4	4:4	3	main
PARAMETER_LIST	4:8	4:9	2	( )
LEAF_NODE	4:8	4:8	3	(
LEAF_NODE	4:9	4:9	3	)
LEAF_NODE	4:10	4:10	2	{
STATEMENTS	6:2	11:2	2	
SIMPLE_DECL	6:2	6:10	3	int x ; x = 22 ;
VAR_DECL	6:2	6:6	4	int x ; x = 22
TYPE	6:2	6:2	5	int
TYPE_NAME	6:2	6:2	6	int
LEAF_NODE	6:2	6:2	7	int
NAME	6:6	6:6	5	x
LEAF_NODE	6:6	6:6	6	x
LEAF_NODE	0:0	0:0	5	;
INIT	6:6	6:6	5	x = 22
ASSIGN	6:6	6:8	6	x = 22
LVAL	6:6	6:6	7	x
NAME	6:6	6:6	8	x
LEAF_NODE	6:6	6:6	9	x
ASSIGN_OP	6:7	6:7	7	=
LEAF_NODE	6:7	6:7	8	=
RVAL	6:8	6:8	7	22
FIELD	6:8	6:8	8	22
LEAF_NODE	6:8	6:8	9	22
LEAF_NODE	6:10	6:10	4	;
EXPR_STATEMENT	8:2	8:7	3	x = x + x ;
EXPR	8:2	8:2	4	x = x + x
ASSIGN	8:2	8:4	5	x = x + x
LVAL	8:2	8:2	6	x
FIELD	8:2	8:2	7	x
LEAF_NODE	8:2	8:2	8	x
ASSIGN_OP	8:3	8:3	6	=
LEAF_NODE	8:3	8:3	7	=
RVAL	8:4	8:6	6	x + x
FIELD	8:4	8:4	7	x
LEAF_NODE	8:4	8:4	8	x
LEAF_NODE	8:5	8:5	7	+
FIELD	8:6	8:6	7	x
LEAF_NODE	8:6	8:6	8	x
LEAF_NODE	8:7	8:7	4	;
EXPR_STATEMENT	9:2	9:16	3	printf ( "%d" , x ) ;
EXPR	9:2	9:2	4	printf ( "%d" , x )
FUNCTION_CALL	9:2	9:15	5	printf ( "%d" , x )
CALLEE	9:2	9:2	6	printf
LEAF_NODE	9:2	9:2	7	printf
LEAF_NODE	9:8	9:8	6	(
ARGUMENT	9:9	9:9	6	"%d"
FIELD	9:9	9:9	7	"%d"
LEAF_NODE	9:9	9:9	8	"%d"
LEAF_NODE	9:13	9:13	6	,
ARGUMENT	9:14	9:14	6	x
FIELD	9:14	9:14	7	x
LEAF_NODE	9:14	9:14	8	x
LEAF_NODE	9:15	9:15	6	)
LEAF_NODE	9:16	9:16	4	;
JUMP_STATEMENT	11:2	11:10	3	return 0 ;
KEYWORD	11:2	11:2	4	return
LEAF_NODE	11:2	11:2	5	return
DESTINATION	11:9	11:9	4	0
EXPR	11:9	11:9	5	0
FIELD	11:9	11:9	6	0
LEAF_NODE	11:9	11:9	7	0
LEAF_NODE	11:10	11:10	4	;
LEAF_NODE	12:0	12:0	2	}
